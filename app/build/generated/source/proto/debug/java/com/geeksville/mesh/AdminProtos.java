// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

package com.geeksville.mesh;

public final class AdminProtos {
  private AdminProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AdminMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AdminMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     * @return Whether the setRadio field is set.
     */
    boolean hasSetRadio();
    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     * @return The setRadio.
     */
    com.geeksville.mesh.RadioConfigProtos.RadioConfig getSetRadio();
    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     */
    com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getSetRadioOrBuilder();

    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     * @return Whether the setOwner field is set.
     */
    boolean hasSetOwner();
    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     * @return The setOwner.
     */
    com.geeksville.mesh.MeshProtos.User getSetOwner();
    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.UserOrBuilder getSetOwnerOrBuilder();

    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     * @return Whether the setChannel field is set.
     */
    boolean hasSetChannel();
    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     * @return The setChannel.
     */
    com.geeksville.mesh.ChannelProtos.Channel getSetChannel();
    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     */
    com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getSetChannelOrBuilder();

    /**
     * <pre>
     * Send the current RadioConfig in the response for this message.
     * </pre>
     *
     * <code>bool get_radio_request = 4;</code>
     * @return Whether the getRadioRequest field is set.
     */
    boolean hasGetRadioRequest();
    /**
     * <pre>
     * Send the current RadioConfig in the response for this message.
     * </pre>
     *
     * <code>bool get_radio_request = 4;</code>
     * @return The getRadioRequest.
     */
    boolean getGetRadioRequest();

    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     * @return Whether the getRadioResponse field is set.
     */
    boolean hasGetRadioResponse();
    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     * @return The getRadioResponse.
     */
    com.geeksville.mesh.RadioConfigProtos.RadioConfig getGetRadioResponse();
    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     */
    com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getGetRadioResponseOrBuilder();

    /**
     * <pre>
     * Send the specified channel in the response for this message
     * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
     * </pre>
     *
     * <code>uint32 get_channel_request = 6;</code>
     * @return Whether the getChannelRequest field is set.
     */
    boolean hasGetChannelRequest();
    /**
     * <pre>
     * Send the specified channel in the response for this message
     * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
     * </pre>
     *
     * <code>uint32 get_channel_request = 6;</code>
     * @return The getChannelRequest.
     */
    int getGetChannelRequest();

    /**
     * <code>.Channel get_channel_response = 7;</code>
     * @return Whether the getChannelResponse field is set.
     */
    boolean hasGetChannelResponse();
    /**
     * <code>.Channel get_channel_response = 7;</code>
     * @return The getChannelResponse.
     */
    com.geeksville.mesh.ChannelProtos.Channel getGetChannelResponse();
    /**
     * <code>.Channel get_channel_response = 7;</code>
     */
    com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getGetChannelResponseOrBuilder();

    /**
     * <pre>
     * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
     * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
     * If you fail to do so, the radio will assume loss of comms and revert your changes.
     * These messages are optional when changing the local node.
     * </pre>
     *
     * <code>bool confirm_set_channel = 32;</code>
     * @return Whether the confirmSetChannel field is set.
     */
    boolean hasConfirmSetChannel();
    /**
     * <pre>
     * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
     * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
     * If you fail to do so, the radio will assume loss of comms and revert your changes.
     * These messages are optional when changing the local node.
     * </pre>
     *
     * <code>bool confirm_set_channel = 32;</code>
     * @return The confirmSetChannel.
     */
    boolean getConfirmSetChannel();

    /**
     * <code>bool confirm_set_radio = 33;</code>
     * @return Whether the confirmSetRadio field is set.
     */
    boolean hasConfirmSetRadio();
    /**
     * <code>bool confirm_set_radio = 33;</code>
     * @return The confirmSetRadio.
     */
    boolean getConfirmSetRadio();

    /**
     * <pre>
     * This message is only supported for the simulator porduino build.
     * If received the simulator will exit successfully.
     * </pre>
     *
     * <code>bool exit_simulator = 34;</code>
     * @return Whether the exitSimulator field is set.
     */
    boolean hasExitSimulator();
    /**
     * <pre>
     * This message is only supported for the simulator porduino build.
     * If received the simulator will exit successfully.
     * </pre>
     *
     * <code>bool exit_simulator = 34;</code>
     * @return The exitSimulator.
     */
    boolean getExitSimulator();

    /**
     * <pre>
     * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
     * </pre>
     *
     * <code>int32 reboot_seconds = 35;</code>
     * @return Whether the rebootSeconds field is set.
     */
    boolean hasRebootSeconds();
    /**
     * <pre>
     * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
     * </pre>
     *
     * <code>int32 reboot_seconds = 35;</code>
     * @return The rebootSeconds.
     */
    int getRebootSeconds();

    public com.geeksville.mesh.AdminProtos.AdminMessage.VariantCase getVariantCase();
  }
  /**
   * <pre>
   * This message is handled by the Admin plugin and is responsible for all settings/channel read/write operations.
   * This message is used to do settings operations to both remote AND local nodes.
   * (Prior to 1.2 these operations were done via special ToRadio operations)
   * </pre>
   *
   * Protobuf type {@code AdminMessage}
   */
  public static final class AdminMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AdminMessage)
      AdminMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdminMessage.newBuilder() to construct.
    private AdminMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdminMessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdminMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AdminMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder subBuilder = null;
              if (variantCase_ == 1) {
                subBuilder = ((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.RadioConfigProtos.RadioConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 1;
              break;
            }
            case 18: {
              com.geeksville.mesh.MeshProtos.User.Builder subBuilder = null;
              if (variantCase_ == 2) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.User) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.User) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 2;
              break;
            }
            case 26: {
              com.geeksville.mesh.ChannelProtos.Channel.Builder subBuilder = null;
              if (variantCase_ == 3) {
                subBuilder = ((com.geeksville.mesh.ChannelProtos.Channel) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.ChannelProtos.Channel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.ChannelProtos.Channel) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 3;
              break;
            }
            case 32: {
              variantCase_ = 4;
              variant_ = input.readBool();
              break;
            }
            case 42: {
              com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder subBuilder = null;
              if (variantCase_ == 5) {
                subBuilder = ((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.RadioConfigProtos.RadioConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 5;
              break;
            }
            case 48: {
              variantCase_ = 6;
              variant_ = input.readUInt32();
              break;
            }
            case 58: {
              com.geeksville.mesh.ChannelProtos.Channel.Builder subBuilder = null;
              if (variantCase_ == 7) {
                subBuilder = ((com.geeksville.mesh.ChannelProtos.Channel) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.ChannelProtos.Channel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.ChannelProtos.Channel) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 7;
              break;
            }
            case 256: {
              variantCase_ = 32;
              variant_ = input.readBool();
              break;
            }
            case 264: {
              variantCase_ = 33;
              variant_ = input.readBool();
              break;
            }
            case 272: {
              variantCase_ = 34;
              variant_ = input.readBool();
              break;
            }
            case 280: {
              variantCase_ = 35;
              variant_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.AdminProtos.internal_static_AdminMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.AdminProtos.internal_static_AdminMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.AdminProtos.AdminMessage.class, com.geeksville.mesh.AdminProtos.AdminMessage.Builder.class);
    }

    private int variantCase_ = 0;
    private java.lang.Object variant_;
    public enum VariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SET_RADIO(1),
      SET_OWNER(2),
      SET_CHANNEL(3),
      GET_RADIO_REQUEST(4),
      GET_RADIO_RESPONSE(5),
      GET_CHANNEL_REQUEST(6),
      GET_CHANNEL_RESPONSE(7),
      CONFIRM_SET_CHANNEL(32),
      CONFIRM_SET_RADIO(33),
      EXIT_SIMULATOR(34),
      REBOOT_SECONDS(35),
      VARIANT_NOT_SET(0);
      private final int value;
      private VariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static VariantCase forNumber(int value) {
        switch (value) {
          case 1: return SET_RADIO;
          case 2: return SET_OWNER;
          case 3: return SET_CHANNEL;
          case 4: return GET_RADIO_REQUEST;
          case 5: return GET_RADIO_RESPONSE;
          case 6: return GET_CHANNEL_REQUEST;
          case 7: return GET_CHANNEL_RESPONSE;
          case 32: return CONFIRM_SET_CHANNEL;
          case 33: return CONFIRM_SET_RADIO;
          case 34: return EXIT_SIMULATOR;
          case 35: return REBOOT_SECONDS;
          case 0: return VARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VariantCase
    getVariantCase() {
      return VariantCase.forNumber(
          variantCase_);
    }

    public static final int SET_RADIO_FIELD_NUMBER = 1;
    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     * @return Whether the setRadio field is set.
     */
    @java.lang.Override
    public boolean hasSetRadio() {
      return variantCase_ == 1;
    }
    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     * @return The setRadio.
     */
    @java.lang.Override
    public com.geeksville.mesh.RadioConfigProtos.RadioConfig getSetRadio() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
      }
      return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
    }
    /**
     * <pre>
     * set the radio provisioning for this node
     * </pre>
     *
     * <code>.RadioConfig set_radio = 1;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getSetRadioOrBuilder() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
      }
      return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
    }

    public static final int SET_OWNER_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     * @return Whether the setOwner field is set.
     */
    @java.lang.Override
    public boolean hasSetOwner() {
      return variantCase_ == 2;
    }
    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     * @return The setOwner.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.User getSetOwner() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.User) variant_;
      }
      return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
    }
    /**
     * <pre>
     * Set the owner for this node
     * </pre>
     *
     * <code>.User set_owner = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.UserOrBuilder getSetOwnerOrBuilder() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.User) variant_;
      }
      return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
    }

    public static final int SET_CHANNEL_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     * @return Whether the setChannel field is set.
     */
    @java.lang.Override
    public boolean hasSetChannel() {
      return variantCase_ == 3;
    }
    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     * @return The setChannel.
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.Channel getSetChannel() {
      if (variantCase_ == 3) {
         return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }
    /**
     * <pre>
     * Set channels (using the new API).
     * A special channel is the "primary channel".
     * The other records are secondary channels.
     * Note: only one channel can be marked as primary.
     * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
     * </pre>
     *
     * <code>.Channel set_channel = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getSetChannelOrBuilder() {
      if (variantCase_ == 3) {
         return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }

    public static final int GET_RADIO_REQUEST_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Send the current RadioConfig in the response for this message.
     * </pre>
     *
     * <code>bool get_radio_request = 4;</code>
     * @return Whether the getRadioRequest field is set.
     */
    @java.lang.Override
    public boolean hasGetRadioRequest() {
      return variantCase_ == 4;
    }
    /**
     * <pre>
     * Send the current RadioConfig in the response for this message.
     * </pre>
     *
     * <code>bool get_radio_request = 4;</code>
     * @return The getRadioRequest.
     */
    @java.lang.Override
    public boolean getGetRadioRequest() {
      if (variantCase_ == 4) {
        return (java.lang.Boolean) variant_;
      }
      return false;
    }

    public static final int GET_RADIO_RESPONSE_FIELD_NUMBER = 5;
    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     * @return Whether the getRadioResponse field is set.
     */
    @java.lang.Override
    public boolean hasGetRadioResponse() {
      return variantCase_ == 5;
    }
    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     * @return The getRadioResponse.
     */
    @java.lang.Override
    public com.geeksville.mesh.RadioConfigProtos.RadioConfig getGetRadioResponse() {
      if (variantCase_ == 5) {
         return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
      }
      return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
    }
    /**
     * <code>.RadioConfig get_radio_response = 5;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getGetRadioResponseOrBuilder() {
      if (variantCase_ == 5) {
         return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
      }
      return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
    }

    public static final int GET_CHANNEL_REQUEST_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Send the specified channel in the response for this message
     * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
     * </pre>
     *
     * <code>uint32 get_channel_request = 6;</code>
     * @return Whether the getChannelRequest field is set.
     */
    @java.lang.Override
    public boolean hasGetChannelRequest() {
      return variantCase_ == 6;
    }
    /**
     * <pre>
     * Send the specified channel in the response for this message
     * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
     * </pre>
     *
     * <code>uint32 get_channel_request = 6;</code>
     * @return The getChannelRequest.
     */
    @java.lang.Override
    public int getGetChannelRequest() {
      if (variantCase_ == 6) {
        return (java.lang.Integer) variant_;
      }
      return 0;
    }

    public static final int GET_CHANNEL_RESPONSE_FIELD_NUMBER = 7;
    /**
     * <code>.Channel get_channel_response = 7;</code>
     * @return Whether the getChannelResponse field is set.
     */
    @java.lang.Override
    public boolean hasGetChannelResponse() {
      return variantCase_ == 7;
    }
    /**
     * <code>.Channel get_channel_response = 7;</code>
     * @return The getChannelResponse.
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.Channel getGetChannelResponse() {
      if (variantCase_ == 7) {
         return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }
    /**
     * <code>.Channel get_channel_response = 7;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getGetChannelResponseOrBuilder() {
      if (variantCase_ == 7) {
         return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }

    public static final int CONFIRM_SET_CHANNEL_FIELD_NUMBER = 32;
    /**
     * <pre>
     * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
     * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
     * If you fail to do so, the radio will assume loss of comms and revert your changes.
     * These messages are optional when changing the local node.
     * </pre>
     *
     * <code>bool confirm_set_channel = 32;</code>
     * @return Whether the confirmSetChannel field is set.
     */
    @java.lang.Override
    public boolean hasConfirmSetChannel() {
      return variantCase_ == 32;
    }
    /**
     * <pre>
     * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
     * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
     * If you fail to do so, the radio will assume loss of comms and revert your changes.
     * These messages are optional when changing the local node.
     * </pre>
     *
     * <code>bool confirm_set_channel = 32;</code>
     * @return The confirmSetChannel.
     */
    @java.lang.Override
    public boolean getConfirmSetChannel() {
      if (variantCase_ == 32) {
        return (java.lang.Boolean) variant_;
      }
      return false;
    }

    public static final int CONFIRM_SET_RADIO_FIELD_NUMBER = 33;
    /**
     * <code>bool confirm_set_radio = 33;</code>
     * @return Whether the confirmSetRadio field is set.
     */
    @java.lang.Override
    public boolean hasConfirmSetRadio() {
      return variantCase_ == 33;
    }
    /**
     * <code>bool confirm_set_radio = 33;</code>
     * @return The confirmSetRadio.
     */
    @java.lang.Override
    public boolean getConfirmSetRadio() {
      if (variantCase_ == 33) {
        return (java.lang.Boolean) variant_;
      }
      return false;
    }

    public static final int EXIT_SIMULATOR_FIELD_NUMBER = 34;
    /**
     * <pre>
     * This message is only supported for the simulator porduino build.
     * If received the simulator will exit successfully.
     * </pre>
     *
     * <code>bool exit_simulator = 34;</code>
     * @return Whether the exitSimulator field is set.
     */
    @java.lang.Override
    public boolean hasExitSimulator() {
      return variantCase_ == 34;
    }
    /**
     * <pre>
     * This message is only supported for the simulator porduino build.
     * If received the simulator will exit successfully.
     * </pre>
     *
     * <code>bool exit_simulator = 34;</code>
     * @return The exitSimulator.
     */
    @java.lang.Override
    public boolean getExitSimulator() {
      if (variantCase_ == 34) {
        return (java.lang.Boolean) variant_;
      }
      return false;
    }

    public static final int REBOOT_SECONDS_FIELD_NUMBER = 35;
    /**
     * <pre>
     * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
     * </pre>
     *
     * <code>int32 reboot_seconds = 35;</code>
     * @return Whether the rebootSeconds field is set.
     */
    @java.lang.Override
    public boolean hasRebootSeconds() {
      return variantCase_ == 35;
    }
    /**
     * <pre>
     * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
     * </pre>
     *
     * <code>int32 reboot_seconds = 35;</code>
     * @return The rebootSeconds.
     */
    @java.lang.Override
    public int getRebootSeconds() {
      if (variantCase_ == 35) {
        return (java.lang.Integer) variant_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (variantCase_ == 1) {
        output.writeMessage(1, (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
      }
      if (variantCase_ == 2) {
        output.writeMessage(2, (com.geeksville.mesh.MeshProtos.User) variant_);
      }
      if (variantCase_ == 3) {
        output.writeMessage(3, (com.geeksville.mesh.ChannelProtos.Channel) variant_);
      }
      if (variantCase_ == 4) {
        output.writeBool(
            4, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 5) {
        output.writeMessage(5, (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
      }
      if (variantCase_ == 6) {
        output.writeUInt32(
            6, (int)((java.lang.Integer) variant_));
      }
      if (variantCase_ == 7) {
        output.writeMessage(7, (com.geeksville.mesh.ChannelProtos.Channel) variant_);
      }
      if (variantCase_ == 32) {
        output.writeBool(
            32, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 33) {
        output.writeBool(
            33, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 34) {
        output.writeBool(
            34, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 35) {
        output.writeInt32(
            35, (int)((java.lang.Integer) variant_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (variantCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
      }
      if (variantCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.geeksville.mesh.MeshProtos.User) variant_);
      }
      if (variantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.geeksville.mesh.ChannelProtos.Channel) variant_);
      }
      if (variantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              4, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_);
      }
      if (variantCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              6, (int)((java.lang.Integer) variant_));
      }
      if (variantCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.geeksville.mesh.ChannelProtos.Channel) variant_);
      }
      if (variantCase_ == 32) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              32, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 33) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              33, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 34) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              34, (boolean)((java.lang.Boolean) variant_));
      }
      if (variantCase_ == 35) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              35, (int)((java.lang.Integer) variant_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.AdminProtos.AdminMessage)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.AdminProtos.AdminMessage other = (com.geeksville.mesh.AdminProtos.AdminMessage) obj;

      if (!getVariantCase().equals(other.getVariantCase())) return false;
      switch (variantCase_) {
        case 1:
          if (!getSetRadio()
              .equals(other.getSetRadio())) return false;
          break;
        case 2:
          if (!getSetOwner()
              .equals(other.getSetOwner())) return false;
          break;
        case 3:
          if (!getSetChannel()
              .equals(other.getSetChannel())) return false;
          break;
        case 4:
          if (getGetRadioRequest()
              != other.getGetRadioRequest()) return false;
          break;
        case 5:
          if (!getGetRadioResponse()
              .equals(other.getGetRadioResponse())) return false;
          break;
        case 6:
          if (getGetChannelRequest()
              != other.getGetChannelRequest()) return false;
          break;
        case 7:
          if (!getGetChannelResponse()
              .equals(other.getGetChannelResponse())) return false;
          break;
        case 32:
          if (getConfirmSetChannel()
              != other.getConfirmSetChannel()) return false;
          break;
        case 33:
          if (getConfirmSetRadio()
              != other.getConfirmSetRadio()) return false;
          break;
        case 34:
          if (getExitSimulator()
              != other.getExitSimulator()) return false;
          break;
        case 35:
          if (getRebootSeconds()
              != other.getRebootSeconds()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (variantCase_) {
        case 1:
          hash = (37 * hash) + SET_RADIO_FIELD_NUMBER;
          hash = (53 * hash) + getSetRadio().hashCode();
          break;
        case 2:
          hash = (37 * hash) + SET_OWNER_FIELD_NUMBER;
          hash = (53 * hash) + getSetOwner().hashCode();
          break;
        case 3:
          hash = (37 * hash) + SET_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getSetChannel().hashCode();
          break;
        case 4:
          hash = (37 * hash) + GET_RADIO_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getGetRadioRequest());
          break;
        case 5:
          hash = (37 * hash) + GET_RADIO_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetRadioResponse().hashCode();
          break;
        case 6:
          hash = (37 * hash) + GET_CHANNEL_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetChannelRequest();
          break;
        case 7:
          hash = (37 * hash) + GET_CHANNEL_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetChannelResponse().hashCode();
          break;
        case 32:
          hash = (37 * hash) + CONFIRM_SET_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getConfirmSetChannel());
          break;
        case 33:
          hash = (37 * hash) + CONFIRM_SET_RADIO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getConfirmSetRadio());
          break;
        case 34:
          hash = (37 * hash) + EXIT_SIMULATOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getExitSimulator());
          break;
        case 35:
          hash = (37 * hash) + REBOOT_SECONDS_FIELD_NUMBER;
          hash = (53 * hash) + getRebootSeconds();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.AdminProtos.AdminMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.AdminProtos.AdminMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message is handled by the Admin plugin and is responsible for all settings/channel read/write operations.
     * This message is used to do settings operations to both remote AND local nodes.
     * (Prior to 1.2 these operations were done via special ToRadio operations)
     * </pre>
     *
     * Protobuf type {@code AdminMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AdminMessage)
        com.geeksville.mesh.AdminProtos.AdminMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.AdminProtos.internal_static_AdminMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.AdminProtos.internal_static_AdminMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.AdminProtos.AdminMessage.class, com.geeksville.mesh.AdminProtos.AdminMessage.Builder.class);
      }

      // Construct using com.geeksville.mesh.AdminProtos.AdminMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        variantCase_ = 0;
        variant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.AdminProtos.internal_static_AdminMessage_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.AdminProtos.AdminMessage getDefaultInstanceForType() {
        return com.geeksville.mesh.AdminProtos.AdminMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.AdminProtos.AdminMessage build() {
        com.geeksville.mesh.AdminProtos.AdminMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.AdminProtos.AdminMessage buildPartial() {
        com.geeksville.mesh.AdminProtos.AdminMessage result = new com.geeksville.mesh.AdminProtos.AdminMessage(this);
        if (variantCase_ == 1) {
          if (setRadioBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = setRadioBuilder_.build();
          }
        }
        if (variantCase_ == 2) {
          if (setOwnerBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = setOwnerBuilder_.build();
          }
        }
        if (variantCase_ == 3) {
          if (setChannelBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = setChannelBuilder_.build();
          }
        }
        if (variantCase_ == 4) {
          result.variant_ = variant_;
        }
        if (variantCase_ == 5) {
          if (getRadioResponseBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = getRadioResponseBuilder_.build();
          }
        }
        if (variantCase_ == 6) {
          result.variant_ = variant_;
        }
        if (variantCase_ == 7) {
          if (getChannelResponseBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = getChannelResponseBuilder_.build();
          }
        }
        if (variantCase_ == 32) {
          result.variant_ = variant_;
        }
        if (variantCase_ == 33) {
          result.variant_ = variant_;
        }
        if (variantCase_ == 34) {
          result.variant_ = variant_;
        }
        if (variantCase_ == 35) {
          result.variant_ = variant_;
        }
        result.variantCase_ = variantCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.AdminProtos.AdminMessage) {
          return mergeFrom((com.geeksville.mesh.AdminProtos.AdminMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.AdminProtos.AdminMessage other) {
        if (other == com.geeksville.mesh.AdminProtos.AdminMessage.getDefaultInstance()) return this;
        switch (other.getVariantCase()) {
          case SET_RADIO: {
            mergeSetRadio(other.getSetRadio());
            break;
          }
          case SET_OWNER: {
            mergeSetOwner(other.getSetOwner());
            break;
          }
          case SET_CHANNEL: {
            mergeSetChannel(other.getSetChannel());
            break;
          }
          case GET_RADIO_REQUEST: {
            setGetRadioRequest(other.getGetRadioRequest());
            break;
          }
          case GET_RADIO_RESPONSE: {
            mergeGetRadioResponse(other.getGetRadioResponse());
            break;
          }
          case GET_CHANNEL_REQUEST: {
            setGetChannelRequest(other.getGetChannelRequest());
            break;
          }
          case GET_CHANNEL_RESPONSE: {
            mergeGetChannelResponse(other.getGetChannelResponse());
            break;
          }
          case CONFIRM_SET_CHANNEL: {
            setConfirmSetChannel(other.getConfirmSetChannel());
            break;
          }
          case CONFIRM_SET_RADIO: {
            setConfirmSetRadio(other.getConfirmSetRadio());
            break;
          }
          case EXIT_SIMULATOR: {
            setExitSimulator(other.getExitSimulator());
            break;
          }
          case REBOOT_SECONDS: {
            setRebootSeconds(other.getRebootSeconds());
            break;
          }
          case VARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.AdminProtos.AdminMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.AdminProtos.AdminMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int variantCase_ = 0;
      private java.lang.Object variant_;
      public VariantCase
          getVariantCase() {
        return VariantCase.forNumber(
            variantCase_);
      }

      public Builder clearVariant() {
        variantCase_ = 0;
        variant_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder> setRadioBuilder_;
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       * @return Whether the setRadio field is set.
       */
      @java.lang.Override
      public boolean hasSetRadio() {
        return variantCase_ == 1;
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       * @return The setRadio.
       */
      @java.lang.Override
      public com.geeksville.mesh.RadioConfigProtos.RadioConfig getSetRadio() {
        if (setRadioBuilder_ == null) {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        } else {
          if (variantCase_ == 1) {
            return setRadioBuilder_.getMessage();
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      public Builder setSetRadio(com.geeksville.mesh.RadioConfigProtos.RadioConfig value) {
        if (setRadioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          setRadioBuilder_.setMessage(value);
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      public Builder setSetRadio(
          com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder builderForValue) {
        if (setRadioBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          setRadioBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      public Builder mergeSetRadio(com.geeksville.mesh.RadioConfigProtos.RadioConfig value) {
        if (setRadioBuilder_ == null) {
          if (variantCase_ == 1 &&
              variant_ != com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.RadioConfigProtos.RadioConfig.newBuilder((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 1) {
            setRadioBuilder_.mergeFrom(value);
          }
          setRadioBuilder_.setMessage(value);
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      public Builder clearSetRadio() {
        if (setRadioBuilder_ == null) {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
          }
          setRadioBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      public com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder getSetRadioBuilder() {
        return getSetRadioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getSetRadioOrBuilder() {
        if ((variantCase_ == 1) && (setRadioBuilder_ != null)) {
          return setRadioBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * set the radio provisioning for this node
       * </pre>
       *
       * <code>.RadioConfig set_radio = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder> 
          getSetRadioFieldBuilder() {
        if (setRadioBuilder_ == null) {
          if (!(variantCase_ == 1)) {
            variant_ = com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
          }
          setRadioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder>(
                  (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 1;
        onChanged();;
        return setRadioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> setOwnerBuilder_;
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       * @return Whether the setOwner field is set.
       */
      @java.lang.Override
      public boolean hasSetOwner() {
        return variantCase_ == 2;
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       * @return The setOwner.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User getSetOwner() {
        if (setOwnerBuilder_ == null) {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.User) variant_;
          }
          return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
        } else {
          if (variantCase_ == 2) {
            return setOwnerBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      public Builder setSetOwner(com.geeksville.mesh.MeshProtos.User value) {
        if (setOwnerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          setOwnerBuilder_.setMessage(value);
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      public Builder setSetOwner(
          com.geeksville.mesh.MeshProtos.User.Builder builderForValue) {
        if (setOwnerBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          setOwnerBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      public Builder mergeSetOwner(com.geeksville.mesh.MeshProtos.User value) {
        if (setOwnerBuilder_ == null) {
          if (variantCase_ == 2 &&
              variant_ != com.geeksville.mesh.MeshProtos.User.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.MeshProtos.User.newBuilder((com.geeksville.mesh.MeshProtos.User) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 2) {
            setOwnerBuilder_.mergeFrom(value);
          }
          setOwnerBuilder_.setMessage(value);
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      public Builder clearSetOwner() {
        if (setOwnerBuilder_ == null) {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
          }
          setOwnerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.User.Builder getSetOwnerBuilder() {
        return getSetOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.UserOrBuilder getSetOwnerOrBuilder() {
        if ((variantCase_ == 2) && (setOwnerBuilder_ != null)) {
          return setOwnerBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.User) variant_;
          }
          return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set the owner for this node
       * </pre>
       *
       * <code>.User set_owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> 
          getSetOwnerFieldBuilder() {
        if (setOwnerBuilder_ == null) {
          if (!(variantCase_ == 2)) {
            variant_ = com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
          }
          setOwnerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.User) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 2;
        onChanged();;
        return setOwnerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> setChannelBuilder_;
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       * @return Whether the setChannel field is set.
       */
      @java.lang.Override
      public boolean hasSetChannel() {
        return variantCase_ == 3;
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       * @return The setChannel.
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.Channel getSetChannel() {
        if (setChannelBuilder_ == null) {
          if (variantCase_ == 3) {
            return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        } else {
          if (variantCase_ == 3) {
            return setChannelBuilder_.getMessage();
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      public Builder setSetChannel(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (setChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          setChannelBuilder_.setMessage(value);
        }
        variantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      public Builder setSetChannel(
          com.geeksville.mesh.ChannelProtos.Channel.Builder builderForValue) {
        if (setChannelBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          setChannelBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      public Builder mergeSetChannel(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (setChannelBuilder_ == null) {
          if (variantCase_ == 3 &&
              variant_ != com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.ChannelProtos.Channel.newBuilder((com.geeksville.mesh.ChannelProtos.Channel) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 3) {
            setChannelBuilder_.mergeFrom(value);
          }
          setChannelBuilder_.setMessage(value);
        }
        variantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      public Builder clearSetChannel() {
        if (setChannelBuilder_ == null) {
          if (variantCase_ == 3) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 3) {
            variantCase_ = 0;
            variant_ = null;
          }
          setChannelBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      public com.geeksville.mesh.ChannelProtos.Channel.Builder getSetChannelBuilder() {
        return getSetChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getSetChannelOrBuilder() {
        if ((variantCase_ == 3) && (setChannelBuilder_ != null)) {
          return setChannelBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 3) {
            return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set channels (using the new API).
       * A special channel is the "primary channel".
       * The other records are secondary channels.
       * Note: only one channel can be marked as primary.
       * If the client sets a particular channel to be primary, the previous channel will be set to SECONDARY automatically.
       * </pre>
       *
       * <code>.Channel set_channel = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> 
          getSetChannelFieldBuilder() {
        if (setChannelBuilder_ == null) {
          if (!(variantCase_ == 3)) {
            variant_ = com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
          }
          setChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder>(
                  (com.geeksville.mesh.ChannelProtos.Channel) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 3;
        onChanged();;
        return setChannelBuilder_;
      }

      /**
       * <pre>
       * Send the current RadioConfig in the response for this message.
       * </pre>
       *
       * <code>bool get_radio_request = 4;</code>
       * @return Whether the getRadioRequest field is set.
       */
      public boolean hasGetRadioRequest() {
        return variantCase_ == 4;
      }
      /**
       * <pre>
       * Send the current RadioConfig in the response for this message.
       * </pre>
       *
       * <code>bool get_radio_request = 4;</code>
       * @return The getRadioRequest.
       */
      public boolean getGetRadioRequest() {
        if (variantCase_ == 4) {
          return (java.lang.Boolean) variant_;
        }
        return false;
      }
      /**
       * <pre>
       * Send the current RadioConfig in the response for this message.
       * </pre>
       *
       * <code>bool get_radio_request = 4;</code>
       * @param value The getRadioRequest to set.
       * @return This builder for chaining.
       */
      public Builder setGetRadioRequest(boolean value) {
        variantCase_ = 4;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Send the current RadioConfig in the response for this message.
       * </pre>
       *
       * <code>bool get_radio_request = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGetRadioRequest() {
        if (variantCase_ == 4) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder> getRadioResponseBuilder_;
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       * @return Whether the getRadioResponse field is set.
       */
      @java.lang.Override
      public boolean hasGetRadioResponse() {
        return variantCase_ == 5;
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       * @return The getRadioResponse.
       */
      @java.lang.Override
      public com.geeksville.mesh.RadioConfigProtos.RadioConfig getGetRadioResponse() {
        if (getRadioResponseBuilder_ == null) {
          if (variantCase_ == 5) {
            return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        } else {
          if (variantCase_ == 5) {
            return getRadioResponseBuilder_.getMessage();
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      public Builder setGetRadioResponse(com.geeksville.mesh.RadioConfigProtos.RadioConfig value) {
        if (getRadioResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          getRadioResponseBuilder_.setMessage(value);
        }
        variantCase_ = 5;
        return this;
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      public Builder setGetRadioResponse(
          com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder builderForValue) {
        if (getRadioResponseBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          getRadioResponseBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 5;
        return this;
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      public Builder mergeGetRadioResponse(com.geeksville.mesh.RadioConfigProtos.RadioConfig value) {
        if (getRadioResponseBuilder_ == null) {
          if (variantCase_ == 5 &&
              variant_ != com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.RadioConfigProtos.RadioConfig.newBuilder((com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 5) {
            getRadioResponseBuilder_.mergeFrom(value);
          }
          getRadioResponseBuilder_.setMessage(value);
        }
        variantCase_ = 5;
        return this;
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      public Builder clearGetRadioResponse() {
        if (getRadioResponseBuilder_ == null) {
          if (variantCase_ == 5) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 5) {
            variantCase_ = 0;
            variant_ = null;
          }
          getRadioResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      public com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder getGetRadioResponseBuilder() {
        return getGetRadioResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder getGetRadioResponseOrBuilder() {
        if ((variantCase_ == 5) && (getRadioResponseBuilder_ != null)) {
          return getRadioResponseBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 5) {
            return (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_;
          }
          return com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.RadioConfig get_radio_response = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder> 
          getGetRadioResponseFieldBuilder() {
        if (getRadioResponseBuilder_ == null) {
          if (!(variantCase_ == 5)) {
            variant_ = com.geeksville.mesh.RadioConfigProtos.RadioConfig.getDefaultInstance();
          }
          getRadioResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.RadioConfigProtos.RadioConfig, com.geeksville.mesh.RadioConfigProtos.RadioConfig.Builder, com.geeksville.mesh.RadioConfigProtos.RadioConfigOrBuilder>(
                  (com.geeksville.mesh.RadioConfigProtos.RadioConfig) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 5;
        onChanged();;
        return getRadioResponseBuilder_;
      }

      /**
       * <pre>
       * Send the specified channel in the response for this message
       * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
       * </pre>
       *
       * <code>uint32 get_channel_request = 6;</code>
       * @return Whether the getChannelRequest field is set.
       */
      public boolean hasGetChannelRequest() {
        return variantCase_ == 6;
      }
      /**
       * <pre>
       * Send the specified channel in the response for this message
       * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
       * </pre>
       *
       * <code>uint32 get_channel_request = 6;</code>
       * @return The getChannelRequest.
       */
      public int getGetChannelRequest() {
        if (variantCase_ == 6) {
          return (java.lang.Integer) variant_;
        }
        return 0;
      }
      /**
       * <pre>
       * Send the specified channel in the response for this message
       * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
       * </pre>
       *
       * <code>uint32 get_channel_request = 6;</code>
       * @param value The getChannelRequest to set.
       * @return This builder for chaining.
       */
      public Builder setGetChannelRequest(int value) {
        variantCase_ = 6;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Send the specified channel in the response for this message
       * NOTE: This field is sent with the channel index + 1 (to ensure we never try to send 'zero' - which protobufs treats as not present)
       * </pre>
       *
       * <code>uint32 get_channel_request = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGetChannelRequest() {
        if (variantCase_ == 6) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> getChannelResponseBuilder_;
      /**
       * <code>.Channel get_channel_response = 7;</code>
       * @return Whether the getChannelResponse field is set.
       */
      @java.lang.Override
      public boolean hasGetChannelResponse() {
        return variantCase_ == 7;
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       * @return The getChannelResponse.
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.Channel getGetChannelResponse() {
        if (getChannelResponseBuilder_ == null) {
          if (variantCase_ == 7) {
            return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        } else {
          if (variantCase_ == 7) {
            return getChannelResponseBuilder_.getMessage();
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      public Builder setGetChannelResponse(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (getChannelResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          getChannelResponseBuilder_.setMessage(value);
        }
        variantCase_ = 7;
        return this;
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      public Builder setGetChannelResponse(
          com.geeksville.mesh.ChannelProtos.Channel.Builder builderForValue) {
        if (getChannelResponseBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          getChannelResponseBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 7;
        return this;
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      public Builder mergeGetChannelResponse(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (getChannelResponseBuilder_ == null) {
          if (variantCase_ == 7 &&
              variant_ != com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.ChannelProtos.Channel.newBuilder((com.geeksville.mesh.ChannelProtos.Channel) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 7) {
            getChannelResponseBuilder_.mergeFrom(value);
          }
          getChannelResponseBuilder_.setMessage(value);
        }
        variantCase_ = 7;
        return this;
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      public Builder clearGetChannelResponse() {
        if (getChannelResponseBuilder_ == null) {
          if (variantCase_ == 7) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 7) {
            variantCase_ = 0;
            variant_ = null;
          }
          getChannelResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      public com.geeksville.mesh.ChannelProtos.Channel.Builder getGetChannelResponseBuilder() {
        return getGetChannelResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getGetChannelResponseOrBuilder() {
        if ((variantCase_ == 7) && (getChannelResponseBuilder_ != null)) {
          return getChannelResponseBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 7) {
            return (com.geeksville.mesh.ChannelProtos.Channel) variant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <code>.Channel get_channel_response = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> 
          getGetChannelResponseFieldBuilder() {
        if (getChannelResponseBuilder_ == null) {
          if (!(variantCase_ == 7)) {
            variant_ = com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
          }
          getChannelResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder>(
                  (com.geeksville.mesh.ChannelProtos.Channel) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 7;
        onChanged();;
        return getChannelResponseBuilder_;
      }

      /**
       * <pre>
       * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
       * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
       * If you fail to do so, the radio will assume loss of comms and revert your changes.
       * These messages are optional when changing the local node.
       * </pre>
       *
       * <code>bool confirm_set_channel = 32;</code>
       * @return Whether the confirmSetChannel field is set.
       */
      public boolean hasConfirmSetChannel() {
        return variantCase_ == 32;
      }
      /**
       * <pre>
       * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
       * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
       * If you fail to do so, the radio will assume loss of comms and revert your changes.
       * These messages are optional when changing the local node.
       * </pre>
       *
       * <code>bool confirm_set_channel = 32;</code>
       * @return The confirmSetChannel.
       */
      public boolean getConfirmSetChannel() {
        if (variantCase_ == 32) {
          return (java.lang.Boolean) variant_;
        }
        return false;
      }
      /**
       * <pre>
       * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
       * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
       * If you fail to do so, the radio will assume loss of comms and revert your changes.
       * These messages are optional when changing the local node.
       * </pre>
       *
       * <code>bool confirm_set_channel = 32;</code>
       * @param value The confirmSetChannel to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmSetChannel(boolean value) {
        variantCase_ = 32;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Setting channels/radio config remotely carries the risk that you might send an invalid config and the radio never talks to your mesh again.
       * Therefore if setting either of these properties remotely, you must send a confirm_xxx message within 10 minutes.
       * If you fail to do so, the radio will assume loss of comms and revert your changes.
       * These messages are optional when changing the local node.
       * </pre>
       *
       * <code>bool confirm_set_channel = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmSetChannel() {
        if (variantCase_ == 32) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool confirm_set_radio = 33;</code>
       * @return Whether the confirmSetRadio field is set.
       */
      public boolean hasConfirmSetRadio() {
        return variantCase_ == 33;
      }
      /**
       * <code>bool confirm_set_radio = 33;</code>
       * @return The confirmSetRadio.
       */
      public boolean getConfirmSetRadio() {
        if (variantCase_ == 33) {
          return (java.lang.Boolean) variant_;
        }
        return false;
      }
      /**
       * <code>bool confirm_set_radio = 33;</code>
       * @param value The confirmSetRadio to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmSetRadio(boolean value) {
        variantCase_ = 33;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool confirm_set_radio = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmSetRadio() {
        if (variantCase_ == 33) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * This message is only supported for the simulator porduino build.
       * If received the simulator will exit successfully.
       * </pre>
       *
       * <code>bool exit_simulator = 34;</code>
       * @return Whether the exitSimulator field is set.
       */
      public boolean hasExitSimulator() {
        return variantCase_ == 34;
      }
      /**
       * <pre>
       * This message is only supported for the simulator porduino build.
       * If received the simulator will exit successfully.
       * </pre>
       *
       * <code>bool exit_simulator = 34;</code>
       * @return The exitSimulator.
       */
      public boolean getExitSimulator() {
        if (variantCase_ == 34) {
          return (java.lang.Boolean) variant_;
        }
        return false;
      }
      /**
       * <pre>
       * This message is only supported for the simulator porduino build.
       * If received the simulator will exit successfully.
       * </pre>
       *
       * <code>bool exit_simulator = 34;</code>
       * @param value The exitSimulator to set.
       * @return This builder for chaining.
       */
      public Builder setExitSimulator(boolean value) {
        variantCase_ = 34;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This message is only supported for the simulator porduino build.
       * If received the simulator will exit successfully.
       * </pre>
       *
       * <code>bool exit_simulator = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearExitSimulator() {
        if (variantCase_ == 34) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
       * </pre>
       *
       * <code>int32 reboot_seconds = 35;</code>
       * @return Whether the rebootSeconds field is set.
       */
      public boolean hasRebootSeconds() {
        return variantCase_ == 35;
      }
      /**
       * <pre>
       * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
       * </pre>
       *
       * <code>int32 reboot_seconds = 35;</code>
       * @return The rebootSeconds.
       */
      public int getRebootSeconds() {
        if (variantCase_ == 35) {
          return (java.lang.Integer) variant_;
        }
        return 0;
      }
      /**
       * <pre>
       * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
       * </pre>
       *
       * <code>int32 reboot_seconds = 35;</code>
       * @param value The rebootSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setRebootSeconds(int value) {
        variantCase_ = 35;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tell the node to reboot in this many seconds (or &lt;0 to cancel reboot)
       * </pre>
       *
       * <code>int32 reboot_seconds = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearRebootSeconds() {
        if (variantCase_ == 35) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AdminMessage)
    }

    // @@protoc_insertion_point(class_scope:AdminMessage)
    private static final com.geeksville.mesh.AdminProtos.AdminMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.AdminProtos.AdminMessage();
    }

    public static com.geeksville.mesh.AdminProtos.AdminMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdminMessage>
        PARSER = new com.google.protobuf.AbstractParser<AdminMessage>() {
      @java.lang.Override
      public AdminMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdminMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AdminMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdminMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.AdminProtos.AdminMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AdminMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AdminMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013admin.proto\032\nmesh.proto\032\021radioconfig.p" +
      "roto\032\rchannel.proto\"\373\002\n\014AdminMessage\022!\n\t" +
      "set_radio\030\001 \001(\0132\014.RadioConfigH\000\022\032\n\tset_o" +
      "wner\030\002 \001(\0132\005.UserH\000\022\037\n\013set_channel\030\003 \001(\013" +
      "2\010.ChannelH\000\022\033\n\021get_radio_request\030\004 \001(\010H" +
      "\000\022*\n\022get_radio_response\030\005 \001(\0132\014.RadioCon" +
      "figH\000\022\035\n\023get_channel_request\030\006 \001(\rH\000\022(\n\024" +
      "get_channel_response\030\007 \001(\0132\010.ChannelH\000\022\035" +
      "\n\023confirm_set_channel\030  \001(\010H\000\022\033\n\021confirm" +
      "_set_radio\030! \001(\010H\000\022\030\n\016exit_simulator\030\" \001" +
      "(\010H\000\022\030\n\016reboot_seconds\030# \001(\005H\000B\t\n\007varian" +
      "tBG\n\023com.geeksville.meshB\013AdminProtosH\003Z" +
      "!github.com/meshtastic/gomeshprotob\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.geeksville.mesh.MeshProtos.getDescriptor(),
          com.geeksville.mesh.RadioConfigProtos.getDescriptor(),
          com.geeksville.mesh.ChannelProtos.getDescriptor(),
        });
    internal_static_AdminMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_AdminMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AdminMessage_descriptor,
        new java.lang.String[] { "SetRadio", "SetOwner", "SetChannel", "GetRadioRequest", "GetRadioResponse", "GetChannelRequest", "GetChannelResponse", "ConfirmSetChannel", "ConfirmSetRadio", "ExitSimulator", "RebootSeconds", "Variant", });
    com.geeksville.mesh.MeshProtos.getDescriptor();
    com.geeksville.mesh.RadioConfigProtos.getDescriptor();
    com.geeksville.mesh.ChannelProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
