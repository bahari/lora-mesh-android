// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh.proto

package com.geeksville.mesh;

public final class MeshProtos {
  private MeshProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Note: these enum names must EXACTLY match the string used in the device
   * bin/build-all.sh script.
   * Because they will be used to find firmware filenames in the android app for OTA updates.
   * To match the old style filenames, _ is converted to -, p is converted to .
   * </pre>
   *
   * Protobuf enum {@code HardwareModel}
   */
  public enum HardwareModel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSET = 0;</code>
     */
    UNSET(0),
    /**
     * <code>TLORA_V2 = 1;</code>
     */
    TLORA_V2(1),
    /**
     * <code>TLORA_V1 = 2;</code>
     */
    TLORA_V1(2),
    /**
     * <code>TLORA_V2_1_1p6 = 3;</code>
     */
    TLORA_V2_1_1p6(3),
    /**
     * <code>TBEAM = 4;</code>
     */
    TBEAM(4),
    /**
     * <pre>
     * The original heltec WiFi_Lora_32_V2, which had battery voltage sensing hooked to GPIO 13 (see HELTEC_V2 for the new version).  
     * </pre>
     *
     * <code>HELTEC_V2_0 = 5;</code>
     */
    HELTEC_V2_0(5),
    /**
     * <code>TBEAM0p7 = 6;</code>
     */
    TBEAM0p7(6),
    /**
     * <code>T_ECHO = 7;</code>
     */
    T_ECHO(7),
    /**
     * <code>TLORA_V1_1p3 = 8;</code>
     */
    TLORA_V1_1p3(8),
    /**
     * <code>RAK4631 = 9;</code>
     */
    RAK4631(9),
    /**
     * <pre>
     * The new version of the heltec WiFi_Lora_32_V2 board that has battery sensing hooked to GPIO 37.  Sadly they did not update anything on the silkscreen to identify this board
     * </pre>
     *
     * <code>HELTEC_V2_1 = 10;</code>
     */
    HELTEC_V2_1(10),
    /**
     * <pre>
     * Less common/prototype boards listed here (needs one more byte over the air)
     * </pre>
     *
     * <code>LORA_RELAY_V1 = 32;</code>
     */
    LORA_RELAY_V1(32),
    /**
     * <code>NRF52840DK = 33;</code>
     */
    NRF52840DK(33),
    /**
     * <code>PPR = 34;</code>
     */
    PPR(34),
    /**
     * <code>GENIEBLOCKS = 35;</code>
     */
    GENIEBLOCKS(35),
    /**
     * <code>NRF52_UNKNOWN = 36;</code>
     */
    NRF52_UNKNOWN(36),
    /**
     * <code>PORTDUINO = 37;</code>
     */
    PORTDUINO(37),
    /**
     * <pre>
     * The simulator built into the android app
     * </pre>
     *
     * <code>ANDROID_SIM = 38;</code>
     */
    ANDROID_SIM(38),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSET = 0;</code>
     */
    public static final int UNSET_VALUE = 0;
    /**
     * <code>TLORA_V2 = 1;</code>
     */
    public static final int TLORA_V2_VALUE = 1;
    /**
     * <code>TLORA_V1 = 2;</code>
     */
    public static final int TLORA_V1_VALUE = 2;
    /**
     * <code>TLORA_V2_1_1p6 = 3;</code>
     */
    public static final int TLORA_V2_1_1p6_VALUE = 3;
    /**
     * <code>TBEAM = 4;</code>
     */
    public static final int TBEAM_VALUE = 4;
    /**
     * <pre>
     * The original heltec WiFi_Lora_32_V2, which had battery voltage sensing hooked to GPIO 13 (see HELTEC_V2 for the new version).  
     * </pre>
     *
     * <code>HELTEC_V2_0 = 5;</code>
     */
    public static final int HELTEC_V2_0_VALUE = 5;
    /**
     * <code>TBEAM0p7 = 6;</code>
     */
    public static final int TBEAM0p7_VALUE = 6;
    /**
     * <code>T_ECHO = 7;</code>
     */
    public static final int T_ECHO_VALUE = 7;
    /**
     * <code>TLORA_V1_1p3 = 8;</code>
     */
    public static final int TLORA_V1_1p3_VALUE = 8;
    /**
     * <code>RAK4631 = 9;</code>
     */
    public static final int RAK4631_VALUE = 9;
    /**
     * <pre>
     * The new version of the heltec WiFi_Lora_32_V2 board that has battery sensing hooked to GPIO 37.  Sadly they did not update anything on the silkscreen to identify this board
     * </pre>
     *
     * <code>HELTEC_V2_1 = 10;</code>
     */
    public static final int HELTEC_V2_1_VALUE = 10;
    /**
     * <pre>
     * Less common/prototype boards listed here (needs one more byte over the air)
     * </pre>
     *
     * <code>LORA_RELAY_V1 = 32;</code>
     */
    public static final int LORA_RELAY_V1_VALUE = 32;
    /**
     * <code>NRF52840DK = 33;</code>
     */
    public static final int NRF52840DK_VALUE = 33;
    /**
     * <code>PPR = 34;</code>
     */
    public static final int PPR_VALUE = 34;
    /**
     * <code>GENIEBLOCKS = 35;</code>
     */
    public static final int GENIEBLOCKS_VALUE = 35;
    /**
     * <code>NRF52_UNKNOWN = 36;</code>
     */
    public static final int NRF52_UNKNOWN_VALUE = 36;
    /**
     * <code>PORTDUINO = 37;</code>
     */
    public static final int PORTDUINO_VALUE = 37;
    /**
     * <pre>
     * The simulator built into the android app
     * </pre>
     *
     * <code>ANDROID_SIM = 38;</code>
     */
    public static final int ANDROID_SIM_VALUE = 38;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HardwareModel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HardwareModel forNumber(int value) {
      switch (value) {
        case 0: return UNSET;
        case 1: return TLORA_V2;
        case 2: return TLORA_V1;
        case 3: return TLORA_V2_1_1p6;
        case 4: return TBEAM;
        case 5: return HELTEC_V2_0;
        case 6: return TBEAM0p7;
        case 7: return T_ECHO;
        case 8: return TLORA_V1_1p3;
        case 9: return RAK4631;
        case 10: return HELTEC_V2_1;
        case 32: return LORA_RELAY_V1;
        case 33: return NRF52840DK;
        case 34: return PPR;
        case 35: return GENIEBLOCKS;
        case 36: return NRF52_UNKNOWN;
        case 37: return PORTDUINO;
        case 38: return ANDROID_SIM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HardwareModel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HardwareModel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HardwareModel>() {
            public HardwareModel findValueByNumber(int number) {
              return HardwareModel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final HardwareModel[] VALUES = values();

    public static HardwareModel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HardwareModel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:HardwareModel)
  }

  /**
   * <pre>
   * Shared constants between device and phone
   * </pre>
   *
   * Protobuf enum {@code Constants}
   */
  public enum Constants
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * First enum must be zero, and we are just using this enum to
     * pass int constants between two very different environments
     * </pre>
     *
     * <code>Unused = 0;</code>
     */
    Unused(0),
    /**
     * <pre>
     * From mesh.options
     * note: this payload length is ONLY the bytes that are sent inside of the Data protobuf (excluding protobuf overhead). The 16 byte header is
     * outside of this envelope
     * </pre>
     *
     * <code>DATA_PAYLOAD_LEN = 237;</code>
     */
    DATA_PAYLOAD_LEN(237),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * First enum must be zero, and we are just using this enum to
     * pass int constants between two very different environments
     * </pre>
     *
     * <code>Unused = 0;</code>
     */
    public static final int Unused_VALUE = 0;
    /**
     * <pre>
     * From mesh.options
     * note: this payload length is ONLY the bytes that are sent inside of the Data protobuf (excluding protobuf overhead). The 16 byte header is
     * outside of this envelope
     * </pre>
     *
     * <code>DATA_PAYLOAD_LEN = 237;</code>
     */
    public static final int DATA_PAYLOAD_LEN_VALUE = 237;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Constants valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Constants forNumber(int value) {
      switch (value) {
        case 0: return Unused;
        case 237: return DATA_PAYLOAD_LEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Constants>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Constants> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Constants>() {
            public Constants findValueByNumber(int number) {
              return Constants.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final Constants[] VALUES = values();

    public static Constants valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Constants(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Constants)
  }

  /**
   * <pre>
   * Error codes for critical errors
   * The device might report these fault codes on the screen.
   * If you encounter a fault code, please post on the meshtastic.discourse.group
   * and we'll try to help.
   * </pre>
   *
   * Protobuf enum {@code CriticalErrorCode}
   */
  public enum CriticalErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>None = 0;</code>
     */
    None(0),
    /**
     * <pre>
     * A software bug was detected while trying to send lora
     * </pre>
     *
     * <code>TxWatchdog = 1;</code>
     */
    TxWatchdog(1),
    /**
     * <pre>
     * A software bug was detected on entry to sleep
     * </pre>
     *
     * <code>SleepEnterWait = 2;</code>
     */
    SleepEnterWait(2),
    /**
     * <pre>
     * No Lora radio hardware could be found
     * </pre>
     *
     * <code>NoRadio = 3;</code>
     */
    NoRadio(3),
    /**
     * <pre>
     * Not normally used
     * </pre>
     *
     * <code>Unspecified = 4;</code>
     */
    Unspecified(4),
    /**
     * <pre>
     * We failed while configuring a UBlox GPS
     * </pre>
     *
     * <code>UBloxInitFailed = 5;</code>
     */
    UBloxInitFailed(5),
    /**
     * <pre>
     * This board was expected to have a power management chip and it is missing or broken
     * </pre>
     *
     * <code>NoAXP192 = 6;</code>
     */
    NoAXP192(6),
    /**
     * <pre>
     * The channel tried to set a radio setting which is not supported by this chipset,
     * radio comms settings are now undefined.
     * </pre>
     *
     * <code>InvalidRadioSetting = 7;</code>
     */
    InvalidRadioSetting(7),
    /**
     * <pre>
     * Radio transmit hardware failure. We sent data to the radio chip, but it didn't
     * reply with an interrupt.
     * </pre>
     *
     * <code>TransmitFailed = 8;</code>
     */
    TransmitFailed(8),
    /**
     * <pre>
     * We detected that the main CPU voltage dropped below the minumum acceptable value
     * </pre>
     *
     * <code>Brownout = 9;</code>
     */
    Brownout(9),
    /**
     * <pre>
     * Selftest of SX1262 radio chip failed 
     * </pre>
     *
     * <code>SX1262Failure = 10;</code>
     */
    SX1262Failure(10),
    /**
     * <pre>
     * A (likely software but possibly hardware) failure was detected while trying to send packets. If this occurs on your board, please
     *post in the forum so that we can ask you to collect some information to allow fixing this bug 
     * </pre>
     *
     * <code>RadioSpiBug = 11;</code>
     */
    RadioSpiBug(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>None = 0;</code>
     */
    public static final int None_VALUE = 0;
    /**
     * <pre>
     * A software bug was detected while trying to send lora
     * </pre>
     *
     * <code>TxWatchdog = 1;</code>
     */
    public static final int TxWatchdog_VALUE = 1;
    /**
     * <pre>
     * A software bug was detected on entry to sleep
     * </pre>
     *
     * <code>SleepEnterWait = 2;</code>
     */
    public static final int SleepEnterWait_VALUE = 2;
    /**
     * <pre>
     * No Lora radio hardware could be found
     * </pre>
     *
     * <code>NoRadio = 3;</code>
     */
    public static final int NoRadio_VALUE = 3;
    /**
     * <pre>
     * Not normally used
     * </pre>
     *
     * <code>Unspecified = 4;</code>
     */
    public static final int Unspecified_VALUE = 4;
    /**
     * <pre>
     * We failed while configuring a UBlox GPS
     * </pre>
     *
     * <code>UBloxInitFailed = 5;</code>
     */
    public static final int UBloxInitFailed_VALUE = 5;
    /**
     * <pre>
     * This board was expected to have a power management chip and it is missing or broken
     * </pre>
     *
     * <code>NoAXP192 = 6;</code>
     */
    public static final int NoAXP192_VALUE = 6;
    /**
     * <pre>
     * The channel tried to set a radio setting which is not supported by this chipset,
     * radio comms settings are now undefined.
     * </pre>
     *
     * <code>InvalidRadioSetting = 7;</code>
     */
    public static final int InvalidRadioSetting_VALUE = 7;
    /**
     * <pre>
     * Radio transmit hardware failure. We sent data to the radio chip, but it didn't
     * reply with an interrupt.
     * </pre>
     *
     * <code>TransmitFailed = 8;</code>
     */
    public static final int TransmitFailed_VALUE = 8;
    /**
     * <pre>
     * We detected that the main CPU voltage dropped below the minumum acceptable value
     * </pre>
     *
     * <code>Brownout = 9;</code>
     */
    public static final int Brownout_VALUE = 9;
    /**
     * <pre>
     * Selftest of SX1262 radio chip failed 
     * </pre>
     *
     * <code>SX1262Failure = 10;</code>
     */
    public static final int SX1262Failure_VALUE = 10;
    /**
     * <pre>
     * A (likely software but possibly hardware) failure was detected while trying to send packets. If this occurs on your board, please
     *post in the forum so that we can ask you to collect some information to allow fixing this bug 
     * </pre>
     *
     * <code>RadioSpiBug = 11;</code>
     */
    public static final int RadioSpiBug_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CriticalErrorCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CriticalErrorCode forNumber(int value) {
      switch (value) {
        case 0: return None;
        case 1: return TxWatchdog;
        case 2: return SleepEnterWait;
        case 3: return NoRadio;
        case 4: return Unspecified;
        case 5: return UBloxInitFailed;
        case 6: return NoAXP192;
        case 7: return InvalidRadioSetting;
        case 8: return TransmitFailed;
        case 9: return Brownout;
        case 10: return SX1262Failure;
        case 11: return RadioSpiBug;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CriticalErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CriticalErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CriticalErrorCode>() {
            public CriticalErrorCode findValueByNumber(int number) {
              return CriticalErrorCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final CriticalErrorCode[] VALUES = values();

    public static CriticalErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CriticalErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CriticalErrorCode)
  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The new preferred location encoding, divide by 1e-7 to get degrees
     * in floating point
     * </pre>
     *
     * <code>sfixed32 latitude_i = 1;</code>
     * @return The latitudeI.
     */
    int getLatitudeI();

    /**
     * <code>sfixed32 longitude_i = 2;</code>
     * @return The longitudeI.
     */
    int getLongitudeI();

    /**
     * <pre>
     * In meters above MSL
     * </pre>
     *
     * <code>int32 altitude = 3;</code>
     * @return The altitude.
     */
    int getAltitude();

    /**
     * <pre>
     * 1-100 (0 means not provided)
     * </pre>
     *
     * <code>int32 battery_level = 4;</code>
     * @return The batteryLevel.
     */
    int getBatteryLevel();

    /**
     * <pre>
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock.
     * seconds since 1970
     * </pre>
     *
     * <code>fixed32 time = 9;</code>
     * @return The time.
     */
    int getTime();
  }
  /**
   * <pre>
   * a gps position
   * </pre>
   *
   * Protobuf type {@code Position}
   */
  public static final class Position extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Position)
      PositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Position() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Position();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              latitudeI_ = input.readSFixed32();
              break;
            }
            case 21: {

              longitudeI_ = input.readSFixed32();
              break;
            }
            case 24: {

              altitude_ = input.readInt32();
              break;
            }
            case 32: {

              batteryLevel_ = input.readInt32();
              break;
            }
            case 77: {

              time_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Position.class, com.geeksville.mesh.MeshProtos.Position.Builder.class);
    }

    public static final int LATITUDE_I_FIELD_NUMBER = 1;
    private int latitudeI_;
    /**
     * <pre>
     * The new preferred location encoding, divide by 1e-7 to get degrees
     * in floating point
     * </pre>
     *
     * <code>sfixed32 latitude_i = 1;</code>
     * @return The latitudeI.
     */
    @java.lang.Override
    public int getLatitudeI() {
      return latitudeI_;
    }

    public static final int LONGITUDE_I_FIELD_NUMBER = 2;
    private int longitudeI_;
    /**
     * <code>sfixed32 longitude_i = 2;</code>
     * @return The longitudeI.
     */
    @java.lang.Override
    public int getLongitudeI() {
      return longitudeI_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 3;
    private int altitude_;
    /**
     * <pre>
     * In meters above MSL
     * </pre>
     *
     * <code>int32 altitude = 3;</code>
     * @return The altitude.
     */
    @java.lang.Override
    public int getAltitude() {
      return altitude_;
    }

    public static final int BATTERY_LEVEL_FIELD_NUMBER = 4;
    private int batteryLevel_;
    /**
     * <pre>
     * 1-100 (0 means not provided)
     * </pre>
     *
     * <code>int32 battery_level = 4;</code>
     * @return The batteryLevel.
     */
    @java.lang.Override
    public int getBatteryLevel() {
      return batteryLevel_;
    }

    public static final int TIME_FIELD_NUMBER = 9;
    private int time_;
    /**
     * <pre>
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock.
     * seconds since 1970
     * </pre>
     *
     * <code>fixed32 time = 9;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (latitudeI_ != 0) {
        output.writeSFixed32(1, latitudeI_);
      }
      if (longitudeI_ != 0) {
        output.writeSFixed32(2, longitudeI_);
      }
      if (altitude_ != 0) {
        output.writeInt32(3, altitude_);
      }
      if (batteryLevel_ != 0) {
        output.writeInt32(4, batteryLevel_);
      }
      if (time_ != 0) {
        output.writeFixed32(9, time_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (latitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, latitudeI_);
      }
      if (longitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(2, longitudeI_);
      }
      if (altitude_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, altitude_);
      }
      if (batteryLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, batteryLevel_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, time_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Position)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Position other = (com.geeksville.mesh.MeshProtos.Position) obj;

      if (getLatitudeI()
          != other.getLatitudeI()) return false;
      if (getLongitudeI()
          != other.getLongitudeI()) return false;
      if (getAltitude()
          != other.getAltitude()) return false;
      if (getBatteryLevel()
          != other.getBatteryLevel()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LATITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLatitudeI();
      hash = (37 * hash) + LONGITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLongitudeI();
      hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + getAltitude();
      hash = (37 * hash) + BATTERY_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryLevel();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a gps position
     * </pre>
     *
     * Protobuf type {@code Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Position)
        com.geeksville.mesh.MeshProtos.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Position.class, com.geeksville.mesh.MeshProtos.Position.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        latitudeI_ = 0;

        longitudeI_ = 0;

        altitude_ = 0;

        batteryLevel_ = 0;

        time_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Position.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position build() {
        com.geeksville.mesh.MeshProtos.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position buildPartial() {
        com.geeksville.mesh.MeshProtos.Position result = new com.geeksville.mesh.MeshProtos.Position(this);
        result.latitudeI_ = latitudeI_;
        result.longitudeI_ = longitudeI_;
        result.altitude_ = altitude_;
        result.batteryLevel_ = batteryLevel_;
        result.time_ = time_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Position) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Position other) {
        if (other == com.geeksville.mesh.MeshProtos.Position.getDefaultInstance()) return this;
        if (other.getLatitudeI() != 0) {
          setLatitudeI(other.getLatitudeI());
        }
        if (other.getLongitudeI() != 0) {
          setLongitudeI(other.getLongitudeI());
        }
        if (other.getAltitude() != 0) {
          setAltitude(other.getAltitude());
        }
        if (other.getBatteryLevel() != 0) {
          setBatteryLevel(other.getBatteryLevel());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.Position) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int latitudeI_ ;
      /**
       * <pre>
       * The new preferred location encoding, divide by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @return The latitudeI.
       */
      @java.lang.Override
      public int getLatitudeI() {
        return latitudeI_;
      }
      /**
       * <pre>
       * The new preferred location encoding, divide by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @param value The latitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLatitudeI(int value) {
        
        latitudeI_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new preferred location encoding, divide by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitudeI() {
        
        latitudeI_ = 0;
        onChanged();
        return this;
      }

      private int longitudeI_ ;
      /**
       * <code>sfixed32 longitude_i = 2;</code>
       * @return The longitudeI.
       */
      @java.lang.Override
      public int getLongitudeI() {
        return longitudeI_;
      }
      /**
       * <code>sfixed32 longitude_i = 2;</code>
       * @param value The longitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeI(int value) {
        
        longitudeI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 longitude_i = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeI() {
        
        longitudeI_ = 0;
        onChanged();
        return this;
      }

      private int altitude_ ;
      /**
       * <pre>
       * In meters above MSL
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @return The altitude.
       */
      @java.lang.Override
      public int getAltitude() {
        return altitude_;
      }
      /**
       * <pre>
       * In meters above MSL
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @param value The altitude to set.
       * @return This builder for chaining.
       */
      public Builder setAltitude(int value) {
        
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In meters above MSL
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitude() {
        
        altitude_ = 0;
        onChanged();
        return this;
      }

      private int batteryLevel_ ;
      /**
       * <pre>
       * 1-100 (0 means not provided)
       * </pre>
       *
       * <code>int32 battery_level = 4;</code>
       * @return The batteryLevel.
       */
      @java.lang.Override
      public int getBatteryLevel() {
        return batteryLevel_;
      }
      /**
       * <pre>
       * 1-100 (0 means not provided)
       * </pre>
       *
       * <code>int32 battery_level = 4;</code>
       * @param value The batteryLevel to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryLevel(int value) {
        
        batteryLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1-100 (0 means not provided)
       * </pre>
       *
       * <code>int32 battery_level = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryLevel() {
        
        batteryLevel_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 9;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 9;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Position)
    }

    // @@protoc_insertion_point(class_scope:Position)
    private static final com.geeksville.mesh.MeshProtos.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Position();
    }

    public static com.geeksville.mesh.MeshProtos.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      @java.lang.Override
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Position(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The longName.
     */
    java.lang.String getLongName();
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The bytes for longName.
     */
    com.google.protobuf.ByteString
        getLongNameBytes();

    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The shortName.
     */
    java.lang.String getShortName();
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The bytes for shortName.
     */
    com.google.protobuf.ByteString
        getShortNameBytes();

    /**
     * <pre>
     * This is the addr of the radio.
     * Not populated by the phone, but added by the esp32 when broadcasting
     * </pre>
     *
     * <code>bytes macaddr = 4;</code>
     * @return The macaddr.
     */
    com.google.protobuf.ByteString getMacaddr();

    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 6;</code>
     * @return The enum numeric value on the wire for hwModel.
     */
    int getHwModelValue();
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 6;</code>
     * @return The hwModel.
     */
    com.geeksville.mesh.MeshProtos.HardwareModel getHwModel();

    /**
     * <pre>
     * In some regions HAM radio operators have different bandwidth limitations than others.
     * If this user is a licensed operator, set this flag.
     * Also, "long_name" should be their licence number.
     * </pre>
     *
     * <code>bool is_licensed = 7;</code>
     * @return The isLicensed.
     */
    boolean getIsLicensed();
  }
  /**
   * <pre>
   * Broadcast when a newly powered mesh node wants to find a node num it can use
   * Sent from the phone over bluetooth to set the user id for the owner of this node.
   * Also sent from nodes to each other when a new node signs on (so all clients can have this info)
   * The algorithm is as follows:
   * when a node starts up, it broadcasts their user and the normal flow is for all
   * other nodes to reply with their User as well (so the new node can build its nodedb)
   * If a node ever receives a User (not just the first broadcast) message where
   * the sender node number equals our node number, that indicates a collision has
   * occurred and the following steps should happen:
   * If the receiving node (that was already in the mesh)'s macaddr is LOWER than the
   * new User who just tried to sign in: it gets to keep its nodenum.
   * We send a broadcast message of OUR User (we use a broadcast so that the other node can
   * receive our message, considering we have the same id - it also serves to let
   * observers correct their nodedb) - this case is rare so it should be okay.
   * If any node receives a User where the macaddr is GTE than their local macaddr,
   * they have been vetoed and should pick a new random nodenum (filtering against
   * whatever it knows about the nodedb) and rebroadcast their User.
   * A few nodenums are reserved and will never be requested:
   * 0xff - broadcast
   * 0 through 3 - for future use
   * </pre>
   *
   * Protobuf type {@code User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      id_ = "";
      longName_ = "";
      shortName_ = "";
      macaddr_ = com.google.protobuf.ByteString.EMPTY;
      hwModel_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              longName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              shortName_ = s;
              break;
            }
            case 34: {

              macaddr_ = input.readBytes();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              hwModel_ = rawValue;
              break;
            }
            case 56: {

              isLicensed_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.User.class, com.geeksville.mesh.MeshProtos.User.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LONG_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object longName_;
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The longName.
     */
    @java.lang.Override
    public java.lang.String getLongName() {
      java.lang.Object ref = longName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        longName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The bytes for longName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLongNameBytes() {
      java.lang.Object ref = longName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        longName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHORT_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object shortName_;
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The shortName.
     */
    @java.lang.Override
    public java.lang.String getShortName() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shortName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The bytes for shortName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShortNameBytes() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MACADDR_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString macaddr_;
    /**
     * <pre>
     * This is the addr of the radio.
     * Not populated by the phone, but added by the esp32 when broadcasting
     * </pre>
     *
     * <code>bytes macaddr = 4;</code>
     * @return The macaddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMacaddr() {
      return macaddr_;
    }

    public static final int HW_MODEL_FIELD_NUMBER = 6;
    private int hwModel_;
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 6;</code>
     * @return The enum numeric value on the wire for hwModel.
     */
    @java.lang.Override public int getHwModelValue() {
      return hwModel_;
    }
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 6;</code>
     * @return The hwModel.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.HardwareModel getHwModel() {
      @SuppressWarnings("deprecation")
      com.geeksville.mesh.MeshProtos.HardwareModel result = com.geeksville.mesh.MeshProtos.HardwareModel.valueOf(hwModel_);
      return result == null ? com.geeksville.mesh.MeshProtos.HardwareModel.UNRECOGNIZED : result;
    }

    public static final int IS_LICENSED_FIELD_NUMBER = 7;
    private boolean isLicensed_;
    /**
     * <pre>
     * In some regions HAM radio operators have different bandwidth limitations than others.
     * If this user is a licensed operator, set this flag.
     * Also, "long_name" should be their licence number.
     * </pre>
     *
     * <code>bool is_licensed = 7;</code>
     * @return The isLicensed.
     */
    @java.lang.Override
    public boolean getIsLicensed() {
      return isLicensed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getLongNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, longName_);
      }
      if (!getShortNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, shortName_);
      }
      if (!macaddr_.isEmpty()) {
        output.writeBytes(4, macaddr_);
      }
      if (hwModel_ != com.geeksville.mesh.MeshProtos.HardwareModel.UNSET.getNumber()) {
        output.writeEnum(6, hwModel_);
      }
      if (isLicensed_ != false) {
        output.writeBool(7, isLicensed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getLongNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, longName_);
      }
      if (!getShortNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, shortName_);
      }
      if (!macaddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, macaddr_);
      }
      if (hwModel_ != com.geeksville.mesh.MeshProtos.HardwareModel.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, hwModel_);
      }
      if (isLicensed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isLicensed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.User)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.User other = (com.geeksville.mesh.MeshProtos.User) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getLongName()
          .equals(other.getLongName())) return false;
      if (!getShortName()
          .equals(other.getShortName())) return false;
      if (!getMacaddr()
          .equals(other.getMacaddr())) return false;
      if (hwModel_ != other.hwModel_) return false;
      if (getIsLicensed()
          != other.getIsLicensed()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + LONG_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getLongName().hashCode();
      hash = (37 * hash) + SHORT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getShortName().hashCode();
      hash = (37 * hash) + MACADDR_FIELD_NUMBER;
      hash = (53 * hash) + getMacaddr().hashCode();
      hash = (37 * hash) + HW_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + hwModel_;
      hash = (37 * hash) + IS_LICENSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLicensed());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Broadcast when a newly powered mesh node wants to find a node num it can use
     * Sent from the phone over bluetooth to set the user id for the owner of this node.
     * Also sent from nodes to each other when a new node signs on (so all clients can have this info)
     * The algorithm is as follows:
     * when a node starts up, it broadcasts their user and the normal flow is for all
     * other nodes to reply with their User as well (so the new node can build its nodedb)
     * If a node ever receives a User (not just the first broadcast) message where
     * the sender node number equals our node number, that indicates a collision has
     * occurred and the following steps should happen:
     * If the receiving node (that was already in the mesh)'s macaddr is LOWER than the
     * new User who just tried to sign in: it gets to keep its nodenum.
     * We send a broadcast message of OUR User (we use a broadcast so that the other node can
     * receive our message, considering we have the same id - it also serves to let
     * observers correct their nodedb) - this case is rare so it should be okay.
     * If any node receives a User where the macaddr is GTE than their local macaddr,
     * they have been vetoed and should pick a new random nodenum (filtering against
     * whatever it knows about the nodedb) and rebroadcast their User.
     * A few nodenums are reserved and will never be requested:
     * 0xff - broadcast
     * 0 through 3 - for future use
     * </pre>
     *
     * Protobuf type {@code User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:User)
        com.geeksville.mesh.MeshProtos.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.User.class, com.geeksville.mesh.MeshProtos.User.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        longName_ = "";

        shortName_ = "";

        macaddr_ = com.google.protobuf.ByteString.EMPTY;

        hwModel_ = 0;

        isLicensed_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User build() {
        com.geeksville.mesh.MeshProtos.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User buildPartial() {
        com.geeksville.mesh.MeshProtos.User result = new com.geeksville.mesh.MeshProtos.User(this);
        result.id_ = id_;
        result.longName_ = longName_;
        result.shortName_ = shortName_;
        result.macaddr_ = macaddr_;
        result.hwModel_ = hwModel_;
        result.isLicensed_ = isLicensed_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.User) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.User other) {
        if (other == com.geeksville.mesh.MeshProtos.User.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getLongName().isEmpty()) {
          longName_ = other.longName_;
          onChanged();
        }
        if (!other.getShortName().isEmpty()) {
          shortName_ = other.shortName_;
          onChanged();
        }
        if (other.getMacaddr() != com.google.protobuf.ByteString.EMPTY) {
          setMacaddr(other.getMacaddr());
        }
        if (other.hwModel_ != 0) {
          setHwModelValue(other.getHwModelValue());
        }
        if (other.getIsLicensed() != false) {
          setIsLicensed(other.getIsLicensed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object longName_ = "";
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return The longName.
       */
      public java.lang.String getLongName() {
        java.lang.Object ref = longName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          longName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return The bytes for longName.
       */
      public com.google.protobuf.ByteString
          getLongNameBytes() {
        java.lang.Object ref = longName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          longName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @param value The longName to set.
       * @return This builder for chaining.
       */
      public Builder setLongName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        longName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongName() {
        
        longName_ = getDefaultInstance().getLongName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @param value The bytes for longName to set.
       * @return This builder for chaining.
       */
      public Builder setLongNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        longName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object shortName_ = "";
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return The shortName.
       */
      public java.lang.String getShortName() {
        java.lang.Object ref = shortName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shortName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return The bytes for shortName.
       */
      public com.google.protobuf.ByteString
          getShortNameBytes() {
        java.lang.Object ref = shortName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shortName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @param value The shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        shortName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearShortName() {
        
        shortName_ = getDefaultInstance().getShortName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @param value The bytes for shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        shortName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString macaddr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @return The macaddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMacaddr() {
        return macaddr_;
      }
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @param value The macaddr to set.
       * @return This builder for chaining.
       */
      public Builder setMacaddr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        macaddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMacaddr() {
        
        macaddr_ = getDefaultInstance().getMacaddr();
        onChanged();
        return this;
      }

      private int hwModel_ = 0;
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 6;</code>
       * @return The enum numeric value on the wire for hwModel.
       */
      @java.lang.Override public int getHwModelValue() {
        return hwModel_;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 6;</code>
       * @param value The enum numeric value on the wire for hwModel to set.
       * @return This builder for chaining.
       */
      public Builder setHwModelValue(int value) {
        
        hwModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 6;</code>
       * @return The hwModel.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.HardwareModel getHwModel() {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.MeshProtos.HardwareModel result = com.geeksville.mesh.MeshProtos.HardwareModel.valueOf(hwModel_);
        return result == null ? com.geeksville.mesh.MeshProtos.HardwareModel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 6;</code>
       * @param value The hwModel to set.
       * @return This builder for chaining.
       */
      public Builder setHwModel(com.geeksville.mesh.MeshProtos.HardwareModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hwModel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHwModel() {
        
        hwModel_ = 0;
        onChanged();
        return this;
      }

      private boolean isLicensed_ ;
      /**
       * <pre>
       * In some regions HAM radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 7;</code>
       * @return The isLicensed.
       */
      @java.lang.Override
      public boolean getIsLicensed() {
        return isLicensed_;
      }
      /**
       * <pre>
       * In some regions HAM radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 7;</code>
       * @param value The isLicensed to set.
       * @return This builder for chaining.
       */
      public Builder setIsLicensed(boolean value) {
        
        isLicensed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In some regions HAM radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLicensed() {
        
        isLicensed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:User)
    }

    // @@protoc_insertion_point(class_scope:User)
    private static final com.geeksville.mesh.MeshProtos.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.User();
    }

    public static com.geeksville.mesh.MeshProtos.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RouteDiscoveryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RouteDiscovery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @return A list containing the route.
     */
    java.util.List<java.lang.Integer> getRouteList();
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @return The count of route.
     */
    int getRouteCount();
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @param index The index of the element to return.
     * @return The route at the given index.
     */
    int getRoute(int index);
  }
  /**
   * <pre>
   * A message used in our Dynamic Source Routing protocol (RFC 4728 based)
   * </pre>
   *
   * Protobuf type {@code RouteDiscovery}
   */
  public static final class RouteDiscovery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RouteDiscovery)
      RouteDiscoveryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RouteDiscovery.newBuilder() to construct.
    private RouteDiscovery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RouteDiscovery() {
      route_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RouteDiscovery();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RouteDiscovery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 21: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                route_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              route_.addInt(input.readFixed32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                route_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                route_.addInt(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          route_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.RouteDiscovery.class, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder.class);
    }

    public static final int ROUTE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList route_;
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @return A list containing the route.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRouteList() {
      return route_;
    }
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @return The count of route.
     */
    public int getRouteCount() {
      return route_.size();
    }
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 2;</code>
     * @param index The index of the element to return.
     * @return The route at the given index.
     */
    public int getRoute(int index) {
      return route_.getInt(index);
    }
    private int routeMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getRouteList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(routeMemoizedSerializedSize);
      }
      for (int i = 0; i < route_.size(); i++) {
        output.writeFixed32NoTag(route_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getRouteList().size();
        size += dataSize;
        if (!getRouteList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        routeMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.RouteDiscovery)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.RouteDiscovery other = (com.geeksville.mesh.MeshProtos.RouteDiscovery) obj;

      if (!getRouteList()
          .equals(other.getRouteList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRouteCount() > 0) {
        hash = (37 * hash) + ROUTE_FIELD_NUMBER;
        hash = (53 * hash) + getRouteList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.RouteDiscovery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A message used in our Dynamic Source Routing protocol (RFC 4728 based)
     * </pre>
     *
     * Protobuf type {@code RouteDiscovery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RouteDiscovery)
        com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.RouteDiscovery.class, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        route_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery build() {
        com.geeksville.mesh.MeshProtos.RouteDiscovery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery buildPartial() {
        com.geeksville.mesh.MeshProtos.RouteDiscovery result = new com.geeksville.mesh.MeshProtos.RouteDiscovery(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          route_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.route_ = route_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.RouteDiscovery) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.RouteDiscovery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.RouteDiscovery other) {
        if (other == com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) return this;
        if (!other.route_.isEmpty()) {
          if (route_.isEmpty()) {
            route_ = other.route_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRouteIsMutable();
            route_.addAll(other.route_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.RouteDiscovery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.RouteDiscovery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList route_ = emptyIntList();
      private void ensureRouteIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          route_ = mutableCopy(route_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @return A list containing the route.
       */
      public java.util.List<java.lang.Integer>
          getRouteList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(route_) : route_;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @return The count of route.
       */
      public int getRouteCount() {
        return route_.size();
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @param index The index of the element to return.
       * @return The route at the given index.
       */
      public int getRoute(int index) {
        return route_.getInt(index);
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @param index The index to set the value at.
       * @param value The route to set.
       * @return This builder for chaining.
       */
      public Builder setRoute(
          int index, int value) {
        ensureRouteIsMutable();
        route_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @param value The route to add.
       * @return This builder for chaining.
       */
      public Builder addRoute(int value) {
        ensureRouteIsMutable();
        route_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @param values The route to add.
       * @return This builder for chaining.
       */
      public Builder addAllRoute(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRouteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, route_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoute() {
        route_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RouteDiscovery)
    }

    // @@protoc_insertion_point(class_scope:RouteDiscovery)
    private static final com.geeksville.mesh.MeshProtos.RouteDiscovery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.RouteDiscovery();
    }

    public static com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RouteDiscovery>
        PARSER = new com.google.protobuf.AbstractParser<RouteDiscovery>() {
      @java.lang.Override
      public RouteDiscovery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RouteDiscovery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RouteDiscovery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RouteDiscovery> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoutingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Routing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return Whether the routeRequest field is set.
     */
    boolean hasRouteRequest();
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return The routeRequest.
     */
    com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest();
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     */
    com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder();

    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return Whether the routeReply field is set.
     */
    boolean hasRouteReply();
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return The routeReply.
     */
    com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply();
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder();

    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return Whether the errorReason field is set.
     */
    boolean hasErrorReason();
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The enum numeric value on the wire for errorReason.
     */
    int getErrorReasonValue();
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The errorReason.
     */
    com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason();

    public com.geeksville.mesh.MeshProtos.Routing.VariantCase getVariantCase();
  }
  /**
   * <pre>
   *A Routing control Data packet handled by the routing plugin
   * </pre>
   *
   * Protobuf type {@code Routing}
   */
  public static final class Routing extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Routing)
      RoutingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Routing.newBuilder() to construct.
    private Routing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Routing() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Routing();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Routing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder subBuilder = null;
              if (variantCase_ == 1) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.RouteDiscovery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 1;
              break;
            }
            case 18: {
              com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder subBuilder = null;
              if (variantCase_ == 2) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_).toBuilder();
              }
              variant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.RouteDiscovery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
                variant_ = subBuilder.buildPartial();
              }
              variantCase_ = 2;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              variantCase_ = 3;
              variant_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Routing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Routing.class, com.geeksville.mesh.MeshProtos.Routing.Builder.class);
    }

    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided in addition to ack.fail_id to provide
     * details on the type of failure).
     * </pre>
     *
     * Protobuf enum {@code Routing.Error}
     */
    public enum Error
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * This message is not a failure
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <pre>
       * Our node doesn't have a route to the requested destination anymore.
       * </pre>
       *
       * <code>NO_ROUTE = 1;</code>
       */
      NO_ROUTE(1),
      /**
       * <pre>
       * We received a nak while trying to forward on your behalf
       * </pre>
       *
       * <code>GOT_NAK = 2;</code>
       */
      GOT_NAK(2),
      /**
       * <code>TIMEOUT = 3;</code>
       */
      TIMEOUT(3),
      /**
       * <pre>
       * No suitable interface could be found for delivering this packet
       * </pre>
       *
       * <code>NO_INTERFACE = 4;</code>
       */
      NO_INTERFACE(4),
      /**
       * <pre>
       * We reached the max retransmission count (typically for naive flood routing)
       * </pre>
       *
       * <code>MAX_RETRANSMIT = 5;</code>
       */
      MAX_RETRANSMIT(5),
      /**
       * <pre>
       * No suitable channel was found for sending this packet (i.e. was requested channel index disabled?)
       * </pre>
       *
       * <code>NO_CHANNEL = 6;</code>
       */
      NO_CHANNEL(6),
      /**
       * <pre>
       * The packet was too big for sending (exceeds interface MTU after encoding)
       * </pre>
       *
       * <code>TOO_LARGE = 7;</code>
       */
      TOO_LARGE(7),
      /**
       * <pre>
       * The request had want_response set, the request reached the destination node, but no service on that node wants to send a response
       * (possibly due to bad channel permissions)
       * </pre>
       *
       * <code>NO_RESPONSE = 8;</code>
       */
      NO_RESPONSE(8),
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request somehow invalid
       * </pre>
       *
       * <code>BAD_REQUEST = 32;</code>
       */
      BAD_REQUEST(32),
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request not authorized (i.e you did not
       * send the request on the required bound channel)
       * </pre>
       *
       * <code>NOT_AUTHORIZED = 33;</code>
       */
      NOT_AUTHORIZED(33),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * This message is not a failure
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <pre>
       * Our node doesn't have a route to the requested destination anymore.
       * </pre>
       *
       * <code>NO_ROUTE = 1;</code>
       */
      public static final int NO_ROUTE_VALUE = 1;
      /**
       * <pre>
       * We received a nak while trying to forward on your behalf
       * </pre>
       *
       * <code>GOT_NAK = 2;</code>
       */
      public static final int GOT_NAK_VALUE = 2;
      /**
       * <code>TIMEOUT = 3;</code>
       */
      public static final int TIMEOUT_VALUE = 3;
      /**
       * <pre>
       * No suitable interface could be found for delivering this packet
       * </pre>
       *
       * <code>NO_INTERFACE = 4;</code>
       */
      public static final int NO_INTERFACE_VALUE = 4;
      /**
       * <pre>
       * We reached the max retransmission count (typically for naive flood routing)
       * </pre>
       *
       * <code>MAX_RETRANSMIT = 5;</code>
       */
      public static final int MAX_RETRANSMIT_VALUE = 5;
      /**
       * <pre>
       * No suitable channel was found for sending this packet (i.e. was requested channel index disabled?)
       * </pre>
       *
       * <code>NO_CHANNEL = 6;</code>
       */
      public static final int NO_CHANNEL_VALUE = 6;
      /**
       * <pre>
       * The packet was too big for sending (exceeds interface MTU after encoding)
       * </pre>
       *
       * <code>TOO_LARGE = 7;</code>
       */
      public static final int TOO_LARGE_VALUE = 7;
      /**
       * <pre>
       * The request had want_response set, the request reached the destination node, but no service on that node wants to send a response
       * (possibly due to bad channel permissions)
       * </pre>
       *
       * <code>NO_RESPONSE = 8;</code>
       */
      public static final int NO_RESPONSE_VALUE = 8;
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request somehow invalid
       * </pre>
       *
       * <code>BAD_REQUEST = 32;</code>
       */
      public static final int BAD_REQUEST_VALUE = 32;
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request not authorized (i.e you did not
       * send the request on the required bound channel)
       * </pre>
       *
       * <code>NOT_AUTHORIZED = 33;</code>
       */
      public static final int NOT_AUTHORIZED_VALUE = 33;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Error valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Error forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return NO_ROUTE;
          case 2: return GOT_NAK;
          case 3: return TIMEOUT;
          case 4: return NO_INTERFACE;
          case 5: return MAX_RETRANSMIT;
          case 6: return NO_CHANNEL;
          case 7: return TOO_LARGE;
          case 8: return NO_RESPONSE;
          case 32: return BAD_REQUEST;
          case 33: return NOT_AUTHORIZED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Error>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Error> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Error>() {
              public Error findValueByNumber(int number) {
                return Error.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.Routing.getDescriptor().getEnumTypes().get(0);
      }

      private static final Error[] VALUES = values();

      public static Error valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Error(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Routing.Error)
    }

    private int variantCase_ = 0;
    private java.lang.Object variant_;
    public enum VariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ROUTE_REQUEST(1),
      ROUTE_REPLY(2),
      ERROR_REASON(3),
      VARIANT_NOT_SET(0);
      private final int value;
      private VariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static VariantCase forNumber(int value) {
        switch (value) {
          case 1: return ROUTE_REQUEST;
          case 2: return ROUTE_REPLY;
          case 3: return ERROR_REASON;
          case 0: return VARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VariantCase
    getVariantCase() {
      return VariantCase.forNumber(
          variantCase_);
    }

    public static final int ROUTE_REQUEST_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return Whether the routeRequest field is set.
     */
    @java.lang.Override
    public boolean hasRouteRequest() {
      return variantCase_ == 1;
    }
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return The routeRequest.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }

    public static final int ROUTE_REPLY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return Whether the routeReply field is set.
     */
    @java.lang.Override
    public boolean hasRouteReply() {
      return variantCase_ == 2;
    }
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return The routeReply.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }

    public static final int ERROR_REASON_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return Whether the errorReason field is set.
     */
    public boolean hasErrorReason() {
      return variantCase_ == 3;
    }
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The enum numeric value on the wire for errorReason.
     */
    public int getErrorReasonValue() {
      if (variantCase_ == 3) {
        return (java.lang.Integer) variant_;
      }
      return 0;
    }
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided 
     * in addition to ack.fail_id to provide details on the type of failure). 
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The errorReason.
     */
    public com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason() {
      if (variantCase_ == 3) {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.MeshProtos.Routing.Error result = com.geeksville.mesh.MeshProtos.Routing.Error.valueOf(
            (java.lang.Integer) variant_);
        return result == null ? com.geeksville.mesh.MeshProtos.Routing.Error.UNRECOGNIZED : result;
      }
      return com.geeksville.mesh.MeshProtos.Routing.Error.NONE;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (variantCase_ == 1) {
        output.writeMessage(1, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 2) {
        output.writeMessage(2, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) variant_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (variantCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) variant_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Routing)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Routing other = (com.geeksville.mesh.MeshProtos.Routing) obj;

      if (!getVariantCase().equals(other.getVariantCase())) return false;
      switch (variantCase_) {
        case 1:
          if (!getRouteRequest()
              .equals(other.getRouteRequest())) return false;
          break;
        case 2:
          if (!getRouteReply()
              .equals(other.getRouteReply())) return false;
          break;
        case 3:
          if (getErrorReasonValue()
              != other.getErrorReasonValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (variantCase_) {
        case 1:
          hash = (37 * hash) + ROUTE_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRouteRequest().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ROUTE_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getRouteReply().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ERROR_REASON_FIELD_NUMBER;
          hash = (53 * hash) + getErrorReasonValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Routing prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *A Routing control Data packet handled by the routing plugin
     * </pre>
     *
     * Protobuf type {@code Routing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Routing)
        com.geeksville.mesh.MeshProtos.RoutingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Routing.class, com.geeksville.mesh.MeshProtos.Routing.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Routing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        variantCase_ = 0;
        variant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Routing.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing build() {
        com.geeksville.mesh.MeshProtos.Routing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing buildPartial() {
        com.geeksville.mesh.MeshProtos.Routing result = new com.geeksville.mesh.MeshProtos.Routing(this);
        if (variantCase_ == 1) {
          if (routeRequestBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = routeRequestBuilder_.build();
          }
        }
        if (variantCase_ == 2) {
          if (routeReplyBuilder_ == null) {
            result.variant_ = variant_;
          } else {
            result.variant_ = routeReplyBuilder_.build();
          }
        }
        if (variantCase_ == 3) {
          result.variant_ = variant_;
        }
        result.variantCase_ = variantCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Routing) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Routing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Routing other) {
        if (other == com.geeksville.mesh.MeshProtos.Routing.getDefaultInstance()) return this;
        switch (other.getVariantCase()) {
          case ROUTE_REQUEST: {
            mergeRouteRequest(other.getRouteRequest());
            break;
          }
          case ROUTE_REPLY: {
            mergeRouteReply(other.getRouteReply());
            break;
          }
          case ERROR_REASON: {
            setErrorReasonValue(other.getErrorReasonValue());
            break;
          }
          case VARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.Routing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.Routing) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int variantCase_ = 0;
      private java.lang.Object variant_;
      public VariantCase
          getVariantCase() {
        return VariantCase.forNumber(
            variantCase_);
      }

      public Builder clearVariant() {
        variantCase_ = 0;
        variant_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> routeRequestBuilder_;
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       * @return Whether the routeRequest field is set.
       */
      @java.lang.Override
      public boolean hasRouteRequest() {
        return variantCase_ == 1;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       * @return The routeRequest.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest() {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        } else {
          if (variantCase_ == 1) {
            return routeRequestBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder setRouteRequest(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          routeRequestBuilder_.setMessage(value);
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder setRouteRequest(
          com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder builderForValue) {
        if (routeRequestBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          routeRequestBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder mergeRouteRequest(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1 &&
              variant_ != com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 1) {
            routeRequestBuilder_.mergeFrom(value);
          }
          routeRequestBuilder_.setMessage(value);
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder clearRouteRequest() {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
          }
          routeRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder getRouteRequestBuilder() {
        return getRouteRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder() {
        if ((variantCase_ == 1) && (routeRequestBuilder_ != null)) {
          return routeRequestBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> 
          getRouteRequestFieldBuilder() {
        if (routeRequestBuilder_ == null) {
          if (!(variantCase_ == 1)) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
          }
          routeRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 1;
        onChanged();;
        return routeRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> routeReplyBuilder_;
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       * @return Whether the routeReply field is set.
       */
      @java.lang.Override
      public boolean hasRouteReply() {
        return variantCase_ == 2;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       * @return The routeReply.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply() {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        } else {
          if (variantCase_ == 2) {
            return routeReplyBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder setRouteReply(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          routeReplyBuilder_.setMessage(value);
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder setRouteReply(
          com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder builderForValue) {
        if (routeReplyBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          routeReplyBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder mergeRouteReply(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2 &&
              variant_ != com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 2) {
            routeReplyBuilder_.mergeFrom(value);
          }
          routeReplyBuilder_.setMessage(value);
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder clearRouteReply() {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
          }
          routeReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder getRouteReplyBuilder() {
        return getRouteReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder() {
        if ((variantCase_ == 2) && (routeReplyBuilder_ != null)) {
          return routeReplyBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> 
          getRouteReplyFieldBuilder() {
        if (routeReplyBuilder_ == null) {
          if (!(variantCase_ == 2)) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
          }
          routeReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 2;
        onChanged();;
        return routeReplyBuilder_;
      }

      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return Whether the errorReason field is set.
       */
      @java.lang.Override
      public boolean hasErrorReason() {
        return variantCase_ == 3;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return The enum numeric value on the wire for errorReason.
       */
      @java.lang.Override
      public int getErrorReasonValue() {
        if (variantCase_ == 3) {
          return ((java.lang.Integer) variant_).intValue();
        }
        return 0;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @param value The enum numeric value on the wire for errorReason to set.
       * @return This builder for chaining.
       */
      public Builder setErrorReasonValue(int value) {
        variantCase_ = 3;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return The errorReason.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason() {
        if (variantCase_ == 3) {
          @SuppressWarnings("deprecation")
          com.geeksville.mesh.MeshProtos.Routing.Error result = com.geeksville.mesh.MeshProtos.Routing.Error.valueOf(
              (java.lang.Integer) variant_);
          return result == null ? com.geeksville.mesh.MeshProtos.Routing.Error.UNRECOGNIZED : result;
        }
        return com.geeksville.mesh.MeshProtos.Routing.Error.NONE;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @param value The errorReason to set.
       * @return This builder for chaining.
       */
      public Builder setErrorReason(com.geeksville.mesh.MeshProtos.Routing.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        variantCase_ = 3;
        variant_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided 
       * in addition to ack.fail_id to provide details on the type of failure). 
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorReason() {
        if (variantCase_ == 3) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Routing)
    }

    // @@protoc_insertion_point(class_scope:Routing)
    private static final com.geeksville.mesh.MeshProtos.Routing DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Routing();
    }

    public static com.geeksville.mesh.MeshProtos.Routing getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Routing>
        PARSER = new com.google.protobuf.AbstractParser<Routing>() {
      @java.lang.Override
      public Routing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Routing(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Routing> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Routing> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Routing getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    int getPortnumValue();
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    com.geeksville.mesh.Portnums.PortNum getPortnum();

    /**
     * <pre>
     * Required
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <pre>
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     * </pre>
     *
     * <code>bool want_response = 3;</code>
     * @return The wantResponse.
     */
    boolean getWantResponse();

    /**
     * <pre>
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     * </pre>
     *
     * <code>fixed32 dest = 4;</code>
     * @return The dest.
     */
    int getDest();

    /**
     * <pre>
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     * </pre>
     *
     * <code>fixed32 source = 5;</code>
     * @return The source.
     */
    int getSource();

    /**
     * <pre>
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     * </pre>
     *
     * <code>fixed32 request_id = 6;</code>
     * @return The requestId.
     */
    int getRequestId();
  }
  /**
   * <pre>
   * (Formerly called SubPacket)
   * The payload portion fo a packet, this is the actual bytes that are sent
   * inside a radio packet (because from/to are broken out by the comms library)
   * </pre>
   *
   * Protobuf type {@code Data}
   */
  public static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Data)
      DataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
      portnum_ = 0;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Data();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              portnum_ = rawValue;
              break;
            }
            case 18: {

              payload_ = input.readBytes();
              break;
            }
            case 24: {

              wantResponse_ = input.readBool();
              break;
            }
            case 37: {

              dest_ = input.readFixed32();
              break;
            }
            case 45: {

              source_ = input.readFixed32();
              break;
            }
            case 53: {

              requestId_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Data.class, com.geeksville.mesh.MeshProtos.Data.Builder.class);
    }

    public static final int PORTNUM_FIELD_NUMBER = 1;
    private int portnum_;
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    @java.lang.Override public int getPortnumValue() {
      return portnum_;
    }
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    @java.lang.Override public com.geeksville.mesh.Portnums.PortNum getPortnum() {
      @SuppressWarnings("deprecation")
      com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.valueOf(portnum_);
      return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * Required
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int WANT_RESPONSE_FIELD_NUMBER = 3;
    private boolean wantResponse_;
    /**
     * <pre>
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     * </pre>
     *
     * <code>bool want_response = 3;</code>
     * @return The wantResponse.
     */
    @java.lang.Override
    public boolean getWantResponse() {
      return wantResponse_;
    }

    public static final int DEST_FIELD_NUMBER = 4;
    private int dest_;
    /**
     * <pre>
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     * </pre>
     *
     * <code>fixed32 dest = 4;</code>
     * @return The dest.
     */
    @java.lang.Override
    public int getDest() {
      return dest_;
    }

    public static final int SOURCE_FIELD_NUMBER = 5;
    private int source_;
    /**
     * <pre>
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     * </pre>
     *
     * <code>fixed32 source = 5;</code>
     * @return The source.
     */
    @java.lang.Override
    public int getSource() {
      return source_;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 6;
    private int requestId_;
    /**
     * <pre>
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     * </pre>
     *
     * <code>fixed32 request_id = 6;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        output.writeEnum(1, portnum_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      if (wantResponse_ != false) {
        output.writeBool(3, wantResponse_);
      }
      if (dest_ != 0) {
        output.writeFixed32(4, dest_);
      }
      if (source_ != 0) {
        output.writeFixed32(5, source_);
      }
      if (requestId_ != 0) {
        output.writeFixed32(6, requestId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, portnum_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      if (wantResponse_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, wantResponse_);
      }
      if (dest_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, dest_);
      }
      if (source_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, source_);
      }
      if (requestId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, requestId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Data)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Data other = (com.geeksville.mesh.MeshProtos.Data) obj;

      if (portnum_ != other.portnum_) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (getWantResponse()
          != other.getWantResponse()) return false;
      if (getDest()
          != other.getDest()) return false;
      if (getSource()
          != other.getSource()) return false;
      if (getRequestId()
          != other.getRequestId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORTNUM_FIELD_NUMBER;
      hash = (53 * hash) + portnum_;
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (37 * hash) + WANT_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWantResponse());
      hash = (37 * hash) + DEST_FIELD_NUMBER;
      hash = (53 * hash) + getDest();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource();
      hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * (Formerly called SubPacket)
     * The payload portion fo a packet, this is the actual bytes that are sent
     * inside a radio packet (because from/to are broken out by the comms library)
     * </pre>
     *
     * Protobuf type {@code Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Data)
        com.geeksville.mesh.MeshProtos.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Data.class, com.geeksville.mesh.MeshProtos.Data.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portnum_ = 0;

        payload_ = com.google.protobuf.ByteString.EMPTY;

        wantResponse_ = false;

        dest_ = 0;

        source_ = 0;

        requestId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data build() {
        com.geeksville.mesh.MeshProtos.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data buildPartial() {
        com.geeksville.mesh.MeshProtos.Data result = new com.geeksville.mesh.MeshProtos.Data(this);
        result.portnum_ = portnum_;
        result.payload_ = payload_;
        result.wantResponse_ = wantResponse_;
        result.dest_ = dest_;
        result.source_ = source_;
        result.requestId_ = requestId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Data) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Data other) {
        if (other == com.geeksville.mesh.MeshProtos.Data.getDefaultInstance()) return this;
        if (other.portnum_ != 0) {
          setPortnumValue(other.getPortnumValue());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (other.getWantResponse() != false) {
          setWantResponse(other.getWantResponse());
        }
        if (other.getDest() != 0) {
          setDest(other.getDest());
        }
        if (other.getSource() != 0) {
          setSource(other.getSource());
        }
        if (other.getRequestId() != 0) {
          setRequestId(other.getRequestId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portnum_ = 0;
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The enum numeric value on the wire for portnum.
       */
      @java.lang.Override public int getPortnumValue() {
        return portnum_;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The enum numeric value on the wire for portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnumValue(int value) {
        
        portnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The portnum.
       */
      @java.lang.Override
      public com.geeksville.mesh.Portnums.PortNum getPortnum() {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.valueOf(portnum_);
        return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnum(com.geeksville.mesh.Portnums.PortNum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        portnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortnum() {
        
        portnum_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Required
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * Required
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private boolean wantResponse_ ;
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @return The wantResponse.
       */
      @java.lang.Override
      public boolean getWantResponse() {
        return wantResponse_;
      }
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @param value The wantResponse to set.
       * @return This builder for chaining.
       */
      public Builder setWantResponse(boolean value) {
        
        wantResponse_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantResponse() {
        
        wantResponse_ = false;
        onChanged();
        return this;
      }

      private int dest_ ;
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @return The dest.
       */
      @java.lang.Override
      public int getDest() {
        return dest_;
      }
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @param value The dest to set.
       * @return This builder for chaining.
       */
      public Builder setDest(int value) {
        
        dest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDest() {
        
        dest_ = 0;
        onChanged();
        return this;
      }

      private int source_ ;
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @return The source.
       */
      @java.lang.Override
      public int getSource() {
        return source_;
      }
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(int value) {
        
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = 0;
        onChanged();
        return this;
      }

      private int requestId_ ;
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @return The requestId.
       */
      @java.lang.Override
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(int value) {
        
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        
        requestId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Data)
    }

    // @@protoc_insertion_point(class_scope:Data)
    private static final com.geeksville.mesh.MeshProtos.Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Data();
    }

    public static com.geeksville.mesh.MeshProtos.Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      @java.lang.Override
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeshPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MeshPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The sending node number.
     * Note: Our crypto implementation uses this field as well.
     * See [crypto](/developers/device/encryption.md) for details.
     * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 from = 1;</code>
     * @return The from.
     */
    int getFrom();

    /**
     * <pre>
     * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 to = 2;</code>
     * @return The to.
     */
    int getTo();

    /**
     * <pre>
     * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
     * If unset, packet was on the primary channel.
     * A particular node might know only a subset of channels in use on the mesh.
     * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
     * Very briefly, while sending and receiving deep inside the device Router code, this field instead
     * contains the 'channel hash' instead of the index.
     * This 'trick' is only used while the payloadVariant is an 'encrypted'.
     * </pre>
     *
     * <code>uint32 channel = 3;</code>
     * @return The channel.
     */
    int getChannel();

    /**
     * <code>.Data decoded = 4;</code>
     * @return Whether the decoded field is set.
     */
    boolean hasDecoded();
    /**
     * <code>.Data decoded = 4;</code>
     * @return The decoded.
     */
    com.geeksville.mesh.MeshProtos.Data getDecoded();
    /**
     * <code>.Data decoded = 4;</code>
     */
    com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder();

    /**
     * <code>bytes encrypted = 5;</code>
     * @return Whether the encrypted field is set.
     */
    boolean hasEncrypted();
    /**
     * <code>bytes encrypted = 5;</code>
     * @return The encrypted.
     */
    com.google.protobuf.ByteString getEncrypted();

    /**
     * <pre>
     * A unique ID for this packet.
     * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
     * Otherwise a unique ID for this packet, useful for flooding algorithms.
     * ID only needs to be unique on a _per sender_ basis, and it only
     * needs to be unique for a few minutes (long enough to last for the length of
     * any ACK or the completion of a mesh broadcast flood).
     * Note: Our crypto implementation uses this id as well.
     * See [crypto](/developers/device/encryption.md) for details.
     * FIXME - really should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 id = 6;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * The time this message was received by the esp32 (secs since 1970).
     * Note: this field is _never_ sent on the radio link itself (to save space) Times
     * are typically not sent over the mesh, but they will be added to any Packet
     * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
     * </pre>
     *
     * <code>fixed32 rx_time = 7;</code>
     * @return The rxTime.
     */
    int getRxTime();

    /**
     * <pre>
     * *Never* sent over the radio links.
     * Set during reception to indicate the SNR of this packet.
     * Used to collect statistics on current link quality.
     * </pre>
     *
     * <code>float rx_snr = 8;</code>
     * @return The rxSnr.
     */
    float getRxSnr();

    /**
     * <pre>
     * If unset treated as zero (no forwarding, send to adjacent nodes only)
     * if 1, allow hopping through one node, etc...
     * For our usecase real world topologies probably have a max of about 3.
     * This field is normally placed into a few of bits in the header.
     * </pre>
     *
     * <code>uint32 hop_limit = 10;</code>
     * @return The hopLimit.
     */
    int getHopLimit();

    /**
     * <pre>
     * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
     * We would like to receive a ack packet in response.
     * Broadcasts messages treat this flag specially: Since acks for broadcasts would
     * rapidly flood the channel, the normal ack behavior is suppressed.
     * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
     * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
     * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
     * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
     * Note: This flag is normally sent in a flag bit in the header when sent over the wire
     * </pre>
     *
     * <code>bool want_ack = 11;</code>
     * @return The wantAck.
     */
    boolean getWantAck();

    /**
     * <pre>
     * The priority of this message for sending. 
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 12;</code>
     * @return The enum numeric value on the wire for priority.
     */
    int getPriorityValue();
    /**
     * <pre>
     * The priority of this message for sending. 
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 12;</code>
     * @return The priority.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority();

    /**
     * <pre>
     * rssi of received packet. Only sent to phone for dispay purposes.
     * </pre>
     *
     * <code>int32 rx_rssi = 13;</code>
     * @return The rxRssi.
     */
    int getRxRssi();

    public com.geeksville.mesh.MeshProtos.MeshPacket.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * A packet envelope sent/received over the mesh
   * only payloadVariant is sent in the payload portion of the LORA packet.
   * The other fields are either not sent at all, or sent in the special 16 byte LORA header.
   * </pre>
   *
   * Protobuf type {@code MeshPacket}
   */
  public static final class MeshPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MeshPacket)
      MeshPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeshPacket.newBuilder() to construct.
    private MeshPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeshPacket() {
      priority_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeshPacket();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MeshPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              from_ = input.readFixed32();
              break;
            }
            case 21: {

              to_ = input.readFixed32();
              break;
            }
            case 24: {

              channel_ = input.readUInt32();
              break;
            }
            case 34: {
              com.geeksville.mesh.MeshProtos.Data.Builder subBuilder = null;
              if (payloadVariantCase_ == 4) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.Data) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.Data.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.Data) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 4;
              break;
            }
            case 42: {
              payloadVariantCase_ = 5;
              payloadVariant_ = input.readBytes();
              break;
            }
            case 53: {

              id_ = input.readFixed32();
              break;
            }
            case 61: {

              rxTime_ = input.readFixed32();
              break;
            }
            case 69: {

              rxSnr_ = input.readFloat();
              break;
            }
            case 80: {

              hopLimit_ = input.readUInt32();
              break;
            }
            case 88: {

              wantAck_ = input.readBool();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              priority_ = rawValue;
              break;
            }
            case 104: {

              rxRssi_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.MeshPacket.class, com.geeksville.mesh.MeshProtos.MeshPacket.Builder.class);
    }

    /**
     * <pre>
     * The priority of this message for sending.
     * Higher priorities are sent first (when managing the transmit queue).
     * This field is never sent over the air, it is only used internally inside of a local device node.
     * API clients (either on the local node or connected directly to the node)
     * can set this parameter if necessary.
     * (values must be &lt;= 127 to keep protobuf field to one byte in size.
     * Detailed background on this field:
     * I noticed a funny side effect of lora being so slow: Usually when making
     * a protocol there isn’t much need to use message priority to change the order
     * of transmission (because interfaces are fairly fast).
     * But for lora where packets can take a few seconds each, it is very important
     * to make sure that critical packets are sent ASAP.
     * In the case of meshtastic that means we want to send protocol acks as soon as possible
     * (to prevent unneeded retransmissions), we want routing messages to be sent next,
     * then messages marked as reliable and finally ‘background’ packets like periodic position updates.
     * So I bit the bullet and implemented a new (internal - not sent over the air)
     * field in MeshPacket called ‘priority’.
     * And the transmission queue in the router object is now a priority queue.
     * </pre>
     *
     * Protobuf enum {@code MeshPacket.Priority}
     */
    public enum Priority
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Treated as Priority.DEFAULT
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <code>MIN = 1;</code>
       */
      MIN(1),
      /**
       * <pre>
       * Background position updates are sent with very low priority -
       * if the link is super congested they might not go out at all
       * </pre>
       *
       * <code>BACKGROUND = 10;</code>
       */
      BACKGROUND(10),
      /**
       * <pre>
       * This priority is used for most messages that don't have a priority set
       * </pre>
       *
       * <code>DEFAULT = 64;</code>
       */
      DEFAULT(64),
      /**
       * <pre>
       * If priority is unset but the message is marked as want_ack,
       * assume it is important and use a slightly higher priority
       * </pre>
       *
       * <code>RELIABLE = 70;</code>
       */
      RELIABLE(70),
      /**
       * <pre>
       * Ack/naks are sent with very high priority to ensure that retransmission
       * stops as soon as possible
       * </pre>
       *
       * <code>ACK = 120;</code>
       */
      ACK(120),
      /**
       * <code>MAX = 127;</code>
       */
      MAX(127),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Treated as Priority.DEFAULT
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <code>MIN = 1;</code>
       */
      public static final int MIN_VALUE = 1;
      /**
       * <pre>
       * Background position updates are sent with very low priority -
       * if the link is super congested they might not go out at all
       * </pre>
       *
       * <code>BACKGROUND = 10;</code>
       */
      public static final int BACKGROUND_VALUE = 10;
      /**
       * <pre>
       * This priority is used for most messages that don't have a priority set
       * </pre>
       *
       * <code>DEFAULT = 64;</code>
       */
      public static final int DEFAULT_VALUE = 64;
      /**
       * <pre>
       * If priority is unset but the message is marked as want_ack,
       * assume it is important and use a slightly higher priority
       * </pre>
       *
       * <code>RELIABLE = 70;</code>
       */
      public static final int RELIABLE_VALUE = 70;
      /**
       * <pre>
       * Ack/naks are sent with very high priority to ensure that retransmission
       * stops as soon as possible
       * </pre>
       *
       * <code>ACK = 120;</code>
       */
      public static final int ACK_VALUE = 120;
      /**
       * <code>MAX = 127;</code>
       */
      public static final int MAX_VALUE = 127;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Priority valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Priority forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return MIN;
          case 10: return BACKGROUND;
          case 64: return DEFAULT;
          case 70: return RELIABLE;
          case 120: return ACK;
          case 127: return MAX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Priority>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Priority> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Priority>() {
              public Priority findValueByNumber(int number) {
                return Priority.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.MeshPacket.getDescriptor().getEnumTypes().get(0);
      }

      private static final Priority[] VALUES = values();

      public static Priority valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Priority(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MeshPacket.Priority)
    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DECODED(4),
      ENCRYPTED(5),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 4: return DECODED;
          case 5: return ENCRYPTED;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private int from_;
    /**
     * <pre>
     * The sending node number.
     * Note: Our crypto implementation uses this field as well.
     * See [crypto](/developers/device/encryption.md) for details.
     * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public int getFrom() {
      return from_;
    }

    public static final int TO_FIELD_NUMBER = 2;
    private int to_;
    /**
     * <pre>
     * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 to = 2;</code>
     * @return The to.
     */
    @java.lang.Override
    public int getTo() {
      return to_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 3;
    private int channel_;
    /**
     * <pre>
     * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
     * If unset, packet was on the primary channel.
     * A particular node might know only a subset of channels in use on the mesh.
     * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
     * Very briefly, while sending and receiving deep inside the device Router code, this field instead
     * contains the 'channel hash' instead of the index.
     * This 'trick' is only used while the payloadVariant is an 'encrypted'.
     * </pre>
     *
     * <code>uint32 channel = 3;</code>
     * @return The channel.
     */
    @java.lang.Override
    public int getChannel() {
      return channel_;
    }

    public static final int DECODED_FIELD_NUMBER = 4;
    /**
     * <code>.Data decoded = 4;</code>
     * @return Whether the decoded field is set.
     */
    @java.lang.Override
    public boolean hasDecoded() {
      return payloadVariantCase_ == 4;
    }
    /**
     * <code>.Data decoded = 4;</code>
     * @return The decoded.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Data getDecoded() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
    }
    /**
     * <code>.Data decoded = 4;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
    }

    public static final int ENCRYPTED_FIELD_NUMBER = 5;
    /**
     * <code>bytes encrypted = 5;</code>
     * @return Whether the encrypted field is set.
     */
    @java.lang.Override
    public boolean hasEncrypted() {
      return payloadVariantCase_ == 5;
    }
    /**
     * <code>bytes encrypted = 5;</code>
     * @return The encrypted.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncrypted() {
      if (payloadVariantCase_ == 5) {
        return (com.google.protobuf.ByteString) payloadVariant_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ID_FIELD_NUMBER = 6;
    private int id_;
    /**
     * <pre>
     * A unique ID for this packet.
     * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
     * Otherwise a unique ID for this packet, useful for flooding algorithms.
     * ID only needs to be unique on a _per sender_ basis, and it only
     * needs to be unique for a few minutes (long enough to last for the length of
     * any ACK or the completion of a mesh broadcast flood).
     * Note: Our crypto implementation uses this id as well.
     * See [crypto](/developers/device/encryption.md) for details.
     * FIXME - really should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 id = 6;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RX_TIME_FIELD_NUMBER = 7;
    private int rxTime_;
    /**
     * <pre>
     * The time this message was received by the esp32 (secs since 1970).
     * Note: this field is _never_ sent on the radio link itself (to save space) Times
     * are typically not sent over the mesh, but they will be added to any Packet
     * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
     * </pre>
     *
     * <code>fixed32 rx_time = 7;</code>
     * @return The rxTime.
     */
    @java.lang.Override
    public int getRxTime() {
      return rxTime_;
    }

    public static final int RX_SNR_FIELD_NUMBER = 8;
    private float rxSnr_;
    /**
     * <pre>
     * *Never* sent over the radio links.
     * Set during reception to indicate the SNR of this packet.
     * Used to collect statistics on current link quality.
     * </pre>
     *
     * <code>float rx_snr = 8;</code>
     * @return The rxSnr.
     */
    @java.lang.Override
    public float getRxSnr() {
      return rxSnr_;
    }

    public static final int HOP_LIMIT_FIELD_NUMBER = 10;
    private int hopLimit_;
    /**
     * <pre>
     * If unset treated as zero (no forwarding, send to adjacent nodes only)
     * if 1, allow hopping through one node, etc...
     * For our usecase real world topologies probably have a max of about 3.
     * This field is normally placed into a few of bits in the header.
     * </pre>
     *
     * <code>uint32 hop_limit = 10;</code>
     * @return The hopLimit.
     */
    @java.lang.Override
    public int getHopLimit() {
      return hopLimit_;
    }

    public static final int WANT_ACK_FIELD_NUMBER = 11;
    private boolean wantAck_;
    /**
     * <pre>
     * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
     * We would like to receive a ack packet in response.
     * Broadcasts messages treat this flag specially: Since acks for broadcasts would
     * rapidly flood the channel, the normal ack behavior is suppressed.
     * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
     * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
     * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
     * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
     * Note: This flag is normally sent in a flag bit in the header when sent over the wire
     * </pre>
     *
     * <code>bool want_ack = 11;</code>
     * @return The wantAck.
     */
    @java.lang.Override
    public boolean getWantAck() {
      return wantAck_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 12;
    private int priority_;
    /**
     * <pre>
     * The priority of this message for sending. 
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 12;</code>
     * @return The enum numeric value on the wire for priority.
     */
    @java.lang.Override public int getPriorityValue() {
      return priority_;
    }
    /**
     * <pre>
     * The priority of this message for sending. 
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 12;</code>
     * @return The priority.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority() {
      @SuppressWarnings("deprecation")
      com.geeksville.mesh.MeshProtos.MeshPacket.Priority result = com.geeksville.mesh.MeshProtos.MeshPacket.Priority.valueOf(priority_);
      return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNRECOGNIZED : result;
    }

    public static final int RX_RSSI_FIELD_NUMBER = 13;
    private int rxRssi_;
    /**
     * <pre>
     * rssi of received packet. Only sent to phone for dispay purposes.
     * </pre>
     *
     * <code>int32 rx_rssi = 13;</code>
     * @return The rxRssi.
     */
    @java.lang.Override
    public int getRxRssi() {
      return rxRssi_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (from_ != 0) {
        output.writeFixed32(1, from_);
      }
      if (to_ != 0) {
        output.writeFixed32(2, to_);
      }
      if (channel_ != 0) {
        output.writeUInt32(3, channel_);
      }
      if (payloadVariantCase_ == 4) {
        output.writeMessage(4, (com.geeksville.mesh.MeshProtos.Data) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        output.writeBytes(
            5, (com.google.protobuf.ByteString) payloadVariant_);
      }
      if (id_ != 0) {
        output.writeFixed32(6, id_);
      }
      if (rxTime_ != 0) {
        output.writeFixed32(7, rxTime_);
      }
      if (rxSnr_ != 0F) {
        output.writeFloat(8, rxSnr_);
      }
      if (hopLimit_ != 0) {
        output.writeUInt32(10, hopLimit_);
      }
      if (wantAck_ != false) {
        output.writeBool(11, wantAck_);
      }
      if (priority_ != com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNSET.getNumber()) {
        output.writeEnum(12, priority_);
      }
      if (rxRssi_ != 0) {
        output.writeInt32(13, rxRssi_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (from_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, from_);
      }
      if (to_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, to_);
      }
      if (channel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channel_);
      }
      if (payloadVariantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.geeksville.mesh.MeshProtos.Data) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              5, (com.google.protobuf.ByteString) payloadVariant_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, id_);
      }
      if (rxTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, rxTime_);
      }
      if (rxSnr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, rxSnr_);
      }
      if (hopLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, hopLimit_);
      }
      if (wantAck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, wantAck_);
      }
      if (priority_ != com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, priority_);
      }
      if (rxRssi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, rxRssi_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.MeshPacket)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.MeshPacket other = (com.geeksville.mesh.MeshProtos.MeshPacket) obj;

      if (getFrom()
          != other.getFrom()) return false;
      if (getTo()
          != other.getTo()) return false;
      if (getChannel()
          != other.getChannel()) return false;
      if (getId()
          != other.getId()) return false;
      if (getRxTime()
          != other.getRxTime()) return false;
      if (java.lang.Float.floatToIntBits(getRxSnr())
          != java.lang.Float.floatToIntBits(
              other.getRxSnr())) return false;
      if (getHopLimit()
          != other.getHopLimit()) return false;
      if (getWantAck()
          != other.getWantAck()) return false;
      if (priority_ != other.priority_) return false;
      if (getRxRssi()
          != other.getRxRssi()) return false;
      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 4:
          if (!getDecoded()
              .equals(other.getDecoded())) return false;
          break;
        case 5:
          if (!getEncrypted()
              .equals(other.getEncrypted())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + RX_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getRxTime();
      hash = (37 * hash) + RX_SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRxSnr());
      hash = (37 * hash) + HOP_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getHopLimit();
      hash = (37 * hash) + WANT_ACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWantAck());
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + priority_;
      hash = (37 * hash) + RX_RSSI_FIELD_NUMBER;
      hash = (53 * hash) + getRxRssi();
      switch (payloadVariantCase_) {
        case 4:
          hash = (37 * hash) + DECODED_FIELD_NUMBER;
          hash = (53 * hash) + getDecoded().hashCode();
          break;
        case 5:
          hash = (37 * hash) + ENCRYPTED_FIELD_NUMBER;
          hash = (53 * hash) + getEncrypted().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.MeshPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A packet envelope sent/received over the mesh
     * only payloadVariant is sent in the payload portion of the LORA packet.
     * The other fields are either not sent at all, or sent in the special 16 byte LORA header.
     * </pre>
     *
     * Protobuf type {@code MeshPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MeshPacket)
        com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.MeshPacket.class, com.geeksville.mesh.MeshProtos.MeshPacket.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        from_ = 0;

        to_ = 0;

        channel_ = 0;

        id_ = 0;

        rxTime_ = 0;

        rxSnr_ = 0F;

        hopLimit_ = 0;

        wantAck_ = false;

        priority_ = 0;

        rxRssi_ = 0;

        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket build() {
        com.geeksville.mesh.MeshProtos.MeshPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket buildPartial() {
        com.geeksville.mesh.MeshProtos.MeshPacket result = new com.geeksville.mesh.MeshProtos.MeshPacket(this);
        result.from_ = from_;
        result.to_ = to_;
        result.channel_ = channel_;
        if (payloadVariantCase_ == 4) {
          if (decodedBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = decodedBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 5) {
          result.payloadVariant_ = payloadVariant_;
        }
        result.id_ = id_;
        result.rxTime_ = rxTime_;
        result.rxSnr_ = rxSnr_;
        result.hopLimit_ = hopLimit_;
        result.wantAck_ = wantAck_;
        result.priority_ = priority_;
        result.rxRssi_ = rxRssi_;
        result.payloadVariantCase_ = payloadVariantCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.MeshPacket) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.MeshPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.MeshPacket other) {
        if (other == com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) return this;
        if (other.getFrom() != 0) {
          setFrom(other.getFrom());
        }
        if (other.getTo() != 0) {
          setTo(other.getTo());
        }
        if (other.getChannel() != 0) {
          setChannel(other.getChannel());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getRxTime() != 0) {
          setRxTime(other.getRxTime());
        }
        if (other.getRxSnr() != 0F) {
          setRxSnr(other.getRxSnr());
        }
        if (other.getHopLimit() != 0) {
          setHopLimit(other.getHopLimit());
        }
        if (other.getWantAck() != false) {
          setWantAck(other.getWantAck());
        }
        if (other.priority_ != 0) {
          setPriorityValue(other.getPriorityValue());
        }
        if (other.getRxRssi() != 0) {
          setRxRssi(other.getRxRssi());
        }
        switch (other.getPayloadVariantCase()) {
          case DECODED: {
            mergeDecoded(other.getDecoded());
            break;
          }
          case ENCRYPTED: {
            setEncrypted(other.getEncrypted());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.MeshPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.MeshPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }


      private int from_ ;
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public int getFrom() {
        return from_;
      }
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(int value) {
        
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        
        from_ = 0;
        onChanged();
        return this;
      }

      private int to_ ;
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public int getTo() {
        return to_;
      }
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(int value) {
        
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        
        to_ = 0;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payloadVariant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @return The channel.
       */
      @java.lang.Override
      public int getChannel() {
        return channel_;
      }
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payloadVariant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(int value) {
        
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payloadVariant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        
        channel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder> decodedBuilder_;
      /**
       * <code>.Data decoded = 4;</code>
       * @return Whether the decoded field is set.
       */
      @java.lang.Override
      public boolean hasDecoded() {
        return payloadVariantCase_ == 4;
      }
      /**
       * <code>.Data decoded = 4;</code>
       * @return The decoded.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data getDecoded() {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 4) {
            return decodedBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        }
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      public Builder setDecoded(com.geeksville.mesh.MeshProtos.Data value) {
        if (decodedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          decodedBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      public Builder setDecoded(
          com.geeksville.mesh.MeshProtos.Data.Builder builderForValue) {
        if (decodedBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          decodedBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      public Builder mergeDecoded(com.geeksville.mesh.MeshProtos.Data value) {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.Data.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.Data.newBuilder((com.geeksville.mesh.MeshProtos.Data) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 4) {
            decodedBuilder_.mergeFrom(value);
          }
          decodedBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      public Builder clearDecoded() {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          decodedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      public com.geeksville.mesh.MeshProtos.Data.Builder getDecodedBuilder() {
        return getDecodedFieldBuilder().getBuilder();
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder() {
        if ((payloadVariantCase_ == 4) && (decodedBuilder_ != null)) {
          return decodedBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        }
      }
      /**
       * <code>.Data decoded = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder> 
          getDecodedFieldBuilder() {
        if (decodedBuilder_ == null) {
          if (!(payloadVariantCase_ == 4)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
          }
          decodedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.Data) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 4;
        onChanged();;
        return decodedBuilder_;
      }

      /**
       * <code>bytes encrypted = 5;</code>
       * @return Whether the encrypted field is set.
       */
      public boolean hasEncrypted() {
        return payloadVariantCase_ == 5;
      }
      /**
       * <code>bytes encrypted = 5;</code>
       * @return The encrypted.
       */
      public com.google.protobuf.ByteString getEncrypted() {
        if (payloadVariantCase_ == 5) {
          return (com.google.protobuf.ByteString) payloadVariant_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>bytes encrypted = 5;</code>
       * @param value The encrypted to set.
       * @return This builder for chaining.
       */
      public Builder setEncrypted(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  payloadVariantCase_ = 5;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes encrypted = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncrypted() {
        if (payloadVariantCase_ == 5) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/developers/device/encryption.md) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int rxTime_ ;
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @return The rxTime.
       */
      @java.lang.Override
      public int getRxTime() {
        return rxTime_;
      }
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @param value The rxTime to set.
       * @return This builder for chaining.
       */
      public Builder setRxTime(int value) {
        
        rxTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxTime() {
        
        rxTime_ = 0;
        onChanged();
        return this;
      }

      private float rxSnr_ ;
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @return The rxSnr.
       */
      @java.lang.Override
      public float getRxSnr() {
        return rxSnr_;
      }
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @param value The rxSnr to set.
       * @return This builder for chaining.
       */
      public Builder setRxSnr(float value) {
        
        rxSnr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxSnr() {
        
        rxSnr_ = 0F;
        onChanged();
        return this;
      }

      private int hopLimit_ ;
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 10;</code>
       * @return The hopLimit.
       */
      @java.lang.Override
      public int getHopLimit() {
        return hopLimit_;
      }
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 10;</code>
       * @param value The hopLimit to set.
       * @return This builder for chaining.
       */
      public Builder setHopLimit(int value) {
        
        hopLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHopLimit() {
        
        hopLimit_ = 0;
        onChanged();
        return this;
      }

      private boolean wantAck_ ;
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 11;</code>
       * @return The wantAck.
       */
      @java.lang.Override
      public boolean getWantAck() {
        return wantAck_;
      }
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 11;</code>
       * @param value The wantAck to set.
       * @return This builder for chaining.
       */
      public Builder setWantAck(boolean value) {
        
        wantAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantAck() {
        
        wantAck_ = false;
        onChanged();
        return this;
      }

      private int priority_ = 0;
      /**
       * <pre>
       * The priority of this message for sending. 
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 12;</code>
       * @return The enum numeric value on the wire for priority.
       */
      @java.lang.Override public int getPriorityValue() {
        return priority_;
      }
      /**
       * <pre>
       * The priority of this message for sending. 
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 12;</code>
       * @param value The enum numeric value on the wire for priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriorityValue(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The priority of this message for sending. 
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 12;</code>
       * @return The priority.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority() {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.MeshProtos.MeshPacket.Priority result = com.geeksville.mesh.MeshProtos.MeshPacket.Priority.valueOf(priority_);
        return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The priority of this message for sending. 
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 12;</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(com.geeksville.mesh.MeshProtos.MeshPacket.Priority value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        priority_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The priority of this message for sending. 
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int rxRssi_ ;
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 13;</code>
       * @return The rxRssi.
       */
      @java.lang.Override
      public int getRxRssi() {
        return rxRssi_;
      }
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 13;</code>
       * @param value The rxRssi to set.
       * @return This builder for chaining.
       */
      public Builder setRxRssi(int value) {
        
        rxRssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxRssi() {
        
        rxRssi_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MeshPacket)
    }

    // @@protoc_insertion_point(class_scope:MeshPacket)
    private static final com.geeksville.mesh.MeshProtos.MeshPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.MeshPacket();
    }

    public static com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeshPacket>
        PARSER = new com.google.protobuf.AbstractParser<MeshPacket>() {
      @java.lang.Override
      public MeshPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MeshPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MeshPacket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeshPacket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the node number
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    int getNum();

    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return Whether the user field is set.
     */
    boolean hasUser();
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return The user.
     */
    com.geeksville.mesh.MeshProtos.User getUser();
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder();

    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return The position.
     */
    com.geeksville.mesh.MeshProtos.Position getPosition();
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     */
    com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder();

    /**
     * <pre>
     * Returns the Signal-to-noise ratio (SNR) of the last received message,
     * as measured by the receiver. Return SNR of the last received message in dB
     * </pre>
     *
     * <code>float snr = 7;</code>
     * @return The snr.
     */
    float getSnr();

    /**
     * <pre>
     * Set to indicate the last time we received a packet from this node
     * </pre>
     *
     * <code>fixed32 last_heard = 4;</code>
     * @return The lastHeard.
     */
    int getLastHeard();
  }
  /**
   * <pre>
   * The bluetooth to device link:
   * Old BTLE protocol docs from TODO, merge in above and make real docs...
   * use protocol buffers, and NanoPB
   * messages from device to phone:
   * POSITION_UPDATE (..., time)
   * TEXT_RECEIVED(from, text, time)
   * OPAQUE_RECEIVED(from, payload, time) (for signal messages or other applications)
   * messages from phone to device:
   * SET_MYID(id, human readable long, human readable short) (send down the unique ID
   * string used for this node, a human readable string shown for that id, and a very
   * short human readable string suitable for oled screen) SEND_OPAQUE(dest, payload)
   * (for signal messages or other applications) SEND_TEXT(dest, text) Get all
   * nodes() (returns list of nodes, with full info, last time seen, loc, battery
   * level etc) SET_CONFIG (switches device to a new set of radio params and
   * preshared key, drops all existing nodes, force our node to rejoin this new group)
   * Full information about a node on the mesh
   * </pre>
   *
   * Protobuf type {@code NodeInfo}
   */
  public static final class NodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NodeInfo)
      NodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeInfo.newBuilder() to construct.
    private NodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NodeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              num_ = input.readUInt32();
              break;
            }
            case 18: {
              com.geeksville.mesh.MeshProtos.User.Builder subBuilder = null;
              if (user_ != null) {
                subBuilder = user_.toBuilder();
              }
              user_ = input.readMessage(com.geeksville.mesh.MeshProtos.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(user_);
                user_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.geeksville.mesh.MeshProtos.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(com.geeksville.mesh.MeshProtos.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 37: {

              lastHeard_ = input.readFixed32();
              break;
            }
            case 61: {

              snr_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.NodeInfo.class, com.geeksville.mesh.MeshProtos.NodeInfo.Builder.class);
    }

    public static final int NUM_FIELD_NUMBER = 1;
    private int num_;
    /**
     * <pre>
     * the node number
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    @java.lang.Override
    public int getNum() {
      return num_;
    }

    public static final int USER_FIELD_NUMBER = 2;
    private com.geeksville.mesh.MeshProtos.User user_;
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return user_ != null;
    }
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return The user.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.User getUser() {
      return user_ == null ? com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
    }
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder() {
      return getUser();
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private com.geeksville.mesh.MeshProtos.Position position_;
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return The position.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Position getPosition() {
      return position_ == null ? com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int SNR_FIELD_NUMBER = 7;
    private float snr_;
    /**
     * <pre>
     * Returns the Signal-to-noise ratio (SNR) of the last received message,
     * as measured by the receiver. Return SNR of the last received message in dB
     * </pre>
     *
     * <code>float snr = 7;</code>
     * @return The snr.
     */
    @java.lang.Override
    public float getSnr() {
      return snr_;
    }

    public static final int LAST_HEARD_FIELD_NUMBER = 4;
    private int lastHeard_;
    /**
     * <pre>
     * Set to indicate the last time we received a packet from this node
     * </pre>
     *
     * <code>fixed32 last_heard = 4;</code>
     * @return The lastHeard.
     */
    @java.lang.Override
    public int getLastHeard() {
      return lastHeard_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (num_ != 0) {
        output.writeUInt32(1, num_);
      }
      if (user_ != null) {
        output.writeMessage(2, getUser());
      }
      if (position_ != null) {
        output.writeMessage(3, getPosition());
      }
      if (lastHeard_ != 0) {
        output.writeFixed32(4, lastHeard_);
      }
      if (snr_ != 0F) {
        output.writeFloat(7, snr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (num_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, num_);
      }
      if (user_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUser());
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPosition());
      }
      if (lastHeard_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, lastHeard_);
      }
      if (snr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, snr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.NodeInfo)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.NodeInfo other = (com.geeksville.mesh.MeshProtos.NodeInfo) obj;

      if (getNum()
          != other.getNum()) return false;
      if (hasUser() != other.hasUser()) return false;
      if (hasUser()) {
        if (!getUser()
            .equals(other.getUser())) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (java.lang.Float.floatToIntBits(getSnr())
          != java.lang.Float.floatToIntBits(
              other.getSnr())) return false;
      if (getLastHeard()
          != other.getLastHeard()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNum();
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      hash = (37 * hash) + SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSnr());
      hash = (37 * hash) + LAST_HEARD_FIELD_NUMBER;
      hash = (53 * hash) + getLastHeard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.NodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The bluetooth to device link:
     * Old BTLE protocol docs from TODO, merge in above and make real docs...
     * use protocol buffers, and NanoPB
     * messages from device to phone:
     * POSITION_UPDATE (..., time)
     * TEXT_RECEIVED(from, text, time)
     * OPAQUE_RECEIVED(from, payload, time) (for signal messages or other applications)
     * messages from phone to device:
     * SET_MYID(id, human readable long, human readable short) (send down the unique ID
     * string used for this node, a human readable string shown for that id, and a very
     * short human readable string suitable for oled screen) SEND_OPAQUE(dest, payload)
     * (for signal messages or other applications) SEND_TEXT(dest, text) Get all
     * nodes() (returns list of nodes, with full info, last time seen, loc, battery
     * level etc) SET_CONFIG (switches device to a new set of radio params and
     * preshared key, drops all existing nodes, force our node to rejoin this new group)
     * Full information about a node on the mesh
     * </pre>
     *
     * Protobuf type {@code NodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NodeInfo)
        com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.NodeInfo.class, com.geeksville.mesh.MeshProtos.NodeInfo.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.NodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        num_ = 0;

        if (userBuilder_ == null) {
          user_ = null;
        } else {
          user_ = null;
          userBuilder_ = null;
        }
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        snr_ = 0F;

        lastHeard_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo build() {
        com.geeksville.mesh.MeshProtos.NodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo buildPartial() {
        com.geeksville.mesh.MeshProtos.NodeInfo result = new com.geeksville.mesh.MeshProtos.NodeInfo(this);
        result.num_ = num_;
        if (userBuilder_ == null) {
          result.user_ = user_;
        } else {
          result.user_ = userBuilder_.build();
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.snr_ = snr_;
        result.lastHeard_ = lastHeard_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.NodeInfo) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.NodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.NodeInfo other) {
        if (other == com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance()) return this;
        if (other.getNum() != 0) {
          setNum(other.getNum());
        }
        if (other.hasUser()) {
          mergeUser(other.getUser());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.getSnr() != 0F) {
          setSnr(other.getSnr());
        }
        if (other.getLastHeard() != 0) {
          setLastHeard(other.getLastHeard());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.NodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.NodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int num_ ;
      /**
       * <pre>
       * the node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }
      /**
       * <pre>
       * the node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @param value The num to set.
       * @return This builder for chaining.
       */
      public Builder setNum(int value) {
        
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNum() {
        
        num_ = 0;
        onChanged();
        return this;
      }

      private com.geeksville.mesh.MeshProtos.User user_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> userBuilder_;
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       * @return Whether the user field is set.
       */
      public boolean hasUser() {
        return userBuilder_ != null || user_ != null;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       * @return The user.
       */
      public com.geeksville.mesh.MeshProtos.User getUser() {
        if (userBuilder_ == null) {
          return user_ == null ? com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
        } else {
          return userBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder setUser(com.geeksville.mesh.MeshProtos.User value) {
        if (userBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          user_ = value;
          onChanged();
        } else {
          userBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder setUser(
          com.geeksville.mesh.MeshProtos.User.Builder builderForValue) {
        if (userBuilder_ == null) {
          user_ = builderForValue.build();
          onChanged();
        } else {
          userBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder mergeUser(com.geeksville.mesh.MeshProtos.User value) {
        if (userBuilder_ == null) {
          if (user_ != null) {
            user_ =
              com.geeksville.mesh.MeshProtos.User.newBuilder(user_).mergeFrom(value).buildPartial();
          } else {
            user_ = value;
          }
          onChanged();
        } else {
          userBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder clearUser() {
        if (userBuilder_ == null) {
          user_ = null;
          onChanged();
        } else {
          user_ = null;
          userBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.User.Builder getUserBuilder() {
        
        onChanged();
        return getUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder() {
        if (userBuilder_ != null) {
          return userBuilder_.getMessageOrBuilder();
        } else {
          return user_ == null ?
              com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
        }
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> 
          getUserFieldBuilder() {
        if (userBuilder_ == null) {
          userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder>(
                  getUser(),
                  getParentForChildren(),
                  isClean());
          user_ = null;
        }
        return userBuilder_;
      }

      private com.geeksville.mesh.MeshProtos.Position position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder> positionBuilder_;
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       * @return The position.
       */
      public com.geeksville.mesh.MeshProtos.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder setPosition(com.geeksville.mesh.MeshProtos.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder setPosition(
          com.geeksville.mesh.MeshProtos.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder mergePosition(com.geeksville.mesh.MeshProtos.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              com.geeksville.mesh.MeshProtos.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private float snr_ ;
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 7;</code>
       * @return The snr.
       */
      @java.lang.Override
      public float getSnr() {
        return snr_;
      }
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 7;</code>
       * @param value The snr to set.
       * @return This builder for chaining.
       */
      public Builder setSnr(float value) {
        
        snr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnr() {
        
        snr_ = 0F;
        onChanged();
        return this;
      }

      private int lastHeard_ ;
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 4;</code>
       * @return The lastHeard.
       */
      @java.lang.Override
      public int getLastHeard() {
        return lastHeard_;
      }
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 4;</code>
       * @param value The lastHeard to set.
       * @return This builder for chaining.
       */
      public Builder setLastHeard(int value) {
        
        lastHeard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastHeard() {
        
        lastHeard_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NodeInfo)
    }

    // @@protoc_insertion_point(class_scope:NodeInfo)
    private static final com.geeksville.mesh.MeshProtos.NodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.NodeInfo();
    }

    public static com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInfo>() {
      @java.lang.Override
      public NodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MyNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MyNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     * </pre>
     *
     * <code>uint32 my_node_num = 1;</code>
     * @return The myNodeNum.
     */
    int getMyNodeNum();

    /**
     * <pre>
     * Note: This flag merely means we detected a hardware GPS in our node.
     * Not the same as UserPreferences.location_sharing
     * </pre>
     *
     * <code>bool has_gps = 2;</code>
     * @return The hasGps.
     */
    boolean getHasGps();

    /**
     * <pre>
     * # of frequencies that can be used (set at build time in the device flash image).
     * Note: this is different from max_channels, this field is telling the # of frequency bands this node can use.
     * (old name was num_channels)
     * </pre>
     *
     * <code>uint32 num_bands = 3;</code>
     * @return The numBands.
     */
    int getNumBands();

    /**
     * <pre>
     * The maximum number of 'software' channels that can be set on this node. 
     * </pre>
     *
     * <code>uint32 max_channels = 15;</code>
     * @return The maxChannels.
     */
    int getMaxChannels();

    /**
     * <pre>
     * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
     * The region code for my radio (US, CN, etc...)
     * Note: This string is deprecated.
     * The 1.0 builds populate it based on the flashed firmware name.
     * But for newer builds this string will be unpopulated (missing/null).
     * For those builds you should instead look at the new read/write region enum in UserSettings
     * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
     * </pre>
     *
     * <code>string region = 4 [deprecated = true];</code>
     * @return The region.
     */
    @java.lang.Deprecated java.lang.String getRegion();
    /**
     * <pre>
     * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
     * The region code for my radio (US, CN, etc...)
     * Note: This string is deprecated.
     * The 1.0 builds populate it based on the flashed firmware name.
     * But for newer builds this string will be unpopulated (missing/null).
     * For those builds you should instead look at the new read/write region enum in UserSettings
     * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
     * </pre>
     *
     * <code>string region = 4 [deprecated = true];</code>
     * @return The bytes for region.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
     * @return The hwModelDeprecated.
     */
    @java.lang.Deprecated java.lang.String getHwModelDeprecated();
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
     * @return The bytes for hwModelDeprecated.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getHwModelDeprecatedBytes();

    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 6;</code>
     * @return The firmwareVersion.
     */
    java.lang.String getFirmwareVersion();
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 6;</code>
     * @return The bytes for firmwareVersion.
     */
    com.google.protobuf.ByteString
        getFirmwareVersionBytes();

    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 7;</code>
     * @return The enum numeric value on the wire for errorCode.
     */
    int getErrorCodeValue();
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 7;</code>
     * @return The errorCode.
     */
    com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode();

    /**
     * <pre>
     * A numeric error address (nonzero if available)
     * </pre>
     *
     * <code>uint32 error_address = 8;</code>
     * @return The errorAddress.
     */
    int getErrorAddress();

    /**
     * <pre>
     * The total number of errors this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 error_count = 9;</code>
     * @return The errorCount.
     */
    int getErrorCount();

    /**
     * <pre>
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 reboot_count = 10;</code>
     * @return The rebootCount.
     */
    int getRebootCount();

    /**
     * <pre>
     * How long before we consider a message abandoned and we can clear our
     * caches of any messages in flight Normally quite large to handle the worst case
     * message delivery time, 5 minutes.
     * Formerly called FLOOD_EXPIRE_TIME in the device code
     * </pre>
     *
     * <code>uint32 message_timeout_msec = 13;</code>
     * @return The messageTimeoutMsec.
     */
    int getMessageTimeoutMsec();

    /**
     * <pre>
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     * </pre>
     *
     * <code>uint32 min_app_version = 14;</code>
     * @return The minAppVersion.
     */
    int getMinAppVersion();
  }
  /**
   * <pre>
   * Unique local debugging info for this node
   * Note: we don't include position or the user info, because that will come in the
   * Sent to the phone in response to WantNodes.
   * </pre>
   *
   * Protobuf type {@code MyNodeInfo}
   */
  public static final class MyNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MyNodeInfo)
      MyNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MyNodeInfo.newBuilder() to construct.
    private MyNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MyNodeInfo() {
      region_ = "";
      hwModelDeprecated_ = "";
      firmwareVersion_ = "";
      errorCode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MyNodeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MyNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              myNodeNum_ = input.readUInt32();
              break;
            }
            case 16: {

              hasGps_ = input.readBool();
              break;
            }
            case 24: {

              numBands_ = input.readUInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              hwModelDeprecated_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              firmwareVersion_ = s;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              errorCode_ = rawValue;
              break;
            }
            case 64: {

              errorAddress_ = input.readUInt32();
              break;
            }
            case 72: {

              errorCount_ = input.readUInt32();
              break;
            }
            case 80: {

              rebootCount_ = input.readUInt32();
              break;
            }
            case 104: {

              messageTimeoutMsec_ = input.readUInt32();
              break;
            }
            case 112: {

              minAppVersion_ = input.readUInt32();
              break;
            }
            case 120: {

              maxChannels_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.MyNodeInfo.class, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder.class);
    }

    public static final int MY_NODE_NUM_FIELD_NUMBER = 1;
    private int myNodeNum_;
    /**
     * <pre>
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     * </pre>
     *
     * <code>uint32 my_node_num = 1;</code>
     * @return The myNodeNum.
     */
    @java.lang.Override
    public int getMyNodeNum() {
      return myNodeNum_;
    }

    public static final int HAS_GPS_FIELD_NUMBER = 2;
    private boolean hasGps_;
    /**
     * <pre>
     * Note: This flag merely means we detected a hardware GPS in our node.
     * Not the same as UserPreferences.location_sharing
     * </pre>
     *
     * <code>bool has_gps = 2;</code>
     * @return The hasGps.
     */
    @java.lang.Override
    public boolean getHasGps() {
      return hasGps_;
    }

    public static final int NUM_BANDS_FIELD_NUMBER = 3;
    private int numBands_;
    /**
     * <pre>
     * # of frequencies that can be used (set at build time in the device flash image).
     * Note: this is different from max_channels, this field is telling the # of frequency bands this node can use.
     * (old name was num_channels)
     * </pre>
     *
     * <code>uint32 num_bands = 3;</code>
     * @return The numBands.
     */
    @java.lang.Override
    public int getNumBands() {
      return numBands_;
    }

    public static final int MAX_CHANNELS_FIELD_NUMBER = 15;
    private int maxChannels_;
    /**
     * <pre>
     * The maximum number of 'software' channels that can be set on this node. 
     * </pre>
     *
     * <code>uint32 max_channels = 15;</code>
     * @return The maxChannels.
     */
    @java.lang.Override
    public int getMaxChannels() {
      return maxChannels_;
    }

    public static final int REGION_FIELD_NUMBER = 4;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
     * The region code for my radio (US, CN, etc...)
     * Note: This string is deprecated.
     * The 1.0 builds populate it based on the flashed firmware name.
     * But for newer builds this string will be unpopulated (missing/null).
     * For those builds you should instead look at the new read/write region enum in UserSettings
     * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
     * </pre>
     *
     * <code>string region = 4 [deprecated = true];</code>
     * @return The region.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
     * The region code for my radio (US, CN, etc...)
     * Note: This string is deprecated.
     * The 1.0 builds populate it based on the flashed firmware name.
     * But for newer builds this string will be unpopulated (missing/null).
     * For those builds you should instead look at the new read/write region enum in UserSettings
     * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
     * </pre>
     *
     * <code>string region = 4 [deprecated = true];</code>
     * @return The bytes for region.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HW_MODEL_DEPRECATED_FIELD_NUMBER = 5;
    private volatile java.lang.Object hwModelDeprecated_;
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
     * @return The hwModelDeprecated.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getHwModelDeprecated() {
      java.lang.Object ref = hwModelDeprecated_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hwModelDeprecated_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
     * @return The bytes for hwModelDeprecated.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getHwModelDeprecatedBytes() {
      java.lang.Object ref = hwModelDeprecated_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hwModelDeprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIRMWARE_VERSION_FIELD_NUMBER = 6;
    private volatile java.lang.Object firmwareVersion_;
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 6;</code>
     * @return The firmwareVersion.
     */
    @java.lang.Override
    public java.lang.String getFirmwareVersion() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        firmwareVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 6;</code>
     * @return The bytes for firmwareVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFirmwareVersionBytes() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERROR_CODE_FIELD_NUMBER = 7;
    private int errorCode_;
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 7;</code>
     * @return The enum numeric value on the wire for errorCode.
     */
    @java.lang.Override public int getErrorCodeValue() {
      return errorCode_;
    }
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 7;</code>
     * @return The errorCode.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode() {
      @SuppressWarnings("deprecation")
      com.geeksville.mesh.MeshProtos.CriticalErrorCode result = com.geeksville.mesh.MeshProtos.CriticalErrorCode.valueOf(errorCode_);
      return result == null ? com.geeksville.mesh.MeshProtos.CriticalErrorCode.UNRECOGNIZED : result;
    }

    public static final int ERROR_ADDRESS_FIELD_NUMBER = 8;
    private int errorAddress_;
    /**
     * <pre>
     * A numeric error address (nonzero if available)
     * </pre>
     *
     * <code>uint32 error_address = 8;</code>
     * @return The errorAddress.
     */
    @java.lang.Override
    public int getErrorAddress() {
      return errorAddress_;
    }

    public static final int ERROR_COUNT_FIELD_NUMBER = 9;
    private int errorCount_;
    /**
     * <pre>
     * The total number of errors this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 error_count = 9;</code>
     * @return The errorCount.
     */
    @java.lang.Override
    public int getErrorCount() {
      return errorCount_;
    }

    public static final int REBOOT_COUNT_FIELD_NUMBER = 10;
    private int rebootCount_;
    /**
     * <pre>
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 reboot_count = 10;</code>
     * @return The rebootCount.
     */
    @java.lang.Override
    public int getRebootCount() {
      return rebootCount_;
    }

    public static final int MESSAGE_TIMEOUT_MSEC_FIELD_NUMBER = 13;
    private int messageTimeoutMsec_;
    /**
     * <pre>
     * How long before we consider a message abandoned and we can clear our
     * caches of any messages in flight Normally quite large to handle the worst case
     * message delivery time, 5 minutes.
     * Formerly called FLOOD_EXPIRE_TIME in the device code
     * </pre>
     *
     * <code>uint32 message_timeout_msec = 13;</code>
     * @return The messageTimeoutMsec.
     */
    @java.lang.Override
    public int getMessageTimeoutMsec() {
      return messageTimeoutMsec_;
    }

    public static final int MIN_APP_VERSION_FIELD_NUMBER = 14;
    private int minAppVersion_;
    /**
     * <pre>
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     * </pre>
     *
     * <code>uint32 min_app_version = 14;</code>
     * @return The minAppVersion.
     */
    @java.lang.Override
    public int getMinAppVersion() {
      return minAppVersion_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (myNodeNum_ != 0) {
        output.writeUInt32(1, myNodeNum_);
      }
      if (hasGps_ != false) {
        output.writeBool(2, hasGps_);
      }
      if (numBands_ != 0) {
        output.writeUInt32(3, numBands_);
      }
      if (!getRegionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, region_);
      }
      if (!getHwModelDeprecatedBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hwModelDeprecated_);
      }
      if (!getFirmwareVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, firmwareVersion_);
      }
      if (errorCode_ != com.geeksville.mesh.MeshProtos.CriticalErrorCode.None.getNumber()) {
        output.writeEnum(7, errorCode_);
      }
      if (errorAddress_ != 0) {
        output.writeUInt32(8, errorAddress_);
      }
      if (errorCount_ != 0) {
        output.writeUInt32(9, errorCount_);
      }
      if (rebootCount_ != 0) {
        output.writeUInt32(10, rebootCount_);
      }
      if (messageTimeoutMsec_ != 0) {
        output.writeUInt32(13, messageTimeoutMsec_);
      }
      if (minAppVersion_ != 0) {
        output.writeUInt32(14, minAppVersion_);
      }
      if (maxChannels_ != 0) {
        output.writeUInt32(15, maxChannels_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (myNodeNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, myNodeNum_);
      }
      if (hasGps_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, hasGps_);
      }
      if (numBands_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numBands_);
      }
      if (!getRegionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, region_);
      }
      if (!getHwModelDeprecatedBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, hwModelDeprecated_);
      }
      if (!getFirmwareVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, firmwareVersion_);
      }
      if (errorCode_ != com.geeksville.mesh.MeshProtos.CriticalErrorCode.None.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, errorCode_);
      }
      if (errorAddress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, errorAddress_);
      }
      if (errorCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, errorCount_);
      }
      if (rebootCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, rebootCount_);
      }
      if (messageTimeoutMsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, messageTimeoutMsec_);
      }
      if (minAppVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, minAppVersion_);
      }
      if (maxChannels_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, maxChannels_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.MyNodeInfo)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.MyNodeInfo other = (com.geeksville.mesh.MeshProtos.MyNodeInfo) obj;

      if (getMyNodeNum()
          != other.getMyNodeNum()) return false;
      if (getHasGps()
          != other.getHasGps()) return false;
      if (getNumBands()
          != other.getNumBands()) return false;
      if (getMaxChannels()
          != other.getMaxChannels()) return false;
      if (!getRegion()
          .equals(other.getRegion())) return false;
      if (!getHwModelDeprecated()
          .equals(other.getHwModelDeprecated())) return false;
      if (!getFirmwareVersion()
          .equals(other.getFirmwareVersion())) return false;
      if (errorCode_ != other.errorCode_) return false;
      if (getErrorAddress()
          != other.getErrorAddress()) return false;
      if (getErrorCount()
          != other.getErrorCount()) return false;
      if (getRebootCount()
          != other.getRebootCount()) return false;
      if (getMessageTimeoutMsec()
          != other.getMessageTimeoutMsec()) return false;
      if (getMinAppVersion()
          != other.getMinAppVersion()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MY_NODE_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getMyNodeNum();
      hash = (37 * hash) + HAS_GPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasGps());
      hash = (37 * hash) + NUM_BANDS_FIELD_NUMBER;
      hash = (53 * hash) + getNumBands();
      hash = (37 * hash) + MAX_CHANNELS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxChannels();
      hash = (37 * hash) + REGION_FIELD_NUMBER;
      hash = (53 * hash) + getRegion().hashCode();
      hash = (37 * hash) + HW_MODEL_DEPRECATED_FIELD_NUMBER;
      hash = (53 * hash) + getHwModelDeprecated().hashCode();
      hash = (37 * hash) + FIRMWARE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getFirmwareVersion().hashCode();
      hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + errorCode_;
      hash = (37 * hash) + ERROR_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorAddress();
      hash = (37 * hash) + ERROR_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getErrorCount();
      hash = (37 * hash) + REBOOT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getRebootCount();
      hash = (37 * hash) + MESSAGE_TIMEOUT_MSEC_FIELD_NUMBER;
      hash = (53 * hash) + getMessageTimeoutMsec();
      hash = (37 * hash) + MIN_APP_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getMinAppVersion();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.MyNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Unique local debugging info for this node
     * Note: we don't include position or the user info, because that will come in the
     * Sent to the phone in response to WantNodes.
     * </pre>
     *
     * Protobuf type {@code MyNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MyNodeInfo)
        com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.MyNodeInfo.class, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.MyNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        myNodeNum_ = 0;

        hasGps_ = false;

        numBands_ = 0;

        maxChannels_ = 0;

        region_ = "";

        hwModelDeprecated_ = "";

        firmwareVersion_ = "";

        errorCode_ = 0;

        errorAddress_ = 0;

        errorCount_ = 0;

        rebootCount_ = 0;

        messageTimeoutMsec_ = 0;

        minAppVersion_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo build() {
        com.geeksville.mesh.MeshProtos.MyNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo buildPartial() {
        com.geeksville.mesh.MeshProtos.MyNodeInfo result = new com.geeksville.mesh.MeshProtos.MyNodeInfo(this);
        result.myNodeNum_ = myNodeNum_;
        result.hasGps_ = hasGps_;
        result.numBands_ = numBands_;
        result.maxChannels_ = maxChannels_;
        result.region_ = region_;
        result.hwModelDeprecated_ = hwModelDeprecated_;
        result.firmwareVersion_ = firmwareVersion_;
        result.errorCode_ = errorCode_;
        result.errorAddress_ = errorAddress_;
        result.errorCount_ = errorCount_;
        result.rebootCount_ = rebootCount_;
        result.messageTimeoutMsec_ = messageTimeoutMsec_;
        result.minAppVersion_ = minAppVersion_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.MyNodeInfo) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.MyNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.MyNodeInfo other) {
        if (other == com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance()) return this;
        if (other.getMyNodeNum() != 0) {
          setMyNodeNum(other.getMyNodeNum());
        }
        if (other.getHasGps() != false) {
          setHasGps(other.getHasGps());
        }
        if (other.getNumBands() != 0) {
          setNumBands(other.getNumBands());
        }
        if (other.getMaxChannels() != 0) {
          setMaxChannels(other.getMaxChannels());
        }
        if (!other.getRegion().isEmpty()) {
          region_ = other.region_;
          onChanged();
        }
        if (!other.getHwModelDeprecated().isEmpty()) {
          hwModelDeprecated_ = other.hwModelDeprecated_;
          onChanged();
        }
        if (!other.getFirmwareVersion().isEmpty()) {
          firmwareVersion_ = other.firmwareVersion_;
          onChanged();
        }
        if (other.errorCode_ != 0) {
          setErrorCodeValue(other.getErrorCodeValue());
        }
        if (other.getErrorAddress() != 0) {
          setErrorAddress(other.getErrorAddress());
        }
        if (other.getErrorCount() != 0) {
          setErrorCount(other.getErrorCount());
        }
        if (other.getRebootCount() != 0) {
          setRebootCount(other.getRebootCount());
        }
        if (other.getMessageTimeoutMsec() != 0) {
          setMessageTimeoutMsec(other.getMessageTimeoutMsec());
        }
        if (other.getMinAppVersion() != 0) {
          setMinAppVersion(other.getMinAppVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.MyNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.MyNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int myNodeNum_ ;
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @return The myNodeNum.
       */
      @java.lang.Override
      public int getMyNodeNum() {
        return myNodeNum_;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @param value The myNodeNum to set.
       * @return This builder for chaining.
       */
      public Builder setMyNodeNum(int value) {
        
        myNodeNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyNodeNum() {
        
        myNodeNum_ = 0;
        onChanged();
        return this;
      }

      private boolean hasGps_ ;
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @return The hasGps.
       */
      @java.lang.Override
      public boolean getHasGps() {
        return hasGps_;
      }
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @param value The hasGps to set.
       * @return This builder for chaining.
       */
      public Builder setHasGps(boolean value) {
        
        hasGps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasGps() {
        
        hasGps_ = false;
        onChanged();
        return this;
      }

      private int numBands_ ;
      /**
       * <pre>
       * # of frequencies that can be used (set at build time in the device flash image).
       * Note: this is different from max_channels, this field is telling the # of frequency bands this node can use.
       * (old name was num_channels)
       * </pre>
       *
       * <code>uint32 num_bands = 3;</code>
       * @return The numBands.
       */
      @java.lang.Override
      public int getNumBands() {
        return numBands_;
      }
      /**
       * <pre>
       * # of frequencies that can be used (set at build time in the device flash image).
       * Note: this is different from max_channels, this field is telling the # of frequency bands this node can use.
       * (old name was num_channels)
       * </pre>
       *
       * <code>uint32 num_bands = 3;</code>
       * @param value The numBands to set.
       * @return This builder for chaining.
       */
      public Builder setNumBands(int value) {
        
        numBands_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * # of frequencies that can be used (set at build time in the device flash image).
       * Note: this is different from max_channels, this field is telling the # of frequency bands this node can use.
       * (old name was num_channels)
       * </pre>
       *
       * <code>uint32 num_bands = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumBands() {
        
        numBands_ = 0;
        onChanged();
        return this;
      }

      private int maxChannels_ ;
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node. 
       * </pre>
       *
       * <code>uint32 max_channels = 15;</code>
       * @return The maxChannels.
       */
      @java.lang.Override
      public int getMaxChannels() {
        return maxChannels_;
      }
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node. 
       * </pre>
       *
       * <code>uint32 max_channels = 15;</code>
       * @param value The maxChannels to set.
       * @return This builder for chaining.
       */
      public Builder setMaxChannels(int value) {
        
        maxChannels_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node. 
       * </pre>
       *
       * <code>uint32 max_channels = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxChannels() {
        
        maxChannels_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
       * The region code for my radio (US, CN, etc...)
       * Note: This string is deprecated.
       * The 1.0 builds populate it based on the flashed firmware name.
       * But for newer builds this string will be unpopulated (missing/null).
       * For those builds you should instead look at the new read/write region enum in UserSettings
       * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
       * </pre>
       *
       * <code>string region = 4 [deprecated = true];</code>
       * @return The region.
       */
      @java.lang.Deprecated public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          region_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
       * The region code for my radio (US, CN, etc...)
       * Note: This string is deprecated.
       * The 1.0 builds populate it based on the flashed firmware name.
       * But for newer builds this string will be unpopulated (missing/null).
       * For those builds you should instead look at the new read/write region enum in UserSettings
       * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
       * </pre>
       *
       * <code>string region = 4 [deprecated = true];</code>
       * @return The bytes for region.
       */
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
       * The region code for my radio (US, CN, etc...)
       * Note: This string is deprecated.
       * The 1.0 builds populate it based on the flashed firmware name.
       * But for newer builds this string will be unpopulated (missing/null).
       * For those builds you should instead look at the new read/write region enum in UserSettings
       * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
       * </pre>
       *
       * <code>string region = 4 [deprecated = true];</code>
       * @param value The region to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
       * The region code for my radio (US, CN, etc...)
       * Note: This string is deprecated.
       * The 1.0 builds populate it based on the flashed firmware name.
       * But for newer builds this string will be unpopulated (missing/null).
       * For those builds you should instead look at the new read/write region enum in UserSettings
       * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
       * </pre>
       *
       * <code>string region = 4 [deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearRegion() {
        
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated! ONLY USED IN DEVICE CODE (for upgrading old 1.0 firmwares) DO NOT READ ELSEWHERE.
       * The region code for my radio (US, CN, etc...)
       * Note: This string is deprecated.
       * The 1.0 builds populate it based on the flashed firmware name.
       * But for newer builds this string will be unpopulated (missing/null).
       * For those builds you should instead look at the new read/write region enum in UserSettings
       * The format of this string was 1.0-US or 1.0-CN etc.. Or empty string if unset.
       * </pre>
       *
       * <code>string region = 4 [deprecated = true];</code>
       * @param value The bytes for region to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        region_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object hwModelDeprecated_ = "";
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
       * @return The hwModelDeprecated.
       */
      @java.lang.Deprecated public java.lang.String getHwModelDeprecated() {
        java.lang.Object ref = hwModelDeprecated_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hwModelDeprecated_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
       * @return The bytes for hwModelDeprecated.
       */
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getHwModelDeprecatedBytes() {
        java.lang.Object ref = hwModelDeprecated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hwModelDeprecated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
       * @param value The hwModelDeprecated to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setHwModelDeprecated(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hwModelDeprecated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearHwModelDeprecated() {
        
        hwModelDeprecated_ = getDefaultInstance().getHwModelDeprecated();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>string hw_model_deprecated = 5 [deprecated = true];</code>
       * @param value The bytes for hwModelDeprecated to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setHwModelDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hwModelDeprecated_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object firmwareVersion_ = "";
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 6;</code>
       * @return The firmwareVersion.
       */
      public java.lang.String getFirmwareVersion() {
        java.lang.Object ref = firmwareVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          firmwareVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 6;</code>
       * @return The bytes for firmwareVersion.
       */
      public com.google.protobuf.ByteString
          getFirmwareVersionBytes() {
        java.lang.Object ref = firmwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firmwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 6;</code>
       * @param value The firmwareVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFirmwareVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirmwareVersion() {
        
        firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 6;</code>
       * @param value The bytes for firmwareVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFirmwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        firmwareVersion_ = value;
        onChanged();
        return this;
      }

      private int errorCode_ = 0;
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 7;</code>
       * @return The enum numeric value on the wire for errorCode.
       */
      @java.lang.Override public int getErrorCodeValue() {
        return errorCode_;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 7;</code>
       * @param value The enum numeric value on the wire for errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCodeValue(int value) {
        
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 7;</code>
       * @return The errorCode.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode() {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.MeshProtos.CriticalErrorCode result = com.geeksville.mesh.MeshProtos.CriticalErrorCode.valueOf(errorCode_);
        return result == null ? com.geeksville.mesh.MeshProtos.CriticalErrorCode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 7;</code>
       * @param value The errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCode(com.geeksville.mesh.MeshProtos.CriticalErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        errorCode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCode() {
        
        errorCode_ = 0;
        onChanged();
        return this;
      }

      private int errorAddress_ ;
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 8;</code>
       * @return The errorAddress.
       */
      @java.lang.Override
      public int getErrorAddress() {
        return errorAddress_;
      }
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 8;</code>
       * @param value The errorAddress to set.
       * @return This builder for chaining.
       */
      public Builder setErrorAddress(int value) {
        
        errorAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorAddress() {
        
        errorAddress_ = 0;
        onChanged();
        return this;
      }

      private int errorCount_ ;
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 9;</code>
       * @return The errorCount.
       */
      @java.lang.Override
      public int getErrorCount() {
        return errorCount_;
      }
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 9;</code>
       * @param value The errorCount to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCount(int value) {
        
        errorCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCount() {
        
        errorCount_ = 0;
        onChanged();
        return this;
      }

      private int rebootCount_ ;
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 10;</code>
       * @return The rebootCount.
       */
      @java.lang.Override
      public int getRebootCount() {
        return rebootCount_;
      }
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 10;</code>
       * @param value The rebootCount to set.
       * @return This builder for chaining.
       */
      public Builder setRebootCount(int value) {
        
        rebootCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRebootCount() {
        
        rebootCount_ = 0;
        onChanged();
        return this;
      }

      private int messageTimeoutMsec_ ;
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 13;</code>
       * @return The messageTimeoutMsec.
       */
      @java.lang.Override
      public int getMessageTimeoutMsec() {
        return messageTimeoutMsec_;
      }
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 13;</code>
       * @param value The messageTimeoutMsec to set.
       * @return This builder for chaining.
       */
      public Builder setMessageTimeoutMsec(int value) {
        
        messageTimeoutMsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageTimeoutMsec() {
        
        messageTimeoutMsec_ = 0;
        onChanged();
        return this;
      }

      private int minAppVersion_ ;
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 14;</code>
       * @return The minAppVersion.
       */
      @java.lang.Override
      public int getMinAppVersion() {
        return minAppVersion_;
      }
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 14;</code>
       * @param value The minAppVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinAppVersion(int value) {
        
        minAppVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAppVersion() {
        
        minAppVersion_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MyNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:MyNodeInfo)
    private static final com.geeksville.mesh.MeshProtos.MyNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.MyNodeInfo();
    }

    public static com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MyNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<MyNodeInfo>() {
      @java.lang.Override
      public MyNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MyNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MyNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MyNodeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * Seconds since 1970 - or 0 for unknown/unset
     * </pre>
     *
     * <code>fixed32 time = 2;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The enum numeric value on the wire for level.
     */
    int getLevelValue();
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The level.
     */
    com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel();
  }
  /**
   * <pre>
   * Debug output from the device.
   * To minimize the size of records inside the device code, if a time/source/level is not set 
   * on the message it is assumed to be a continuation of the previously sent message.
   * This allows the device code to use fixed maxlen 64 byte strings for messages,
   * and then extend as needed by emitting multiple records.
   * </pre>
   *
   * Protobuf type {@code LogRecord}
   */
  public static final class LogRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LogRecord)
      LogRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogRecord.newBuilder() to construct.
    private LogRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogRecord() {
      message_ = "";
      source_ = "";
      level_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 21: {

              time_ = input.readFixed32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              level_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.LogRecord.class, com.geeksville.mesh.MeshProtos.LogRecord.Builder.class);
    }

    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * Protobuf enum {@code LogRecord.Level}
     */
    public enum Level
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <code>CRITICAL = 50;</code>
       */
      CRITICAL(50),
      /**
       * <code>ERROR = 40;</code>
       */
      ERROR(40),
      /**
       * <code>WARNING = 30;</code>
       */
      WARNING(30),
      /**
       * <code>INFO = 20;</code>
       */
      INFO(20),
      /**
       * <code>DEBUG = 10;</code>
       */
      DEBUG(10),
      /**
       * <code>TRACE = 5;</code>
       */
      TRACE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <code>CRITICAL = 50;</code>
       */
      public static final int CRITICAL_VALUE = 50;
      /**
       * <code>ERROR = 40;</code>
       */
      public static final int ERROR_VALUE = 40;
      /**
       * <code>WARNING = 30;</code>
       */
      public static final int WARNING_VALUE = 30;
      /**
       * <code>INFO = 20;</code>
       */
      public static final int INFO_VALUE = 20;
      /**
       * <code>DEBUG = 10;</code>
       */
      public static final int DEBUG_VALUE = 10;
      /**
       * <code>TRACE = 5;</code>
       */
      public static final int TRACE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Level valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Level forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 50: return CRITICAL;
          case 40: return ERROR;
          case 30: return WARNING;
          case 20: return INFO;
          case 10: return DEBUG;
          case 5: return TRACE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Level>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Level> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Level>() {
              public Level findValueByNumber(int number) {
                return Level.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.LogRecord.getDescriptor().getEnumTypes().get(0);
      }

      private static final Level[] VALUES = values();

      public static Level valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Level(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:LogRecord.Level)
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     * Seconds since 1970 - or 0 for unknown/unset
     * </pre>
     *
     * <code>fixed32 time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The enum numeric value on the wire for level.
     */
    @java.lang.Override public int getLevelValue() {
      return level_;
    }
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The level.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel() {
      @SuppressWarnings("deprecation")
      com.geeksville.mesh.MeshProtos.LogRecord.Level result = com.geeksville.mesh.MeshProtos.LogRecord.Level.valueOf(level_);
      return result == null ? com.geeksville.mesh.MeshProtos.LogRecord.Level.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      if (time_ != 0) {
        output.writeFixed32(2, time_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
      }
      if (level_ != com.geeksville.mesh.MeshProtos.LogRecord.Level.UNSET.getNumber()) {
        output.writeEnum(4, level_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, time_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
      }
      if (level_ != com.geeksville.mesh.MeshProtos.LogRecord.Level.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, level_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.LogRecord)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.LogRecord other = (com.geeksville.mesh.MeshProtos.LogRecord) obj;

      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (getTime()
          != other.getTime()) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (level_ != other.level_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + level_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.LogRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Debug output from the device.
     * To minimize the size of records inside the device code, if a time/source/level is not set 
     * on the message it is assumed to be a continuation of the previously sent message.
     * This allows the device code to use fixed maxlen 64 byte strings for messages,
     * and then extend as needed by emitting multiple records.
     * </pre>
     *
     * Protobuf type {@code LogRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogRecord)
        com.geeksville.mesh.MeshProtos.LogRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.LogRecord.class, com.geeksville.mesh.MeshProtos.LogRecord.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.LogRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        message_ = "";

        time_ = 0;

        source_ = "";

        level_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord build() {
        com.geeksville.mesh.MeshProtos.LogRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord buildPartial() {
        com.geeksville.mesh.MeshProtos.LogRecord result = new com.geeksville.mesh.MeshProtos.LogRecord(this);
        result.message_ = message_;
        result.time_ = time_;
        result.source_ = source_;
        result.level_ = level_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.LogRecord) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.LogRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.LogRecord other) {
        if (other == com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (other.level_ != 0) {
          setLevelValue(other.getLevelValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.LogRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.LogRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return The source.
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return The bytes for source.
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private int level_ = 0;
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return The enum numeric value on the wire for level.
       */
      @java.lang.Override public int getLevelValue() {
        return level_;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @param value The enum numeric value on the wire for level to set.
       * @return This builder for chaining.
       */
      public Builder setLevelValue(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return The level.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel() {
        @SuppressWarnings("deprecation")
        com.geeksville.mesh.MeshProtos.LogRecord.Level result = com.geeksville.mesh.MeshProtos.LogRecord.Level.valueOf(level_);
        return result == null ? com.geeksville.mesh.MeshProtos.LogRecord.Level.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(com.geeksville.mesh.MeshProtos.LogRecord.Level value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        level_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LogRecord)
    }

    // @@protoc_insertion_point(class_scope:LogRecord)
    private static final com.geeksville.mesh.MeshProtos.LogRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.LogRecord();
    }

    public static com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogRecord>
        PARSER = new com.google.protobuf.AbstractParser<LogRecord>() {
      @java.lang.Override
      public LogRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FromRadioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FromRadio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The packet num, used to allow the phone to request missing read packets from the FIFO,
     * see our bluetooth docs
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    int getNum();

    /**
     * <code>.MeshPacket packet = 11;</code>
     * @return Whether the packet field is set.
     */
    boolean hasPacket();
    /**
     * <code>.MeshPacket packet = 11;</code>
     * @return The packet.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket getPacket();
    /**
     * <code>.MeshPacket packet = 11;</code>
     */
    com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder();

    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return Whether the myInfo field is set.
     */
    boolean hasMyInfo();
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return The myInfo.
     */
    com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo();
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     */
    com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder();

    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return Whether the nodeInfo field is set.
     */
    boolean hasNodeInfo();
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return The nodeInfo.
     */
    com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo();
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     */
    com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder();

    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     * @return Whether the logRecord field is set.
     */
    boolean hasLogRecord();
    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     * @return The logRecord.
     */
    com.geeksville.mesh.MeshProtos.LogRecord getLogRecord();
    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     */
    com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder();

    /**
     * <pre>
     * sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 8;</code>
     * @return Whether the configCompleteId field is set.
     */
    boolean hasConfigCompleteId();
    /**
     * <pre>
     * sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 8;</code>
     * @return The configCompleteId.
     */
    int getConfigCompleteId();

    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
     * </pre>
     *
     * <code>bool rebooted = 9;</code>
     * @return Whether the rebooted field is set.
     */
    boolean hasRebooted();
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
     * </pre>
     *
     * <code>bool rebooted = 9;</code>
     * @return The rebooted.
     */
    boolean getRebooted();

    public com.geeksville.mesh.MeshProtos.FromRadio.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * Packets from the radio to the phone will appear on the fromRadio characteristic.
   * It will support READ and NOTIFY. When a new packet arrives the device will BLE notify?
   * It will sit in that descriptor until consumed by the phone,
   * at which point the next item in the FIFO will be populated.
   * </pre>
   *
   * Protobuf type {@code FromRadio}
   */
  public static final class FromRadio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FromRadio)
      FromRadioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FromRadio.newBuilder() to construct.
    private FromRadio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FromRadio() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FromRadio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FromRadio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              num_ = input.readUInt32();
              break;
            }
            case 26: {
              com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder subBuilder = null;
              if (payloadVariantCase_ == 3) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.MyNodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 3;
              break;
            }
            case 34: {
              com.geeksville.mesh.MeshProtos.NodeInfo.Builder subBuilder = null;
              if (payloadVariantCase_ == 4) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.NodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 4;
              break;
            }
            case 58: {
              com.geeksville.mesh.MeshProtos.LogRecord.Builder subBuilder = null;
              if (payloadVariantCase_ == 7) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.LogRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 7;
              break;
            }
            case 64: {
              payloadVariantCase_ = 8;
              payloadVariant_ = input.readUInt32();
              break;
            }
            case 72: {
              payloadVariantCase_ = 9;
              payloadVariant_ = input.readBool();
              break;
            }
            case 90: {
              com.geeksville.mesh.MeshProtos.MeshPacket.Builder subBuilder = null;
              if (payloadVariantCase_ == 11) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.MeshPacket.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 11;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.FromRadio.class, com.geeksville.mesh.MeshProtos.FromRadio.Builder.class);
    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PACKET(11),
      MY_INFO(3),
      NODE_INFO(4),
      LOG_RECORD(7),
      CONFIG_COMPLETE_ID(8),
      REBOOTED(9),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 11: return PACKET;
          case 3: return MY_INFO;
          case 4: return NODE_INFO;
          case 7: return LOG_RECORD;
          case 8: return CONFIG_COMPLETE_ID;
          case 9: return REBOOTED;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int NUM_FIELD_NUMBER = 1;
    private int num_;
    /**
     * <pre>
     * The packet num, used to allow the phone to request missing read packets from the FIFO,
     * see our bluetooth docs
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    @java.lang.Override
    public int getNum() {
      return num_;
    }

    public static final int PACKET_FIELD_NUMBER = 11;
    /**
     * <code>.MeshPacket packet = 11;</code>
     * @return Whether the packet field is set.
     */
    @java.lang.Override
    public boolean hasPacket() {
      return payloadVariantCase_ == 11;
    }
    /**
     * <code>.MeshPacket packet = 11;</code>
     * @return The packet.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
      if (payloadVariantCase_ == 11) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }
    /**
     * <code>.MeshPacket packet = 11;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
      if (payloadVariantCase_ == 11) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }

    public static final int MY_INFO_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return Whether the myInfo field is set.
     */
    @java.lang.Override
    public boolean hasMyInfo() {
      return payloadVariantCase_ == 3;
    }
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return The myInfo.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
    }
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
    }

    public static final int NODE_INFO_FIELD_NUMBER = 4;
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return Whether the nodeInfo field is set.
     */
    @java.lang.Override
    public boolean hasNodeInfo() {
      return payloadVariantCase_ == 4;
    }
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return The nodeInfo.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
    }
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB   
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
    }

    public static final int LOG_RECORD_FIELD_NUMBER = 7;
    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     * @return Whether the logRecord field is set.
     */
    @java.lang.Override
    public boolean hasLogRecord() {
      return payloadVariantCase_ == 7;
    }
    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     * @return The logRecord.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecord getLogRecord() {
      if (payloadVariantCase_ == 7) {
         return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
    }
    /**
     * <pre>
     * set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 7;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder() {
      if (payloadVariantCase_ == 7) {
         return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
    }

    public static final int CONFIG_COMPLETE_ID_FIELD_NUMBER = 8;
    /**
     * <pre>
     * sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 8;</code>
     * @return Whether the configCompleteId field is set.
     */
    @java.lang.Override
    public boolean hasConfigCompleteId() {
      return payloadVariantCase_ == 8;
    }
    /**
     * <pre>
     * sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 8;</code>
     * @return The configCompleteId.
     */
    @java.lang.Override
    public int getConfigCompleteId() {
      if (payloadVariantCase_ == 8) {
        return (java.lang.Integer) payloadVariant_;
      }
      return 0;
    }

    public static final int REBOOTED_FIELD_NUMBER = 9;
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
     * </pre>
     *
     * <code>bool rebooted = 9;</code>
     * @return Whether the rebooted field is set.
     */
    @java.lang.Override
    public boolean hasRebooted() {
      return payloadVariantCase_ == 9;
    }
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
     * </pre>
     *
     * <code>bool rebooted = 9;</code>
     * @return The rebooted.
     */
    @java.lang.Override
    public boolean getRebooted() {
      if (payloadVariantCase_ == 9) {
        return (java.lang.Boolean) payloadVariant_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (num_ != 0) {
        output.writeUInt32(1, num_);
      }
      if (payloadVariantCase_ == 3) {
        output.writeMessage(3, (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 4) {
        output.writeMessage(4, (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 7) {
        output.writeMessage(7, (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_);
      }
      if (payloadVariantCase_ == 8) {
        output.writeUInt32(
            8, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 9) {
        output.writeBool(
            9, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      if (payloadVariantCase_ == 11) {
        output.writeMessage(11, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (num_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, num_);
      }
      if (payloadVariantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_);
      }
      if (payloadVariantCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              8, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              9, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      if (payloadVariantCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.FromRadio)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.FromRadio other = (com.geeksville.mesh.MeshProtos.FromRadio) obj;

      if (getNum()
          != other.getNum()) return false;
      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 11:
          if (!getPacket()
              .equals(other.getPacket())) return false;
          break;
        case 3:
          if (!getMyInfo()
              .equals(other.getMyInfo())) return false;
          break;
        case 4:
          if (!getNodeInfo()
              .equals(other.getNodeInfo())) return false;
          break;
        case 7:
          if (!getLogRecord()
              .equals(other.getLogRecord())) return false;
          break;
        case 8:
          if (getConfigCompleteId()
              != other.getConfigCompleteId()) return false;
          break;
        case 9:
          if (getRebooted()
              != other.getRebooted()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNum();
      switch (payloadVariantCase_) {
        case 11:
          hash = (37 * hash) + PACKET_FIELD_NUMBER;
          hash = (53 * hash) + getPacket().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MY_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getMyInfo().hashCode();
          break;
        case 4:
          hash = (37 * hash) + NODE_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getNodeInfo().hashCode();
          break;
        case 7:
          hash = (37 * hash) + LOG_RECORD_FIELD_NUMBER;
          hash = (53 * hash) + getLogRecord().hashCode();
          break;
        case 8:
          hash = (37 * hash) + CONFIG_COMPLETE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getConfigCompleteId();
          break;
        case 9:
          hash = (37 * hash) + REBOOTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getRebooted());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.FromRadio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packets from the radio to the phone will appear on the fromRadio characteristic.
     * It will support READ and NOTIFY. When a new packet arrives the device will BLE notify?
     * It will sit in that descriptor until consumed by the phone,
     * at which point the next item in the FIFO will be populated.
     * </pre>
     *
     * Protobuf type {@code FromRadio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FromRadio)
        com.geeksville.mesh.MeshProtos.FromRadioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.FromRadio.class, com.geeksville.mesh.MeshProtos.FromRadio.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.FromRadio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        num_ = 0;

        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.FromRadio.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio build() {
        com.geeksville.mesh.MeshProtos.FromRadio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio buildPartial() {
        com.geeksville.mesh.MeshProtos.FromRadio result = new com.geeksville.mesh.MeshProtos.FromRadio(this);
        result.num_ = num_;
        if (payloadVariantCase_ == 11) {
          if (packetBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = packetBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 3) {
          if (myInfoBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = myInfoBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 4) {
          if (nodeInfoBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = nodeInfoBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 7) {
          if (logRecordBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = logRecordBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 8) {
          result.payloadVariant_ = payloadVariant_;
        }
        if (payloadVariantCase_ == 9) {
          result.payloadVariant_ = payloadVariant_;
        }
        result.payloadVariantCase_ = payloadVariantCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.FromRadio) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.FromRadio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.FromRadio other) {
        if (other == com.geeksville.mesh.MeshProtos.FromRadio.getDefaultInstance()) return this;
        if (other.getNum() != 0) {
          setNum(other.getNum());
        }
        switch (other.getPayloadVariantCase()) {
          case PACKET: {
            mergePacket(other.getPacket());
            break;
          }
          case MY_INFO: {
            mergeMyInfo(other.getMyInfo());
            break;
          }
          case NODE_INFO: {
            mergeNodeInfo(other.getNodeInfo());
            break;
          }
          case LOG_RECORD: {
            mergeLogRecord(other.getLogRecord());
            break;
          }
          case CONFIG_COMPLETE_ID: {
            setConfigCompleteId(other.getConfigCompleteId());
            break;
          }
          case REBOOTED: {
            setRebooted(other.getRebooted());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.FromRadio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.FromRadio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }


      private int num_ ;
      /**
       * <pre>
       * The packet num, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }
      /**
       * <pre>
       * The packet num, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @param value The num to set.
       * @return This builder for chaining.
       */
      public Builder setNum(int value) {
        
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet num, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNum() {
        
        num_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> packetBuilder_;
      /**
       * <code>.MeshPacket packet = 11;</code>
       * @return Whether the packet field is set.
       */
      @java.lang.Override
      public boolean hasPacket() {
        return payloadVariantCase_ == 11;
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       * @return The packet.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 11) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 11) {
            return packetBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      public Builder setPacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 11;
        return this;
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      public Builder setPacket(
          com.geeksville.mesh.MeshProtos.MeshPacket.Builder builderForValue) {
        if (packetBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          packetBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 11;
        return this;
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      public Builder mergePacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 11 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 11) {
            packetBuilder_.mergeFrom(value);
          }
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 11;
        return this;
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      public Builder clearPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 11) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 11) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          packetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      public com.geeksville.mesh.MeshProtos.MeshPacket.Builder getPacketBuilder() {
        return getPacketFieldBuilder().getBuilder();
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
        if ((payloadVariantCase_ == 11) && (packetBuilder_ != null)) {
          return packetBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 11) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <code>.MeshPacket packet = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> 
          getPacketFieldBuilder() {
        if (packetBuilder_ == null) {
          if (!(payloadVariantCase_ == 11)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
          }
          packetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 11;
        onChanged();;
        return packetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder> myInfoBuilder_;
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       * @return Whether the myInfo field is set.
       */
      @java.lang.Override
      public boolean hasMyInfo() {
        return payloadVariantCase_ == 3;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       * @return The myInfo.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo() {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 3) {
            return myInfoBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(com.geeksville.mesh.MeshProtos.MyNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          myInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(
          com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder builderForValue) {
        if (myInfoBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          myInfoBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder mergeMyInfo(com.geeksville.mesh.MeshProtos.MyNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MyNodeInfo.newBuilder((com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 3) {
            myInfoBuilder_.mergeFrom(value);
          }
          myInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder clearMyInfo() {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          myInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder getMyInfoBuilder() {
        return getMyInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder() {
        if ((payloadVariantCase_ == 3) && (myInfoBuilder_ != null)) {
          return myInfoBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder> 
          getMyInfoFieldBuilder() {
        if (myInfoBuilder_ == null) {
          if (!(payloadVariantCase_ == 3)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
          }
          myInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 3;
        onChanged();;
        return myInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder> nodeInfoBuilder_;
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       * @return Whether the nodeInfo field is set.
       */
      @java.lang.Override
      public boolean hasNodeInfo() {
        return payloadVariantCase_ == 4;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       * @return The nodeInfo.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo() {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 4) {
            return nodeInfoBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder setNodeInfo(com.geeksville.mesh.MeshProtos.NodeInfo value) {
        if (nodeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          nodeInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder setNodeInfo(
          com.geeksville.mesh.MeshProtos.NodeInfo.Builder builderForValue) {
        if (nodeInfoBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          nodeInfoBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder mergeNodeInfo(com.geeksville.mesh.MeshProtos.NodeInfo value) {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.NodeInfo.newBuilder((com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 4) {
            nodeInfoBuilder_.mergeFrom(value);
          }
          nodeInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder clearNodeInfo() {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          nodeInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public com.geeksville.mesh.MeshProtos.NodeInfo.Builder getNodeInfoBuilder() {
        return getNodeInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder() {
        if ((payloadVariantCase_ == 4) && (nodeInfoBuilder_ != null)) {
          return nodeInfoBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB   
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder> 
          getNodeInfoFieldBuilder() {
        if (nodeInfoBuilder_ == null) {
          if (!(payloadVariantCase_ == 4)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
          }
          nodeInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 4;
        onChanged();;
        return nodeInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder> logRecordBuilder_;
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       * @return Whether the logRecord field is set.
       */
      @java.lang.Override
      public boolean hasLogRecord() {
        return payloadVariantCase_ == 7;
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       * @return The logRecord.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord getLogRecord() {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 7) {
            return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 7) {
            return logRecordBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      public Builder setLogRecord(com.geeksville.mesh.MeshProtos.LogRecord value) {
        if (logRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          logRecordBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      public Builder setLogRecord(
          com.geeksville.mesh.MeshProtos.LogRecord.Builder builderForValue) {
        if (logRecordBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          logRecordBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      public Builder mergeLogRecord(com.geeksville.mesh.MeshProtos.LogRecord value) {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 7 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.LogRecord.newBuilder((com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 7) {
            logRecordBuilder_.mergeFrom(value);
          }
          logRecordBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      public Builder clearLogRecord() {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 7) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 7) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          logRecordBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      public com.geeksville.mesh.MeshProtos.LogRecord.Builder getLogRecordBuilder() {
        return getLogRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder() {
        if ((payloadVariantCase_ == 7) && (logRecordBuilder_ != null)) {
          return logRecordBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 7) {
            return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder> 
          getLogRecordFieldBuilder() {
        if (logRecordBuilder_ == null) {
          if (!(payloadVariantCase_ == 7)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
          }
          logRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 7;
        onChanged();;
        return logRecordBuilder_;
      }

      /**
       * <pre>
       * sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 8;</code>
       * @return Whether the configCompleteId field is set.
       */
      public boolean hasConfigCompleteId() {
        return payloadVariantCase_ == 8;
      }
      /**
       * <pre>
       * sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 8;</code>
       * @return The configCompleteId.
       */
      public int getConfigCompleteId() {
        if (payloadVariantCase_ == 8) {
          return (java.lang.Integer) payloadVariant_;
        }
        return 0;
      }
      /**
       * <pre>
       * sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 8;</code>
       * @param value The configCompleteId to set.
       * @return This builder for chaining.
       */
      public Builder setConfigCompleteId(int value) {
        payloadVariantCase_ = 8;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfigCompleteId() {
        if (payloadVariantCase_ == 8) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
       * </pre>
       *
       * <code>bool rebooted = 9;</code>
       * @return Whether the rebooted field is set.
       */
      public boolean hasRebooted() {
        return payloadVariantCase_ == 9;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
       * </pre>
       *
       * <code>bool rebooted = 9;</code>
       * @return The rebooted.
       */
      public boolean getRebooted() {
        if (payloadVariantCase_ == 9) {
          return (java.lang.Boolean) payloadVariant_;
        }
        return false;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
       * </pre>
       *
       * <code>bool rebooted = 9;</code>
       * @param value The rebooted to set.
       * @return This builder for chaining.
       */
      public Builder setRebooted(boolean value) {
        payloadVariantCase_ = 9;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps. 
       * </pre>
       *
       * <code>bool rebooted = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRebooted() {
        if (payloadVariantCase_ == 9) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FromRadio)
    }

    // @@protoc_insertion_point(class_scope:FromRadio)
    private static final com.geeksville.mesh.MeshProtos.FromRadio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.FromRadio();
    }

    public static com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FromRadio>
        PARSER = new com.google.protobuf.AbstractParser<FromRadio>() {
      @java.lang.Override
      public FromRadio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FromRadio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FromRadio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FromRadio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ToRadioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ToRadio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return Whether the packet field is set.
     */
    boolean hasPacket();
    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return The packet.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket getPacket();
    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder();

    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     * @return Whether the peerInfo field is set.
     */
    boolean hasPeerInfo();
    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     * @return The peerInfo.
     */
    com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getPeerInfo();
    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     */
    com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder getPeerInfoOrBuilder();

    /**
     * <pre>
     * phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 100;</code>
     * @return Whether the wantConfigId field is set.
     */
    boolean hasWantConfigId();
    /**
     * <pre>
     * phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 100;</code>
     * @return The wantConfigId.
     */
    int getWantConfigId();

    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 104;</code>
     * @return Whether the disconnect field is set.
     */
    boolean hasDisconnect();
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 104;</code>
     * @return The disconnect.
     */
    boolean getDisconnect();

    public com.geeksville.mesh.MeshProtos.ToRadio.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * packets/commands to the radio will be written (reliably) to the toRadio characteristic.
   * Once the write completes the phone can assume it is handled.
   * </pre>
   *
   * Protobuf type {@code ToRadio}
   */
  public static final class ToRadio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ToRadio)
      ToRadioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ToRadio.newBuilder() to construct.
    private ToRadio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ToRadio() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ToRadio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ToRadio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              com.geeksville.mesh.MeshProtos.MeshPacket.Builder subBuilder = null;
              if (payloadVariantCase_ == 2) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.MeshPacket.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 2;
              break;
            }
            case 26: {
              com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder subBuilder = null;
              if (payloadVariantCase_ == 3) {
                subBuilder = ((com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_).toBuilder();
              }
              payloadVariant_ =
                  input.readMessage(com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_);
                payloadVariant_ = subBuilder.buildPartial();
              }
              payloadVariantCase_ = 3;
              break;
            }
            case 800: {
              payloadVariantCase_ = 100;
              payloadVariant_ = input.readUInt32();
              break;
            }
            case 832: {
              payloadVariantCase_ = 104;
              payloadVariant_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.ToRadio.class, com.geeksville.mesh.MeshProtos.ToRadio.Builder.class);
    }

    public interface PeerInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ToRadio.PeerInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The numeric version code for the client application, which in some cases are used to control device behavior (so the device can 
       * make assumptions about who is using the API.
       * </pre>
       *
       * <code>uint32 app_version = 1;</code>
       * @return The appVersion.
       */
      int getAppVersion();

      /**
       * <pre>
       * True if the peer device can gateway MQTT packets.
       * If true, the device will not try to send packets to the internet directly,
       * instead it will pass the packets to the peer for dispatching.
       * This feature is optional, if set to false the device will assume the client can not gateway to MQTT.
       * </pre>
       *
       * <code>bool mqtt_gateway = 2;</code>
       * @return The mqttGateway.
       */
      boolean getMqttGateway();
    }
    /**
     * <pre>
     * Instead of sending want_config_id as a uint32, newer clients send this structure with information about the client.
     * </pre>
     *
     * Protobuf type {@code ToRadio.PeerInfo}
     */
    public static final class PeerInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ToRadio.PeerInfo)
        PeerInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PeerInfo.newBuilder() to construct.
      private PeerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PeerInfo() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PeerInfo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PeerInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                appVersion_ = input.readUInt32();
                break;
              }
              case 16: {

                mqttGateway_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_PeerInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_PeerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.class, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder.class);
      }

      public static final int APP_VERSION_FIELD_NUMBER = 1;
      private int appVersion_;
      /**
       * <pre>
       * The numeric version code for the client application, which in some cases are used to control device behavior (so the device can 
       * make assumptions about who is using the API.
       * </pre>
       *
       * <code>uint32 app_version = 1;</code>
       * @return The appVersion.
       */
      @java.lang.Override
      public int getAppVersion() {
        return appVersion_;
      }

      public static final int MQTT_GATEWAY_FIELD_NUMBER = 2;
      private boolean mqttGateway_;
      /**
       * <pre>
       * True if the peer device can gateway MQTT packets.
       * If true, the device will not try to send packets to the internet directly,
       * instead it will pass the packets to the peer for dispatching.
       * This feature is optional, if set to false the device will assume the client can not gateway to MQTT.
       * </pre>
       *
       * <code>bool mqtt_gateway = 2;</code>
       * @return The mqttGateway.
       */
      @java.lang.Override
      public boolean getMqttGateway() {
        return mqttGateway_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (appVersion_ != 0) {
          output.writeUInt32(1, appVersion_);
        }
        if (mqttGateway_ != false) {
          output.writeBool(2, mqttGateway_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (appVersion_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, appVersion_);
        }
        if (mqttGateway_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, mqttGateway_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo)) {
          return super.equals(obj);
        }
        com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo other = (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) obj;

        if (getAppVersion()
            != other.getAppVersion()) return false;
        if (getMqttGateway()
            != other.getMqttGateway()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + APP_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getAppVersion();
        hash = (37 * hash) + MQTT_GATEWAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMqttGateway());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Instead of sending want_config_id as a uint32, newer clients send this structure with information about the client.
       * </pre>
       *
       * Protobuf type {@code ToRadio.PeerInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ToRadio.PeerInfo)
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_PeerInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_PeerInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.class, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder.class);
        }

        // Construct using com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          appVersion_ = 0;

          mqttGateway_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_PeerInfo_descriptor;
        }

        @java.lang.Override
        public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getDefaultInstanceForType() {
          return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
        }

        @java.lang.Override
        public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo build() {
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo buildPartial() {
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo result = new com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo(this);
          result.appVersion_ = appVersion_;
          result.mqttGateway_ = mqttGateway_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) {
            return mergeFrom((com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo other) {
          if (other == com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance()) return this;
          if (other.getAppVersion() != 0) {
            setAppVersion(other.getAppVersion());
          }
          if (other.getMqttGateway() != false) {
            setMqttGateway(other.getMqttGateway());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int appVersion_ ;
        /**
         * <pre>
         * The numeric version code for the client application, which in some cases are used to control device behavior (so the device can 
         * make assumptions about who is using the API.
         * </pre>
         *
         * <code>uint32 app_version = 1;</code>
         * @return The appVersion.
         */
        @java.lang.Override
        public int getAppVersion() {
          return appVersion_;
        }
        /**
         * <pre>
         * The numeric version code for the client application, which in some cases are used to control device behavior (so the device can 
         * make assumptions about who is using the API.
         * </pre>
         *
         * <code>uint32 app_version = 1;</code>
         * @param value The appVersion to set.
         * @return This builder for chaining.
         */
        public Builder setAppVersion(int value) {
          
          appVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The numeric version code for the client application, which in some cases are used to control device behavior (so the device can 
         * make assumptions about who is using the API.
         * </pre>
         *
         * <code>uint32 app_version = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAppVersion() {
          
          appVersion_ = 0;
          onChanged();
          return this;
        }

        private boolean mqttGateway_ ;
        /**
         * <pre>
         * True if the peer device can gateway MQTT packets.
         * If true, the device will not try to send packets to the internet directly,
         * instead it will pass the packets to the peer for dispatching.
         * This feature is optional, if set to false the device will assume the client can not gateway to MQTT.
         * </pre>
         *
         * <code>bool mqtt_gateway = 2;</code>
         * @return The mqttGateway.
         */
        @java.lang.Override
        public boolean getMqttGateway() {
          return mqttGateway_;
        }
        /**
         * <pre>
         * True if the peer device can gateway MQTT packets.
         * If true, the device will not try to send packets to the internet directly,
         * instead it will pass the packets to the peer for dispatching.
         * This feature is optional, if set to false the device will assume the client can not gateway to MQTT.
         * </pre>
         *
         * <code>bool mqtt_gateway = 2;</code>
         * @param value The mqttGateway to set.
         * @return This builder for chaining.
         */
        public Builder setMqttGateway(boolean value) {
          
          mqttGateway_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * True if the peer device can gateway MQTT packets.
         * If true, the device will not try to send packets to the internet directly,
         * instead it will pass the packets to the peer for dispatching.
         * This feature is optional, if set to false the device will assume the client can not gateway to MQTT.
         * </pre>
         *
         * <code>bool mqtt_gateway = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMqttGateway() {
          
          mqttGateway_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ToRadio.PeerInfo)
      }

      // @@protoc_insertion_point(class_scope:ToRadio.PeerInfo)
      private static final com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo();
      }

      public static com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PeerInfo>
          PARSER = new com.google.protobuf.AbstractParser<PeerInfo>() {
        @java.lang.Override
        public PeerInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PeerInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PeerInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PeerInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PACKET(2),
      PEER_INFO(3),
      WANT_CONFIG_ID(100),
      DISCONNECT(104),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 2: return PACKET;
          case 3: return PEER_INFO;
          case 100: return WANT_CONFIG_ID;
          case 104: return DISCONNECT;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int PACKET_FIELD_NUMBER = 2;
    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return Whether the packet field is set.
     */
    @java.lang.Override
    public boolean hasPacket() {
      return payloadVariantCase_ == 2;
    }
    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return The packet.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
      if (payloadVariantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }
    /**
     * <pre>
     * send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
      if (payloadVariantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }

    public static final int PEER_INFO_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     * @return Whether the peerInfo field is set.
     */
    @java.lang.Override
    public boolean hasPeerInfo() {
      return payloadVariantCase_ == 3;
    }
    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     * @return The peerInfo.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getPeerInfo() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
    }
    /**
     * <pre>
     * Information about the peer, sent after the phone sneds want_config_id.
     * Old clients do not send this, which is fine.
     * </pre>
     *
     * <code>.ToRadio.PeerInfo peer_info = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder getPeerInfoOrBuilder() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
    }

    public static final int WANT_CONFIG_ID_FIELD_NUMBER = 100;
    /**
     * <pre>
     * phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 100;</code>
     * @return Whether the wantConfigId field is set.
     */
    @java.lang.Override
    public boolean hasWantConfigId() {
      return payloadVariantCase_ == 100;
    }
    /**
     * <pre>
     * phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 100;</code>
     * @return The wantConfigId.
     */
    @java.lang.Override
    public int getWantConfigId() {
      if (payloadVariantCase_ == 100) {
        return (java.lang.Integer) payloadVariant_;
      }
      return 0;
    }

    public static final int DISCONNECT_FIELD_NUMBER = 104;
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 104;</code>
     * @return Whether the disconnect field is set.
     */
    @java.lang.Override
    public boolean hasDisconnect() {
      return payloadVariantCase_ == 104;
    }
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 104;</code>
     * @return The disconnect.
     */
    @java.lang.Override
    public boolean getDisconnect() {
      if (payloadVariantCase_ == 104) {
        return (java.lang.Boolean) payloadVariant_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payloadVariantCase_ == 2) {
        output.writeMessage(2, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        output.writeMessage(3, (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 100) {
        output.writeUInt32(
            100, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 104) {
        output.writeBool(
            104, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (payloadVariantCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 100) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              100, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 104) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              104, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.ToRadio)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.ToRadio other = (com.geeksville.mesh.MeshProtos.ToRadio) obj;

      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 2:
          if (!getPacket()
              .equals(other.getPacket())) return false;
          break;
        case 3:
          if (!getPeerInfo()
              .equals(other.getPeerInfo())) return false;
          break;
        case 100:
          if (getWantConfigId()
              != other.getWantConfigId()) return false;
          break;
        case 104:
          if (getDisconnect()
              != other.getDisconnect()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (payloadVariantCase_) {
        case 2:
          hash = (37 * hash) + PACKET_FIELD_NUMBER;
          hash = (53 * hash) + getPacket().hashCode();
          break;
        case 3:
          hash = (37 * hash) + PEER_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getPeerInfo().hashCode();
          break;
        case 100:
          hash = (37 * hash) + WANT_CONFIG_ID_FIELD_NUMBER;
          hash = (53 * hash) + getWantConfigId();
          break;
        case 104:
          hash = (37 * hash) + DISCONNECT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getDisconnect());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.ToRadio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packets/commands to the radio will be written (reliably) to the toRadio characteristic.
     * Once the write completes the phone can assume it is handled.
     * </pre>
     *
     * Protobuf type {@code ToRadio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ToRadio)
        com.geeksville.mesh.MeshProtos.ToRadioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.ToRadio.class, com.geeksville.mesh.MeshProtos.ToRadio.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.ToRadio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.ToRadio.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio build() {
        com.geeksville.mesh.MeshProtos.ToRadio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio buildPartial() {
        com.geeksville.mesh.MeshProtos.ToRadio result = new com.geeksville.mesh.MeshProtos.ToRadio(this);
        if (payloadVariantCase_ == 2) {
          if (packetBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = packetBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 3) {
          if (peerInfoBuilder_ == null) {
            result.payloadVariant_ = payloadVariant_;
          } else {
            result.payloadVariant_ = peerInfoBuilder_.build();
          }
        }
        if (payloadVariantCase_ == 100) {
          result.payloadVariant_ = payloadVariant_;
        }
        if (payloadVariantCase_ == 104) {
          result.payloadVariant_ = payloadVariant_;
        }
        result.payloadVariantCase_ = payloadVariantCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.ToRadio) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.ToRadio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.ToRadio other) {
        if (other == com.geeksville.mesh.MeshProtos.ToRadio.getDefaultInstance()) return this;
        switch (other.getPayloadVariantCase()) {
          case PACKET: {
            mergePacket(other.getPacket());
            break;
          }
          case PEER_INFO: {
            mergePeerInfo(other.getPeerInfo());
            break;
          }
          case WANT_CONFIG_ID: {
            setWantConfigId(other.getWantConfigId());
            break;
          }
          case DISCONNECT: {
            setDisconnect(other.getDisconnect());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.geeksville.mesh.MeshProtos.ToRadio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.geeksville.mesh.MeshProtos.ToRadio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> packetBuilder_;
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       * @return Whether the packet field is set.
       */
      @java.lang.Override
      public boolean hasPacket() {
        return payloadVariantCase_ == 2;
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       * @return The packet.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 2) {
            return packetBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder setPacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder setPacket(
          com.geeksville.mesh.MeshProtos.MeshPacket.Builder builderForValue) {
        if (packetBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          packetBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder mergePacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 2) {
            packetBuilder_.mergeFrom(value);
          }
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder clearPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 2) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          packetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.MeshPacket.Builder getPacketBuilder() {
        return getPacketFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
        if ((payloadVariantCase_ == 2) && (packetBuilder_ != null)) {
          return packetBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> 
          getPacketFieldBuilder() {
        if (packetBuilder_ == null) {
          if (!(payloadVariantCase_ == 2)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
          }
          packetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 2;
        onChanged();;
        return packetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder> peerInfoBuilder_;
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       * @return Whether the peerInfo field is set.
       */
      @java.lang.Override
      public boolean hasPeerInfo() {
        return payloadVariantCase_ == 3;
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       * @return The peerInfo.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo getPeerInfo() {
        if (peerInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 3) {
            return peerInfoBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      public Builder setPeerInfo(com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo value) {
        if (peerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          peerInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      public Builder setPeerInfo(
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder builderForValue) {
        if (peerInfoBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          peerInfoBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      public Builder mergePeerInfo(com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo value) {
        if (peerInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.newBuilder((com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 3) {
            peerInfoBuilder_.mergeFrom(value);
          }
          peerInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      public Builder clearPeerInfo() {
        if (peerInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          peerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder getPeerInfoBuilder() {
        return getPeerInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder getPeerInfoOrBuilder() {
        if ((payloadVariantCase_ == 3) && (peerInfoBuilder_ != null)) {
          return peerInfoBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the peer, sent after the phone sneds want_config_id.
       * Old clients do not send this, which is fine.
       * </pre>
       *
       * <code>.ToRadio.PeerInfo peer_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder> 
          getPeerInfoFieldBuilder() {
        if (peerInfoBuilder_ == null) {
          if (!(payloadVariantCase_ == 3)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.getDefaultInstance();
          }
          peerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo.Builder, com.geeksville.mesh.MeshProtos.ToRadio.PeerInfoOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.ToRadio.PeerInfo) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 3;
        onChanged();;
        return peerInfoBuilder_;
      }

      /**
       * <pre>
       * phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 100;</code>
       * @return Whether the wantConfigId field is set.
       */
      public boolean hasWantConfigId() {
        return payloadVariantCase_ == 100;
      }
      /**
       * <pre>
       * phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 100;</code>
       * @return The wantConfigId.
       */
      public int getWantConfigId() {
        if (payloadVariantCase_ == 100) {
          return (java.lang.Integer) payloadVariant_;
        }
        return 0;
      }
      /**
       * <pre>
       * phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 100;</code>
       * @param value The wantConfigId to set.
       * @return This builder for chaining.
       */
      public Builder setWantConfigId(int value) {
        payloadVariantCase_ = 100;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 100;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantConfigId() {
        if (payloadVariantCase_ == 100) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 104;</code>
       * @return Whether the disconnect field is set.
       */
      public boolean hasDisconnect() {
        return payloadVariantCase_ == 104;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 104;</code>
       * @return The disconnect.
       */
      public boolean getDisconnect() {
        if (payloadVariantCase_ == 104) {
          return (java.lang.Boolean) payloadVariant_;
        }
        return false;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 104;</code>
       * @param value The disconnect to set.
       * @return This builder for chaining.
       */
      public Builder setDisconnect(boolean value) {
        payloadVariantCase_ = 104;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 104;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisconnect() {
        if (payloadVariantCase_ == 104) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ToRadio)
    }

    // @@protoc_insertion_point(class_scope:ToRadio)
    private static final com.geeksville.mesh.MeshProtos.ToRadio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.ToRadio();
    }

    public static com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ToRadio>
        PARSER = new com.google.protobuf.AbstractParser<ToRadio>() {
      @java.lang.Override
      public ToRadio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ToRadio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ToRadio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ToRadio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Position_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RouteDiscovery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RouteDiscovery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Routing_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Routing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MeshPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MeshPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MyNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MyNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FromRadio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FromRadio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ToRadio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ToRadio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ToRadio_PeerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ToRadio_PeerInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nmesh.proto\032\016portnums.proto\"v\n\010Position" +
      "\022\022\n\nlatitude_i\030\001 \001(\017\022\023\n\013longitude_i\030\002 \001(" +
      "\017\022\020\n\010altitude\030\003 \001(\005\022\025\n\rbattery_level\030\004 \001" +
      "(\005\022\014\n\004time\030\t \001(\007J\004\010\007\020\010J\004\010\010\020\t\"\201\001\n\004User\022\n\n" +
      "\002id\030\001 \001(\t\022\021\n\tlong_name\030\002 \001(\t\022\022\n\nshort_na" +
      "me\030\003 \001(\t\022\017\n\007macaddr\030\004 \001(\014\022 \n\010hw_model\030\006 " +
      "\001(\0162\016.HardwareModel\022\023\n\013is_licensed\030\007 \001(\010" +
      "\"\037\n\016RouteDiscovery\022\r\n\005route\030\002 \003(\007\"\305\002\n\007Ro" +
      "uting\022(\n\rroute_request\030\001 \001(\0132\017.RouteDisc" +
      "overyH\000\022&\n\013route_reply\030\002 \001(\0132\017.RouteDisc" +
      "overyH\000\022&\n\014error_reason\030\003 \001(\0162\016.Routing." +
      "ErrorH\000\"\264\001\n\005Error\022\010\n\004NONE\020\000\022\014\n\010NO_ROUTE\020" +
      "\001\022\013\n\007GOT_NAK\020\002\022\013\n\007TIMEOUT\020\003\022\020\n\014NO_INTERF" +
      "ACE\020\004\022\022\n\016MAX_RETRANSMIT\020\005\022\016\n\nNO_CHANNEL\020" +
      "\006\022\r\n\tTOO_LARGE\020\007\022\017\n\013NO_RESPONSE\020\010\022\017\n\013BAD" +
      "_REQUEST\020 \022\022\n\016NOT_AUTHORIZED\020!B\t\n\007varian" +
      "t\"{\n\004Data\022\031\n\007portnum\030\001 \001(\0162\010.PortNum\022\017\n\007" +
      "payload\030\002 \001(\014\022\025\n\rwant_response\030\003 \001(\010\022\014\n\004" +
      "dest\030\004 \001(\007\022\016\n\006source\030\005 \001(\007\022\022\n\nrequest_id" +
      "\030\006 \001(\007\"\340\002\n\nMeshPacket\022\014\n\004from\030\001 \001(\007\022\n\n\002t" +
      "o\030\002 \001(\007\022\017\n\007channel\030\003 \001(\r\022\030\n\007decoded\030\004 \001(" +
      "\0132\005.DataH\000\022\023\n\tencrypted\030\005 \001(\014H\000\022\n\n\002id\030\006 " +
      "\001(\007\022\017\n\007rx_time\030\007 \001(\007\022\016\n\006rx_snr\030\010 \001(\002\022\021\n\t" +
      "hop_limit\030\n \001(\r\022\020\n\010want_ack\030\013 \001(\010\022&\n\010pri" +
      "ority\030\014 \001(\0162\024.MeshPacket.Priority\022\017\n\007rx_" +
      "rssi\030\r \001(\005\"[\n\010Priority\022\t\n\005UNSET\020\000\022\007\n\003MIN" +
      "\020\001\022\016\n\nBACKGROUND\020\n\022\013\n\007DEFAULT\020@\022\014\n\010RELIA" +
      "BLE\020F\022\007\n\003ACK\020x\022\007\n\003MAX\020\177B\020\n\016payloadVarian" +
      "t\"j\n\010NodeInfo\022\013\n\003num\030\001 \001(\r\022\023\n\004user\030\002 \001(\013" +
      "2\005.User\022\033\n\010position\030\003 \001(\0132\t.Position\022\013\n\003" +
      "snr\030\007 \001(\002\022\022\n\nlast_heard\030\004 \001(\007\"\313\002\n\nMyNode" +
      "Info\022\023\n\013my_node_num\030\001 \001(\r\022\017\n\007has_gps\030\002 \001" +
      "(\010\022\021\n\tnum_bands\030\003 \001(\r\022\024\n\014max_channels\030\017 " +
      "\001(\r\022\022\n\006region\030\004 \001(\tB\002\030\001\022\037\n\023hw_model_depr" +
      "ecated\030\005 \001(\tB\002\030\001\022\030\n\020firmware_version\030\006 \001" +
      "(\t\022&\n\nerror_code\030\007 \001(\0162\022.CriticalErrorCo" +
      "de\022\025\n\rerror_address\030\010 \001(\r\022\023\n\013error_count" +
      "\030\t \001(\r\022\024\n\014reboot_count\030\n \001(\r\022\034\n\024message_" +
      "timeout_msec\030\r \001(\r\022\027\n\017min_app_version\030\016 " +
      "\001(\r\"\265\001\n\tLogRecord\022\017\n\007message\030\001 \001(\t\022\014\n\004ti" +
      "me\030\002 \001(\007\022\016\n\006source\030\003 \001(\t\022\037\n\005level\030\004 \001(\0162" +
      "\020.LogRecord.Level\"X\n\005Level\022\t\n\005UNSET\020\000\022\014\n" +
      "\010CRITICAL\0202\022\t\n\005ERROR\020(\022\013\n\007WARNING\020\036\022\010\n\004I" +
      "NFO\020\024\022\t\n\005DEBUG\020\n\022\t\n\005TRACE\020\005\"\351\001\n\tFromRadi" +
      "o\022\013\n\003num\030\001 \001(\r\022\035\n\006packet\030\013 \001(\0132\013.MeshPac" +
      "ketH\000\022\036\n\007my_info\030\003 \001(\0132\013.MyNodeInfoH\000\022\036\n" +
      "\tnode_info\030\004 \001(\0132\t.NodeInfoH\000\022 \n\nlog_rec" +
      "ord\030\007 \001(\0132\n.LogRecordH\000\022\034\n\022config_comple" +
      "te_id\030\010 \001(\rH\000\022\022\n\010rebooted\030\t \001(\010H\000B\020\n\016pay" +
      "loadVariantJ\004\010\002\020\003J\004\010\006\020\007\"\341\001\n\007ToRadio\022\035\n\006p" +
      "acket\030\002 \001(\0132\013.MeshPacketH\000\022&\n\tpeer_info\030" +
      "\003 \001(\0132\021.ToRadio.PeerInfoH\000\022\030\n\016want_confi" +
      "g_id\030d \001(\rH\000\022\024\n\ndisconnect\030h \001(\010H\000\0325\n\010Pe" +
      "erInfo\022\023\n\013app_version\030\001 \001(\r\022\024\n\014mqtt_gate" +
      "way\030\002 \001(\010B\020\n\016payloadVariantJ\004\010\001\020\002J\004\010e\020fJ" +
      "\004\010f\020gJ\004\010g\020h*\240\002\n\rHardwareModel\022\t\n\005UNSET\020\000" +
      "\022\014\n\010TLORA_V2\020\001\022\014\n\010TLORA_V1\020\002\022\022\n\016TLORA_V2" +
      "_1_1p6\020\003\022\t\n\005TBEAM\020\004\022\017\n\013HELTEC_V2_0\020\005\022\014\n\010" +
      "TBEAM0p7\020\006\022\n\n\006T_ECHO\020\007\022\020\n\014TLORA_V1_1p3\020\010" +
      "\022\013\n\007RAK4631\020\t\022\017\n\013HELTEC_V2_1\020\n\022\021\n\rLORA_R" +
      "ELAY_V1\020 \022\016\n\nNRF52840DK\020!\022\007\n\003PPR\020\"\022\017\n\013GE" +
      "NIEBLOCKS\020#\022\021\n\rNRF52_UNKNOWN\020$\022\r\n\tPORTDU" +
      "INO\020%\022\017\n\013ANDROID_SIM\020&*.\n\tConstants\022\n\n\006U" +
      "nused\020\000\022\025\n\020DATA_PAYLOAD_LEN\020\355\001*\341\001\n\021Criti" +
      "calErrorCode\022\010\n\004None\020\000\022\016\n\nTxWatchdog\020\001\022\022" +
      "\n\016SleepEnterWait\020\002\022\013\n\007NoRadio\020\003\022\017\n\013Unspe" +
      "cified\020\004\022\023\n\017UBloxInitFailed\020\005\022\014\n\010NoAXP19" +
      "2\020\006\022\027\n\023InvalidRadioSetting\020\007\022\022\n\016Transmit" +
      "Failed\020\010\022\014\n\010Brownout\020\t\022\021\n\rSX1262Failure\020" +
      "\n\022\017\n\013RadioSpiBug\020\013BF\n\023com.geeksville.mes" +
      "hB\nMeshProtosH\003Z!github.com/meshtastic/g" +
      "omeshprotob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.geeksville.mesh.Portnums.getDescriptor(),
        });
    internal_static_Position_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Position_descriptor,
        new java.lang.String[] { "LatitudeI", "LongitudeI", "Altitude", "BatteryLevel", "Time", });
    internal_static_User_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_User_descriptor,
        new java.lang.String[] { "Id", "LongName", "ShortName", "Macaddr", "HwModel", "IsLicensed", });
    internal_static_RouteDiscovery_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_RouteDiscovery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RouteDiscovery_descriptor,
        new java.lang.String[] { "Route", });
    internal_static_Routing_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Routing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Routing_descriptor,
        new java.lang.String[] { "RouteRequest", "RouteReply", "ErrorReason", "Variant", });
    internal_static_Data_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_descriptor,
        new java.lang.String[] { "Portnum", "Payload", "WantResponse", "Dest", "Source", "RequestId", });
    internal_static_MeshPacket_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_MeshPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MeshPacket_descriptor,
        new java.lang.String[] { "From", "To", "Channel", "Decoded", "Encrypted", "Id", "RxTime", "RxSnr", "HopLimit", "WantAck", "Priority", "RxRssi", "PayloadVariant", });
    internal_static_NodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_NodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NodeInfo_descriptor,
        new java.lang.String[] { "Num", "User", "Position", "Snr", "LastHeard", });
    internal_static_MyNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_MyNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MyNodeInfo_descriptor,
        new java.lang.String[] { "MyNodeNum", "HasGps", "NumBands", "MaxChannels", "Region", "HwModelDeprecated", "FirmwareVersion", "ErrorCode", "ErrorAddress", "ErrorCount", "RebootCount", "MessageTimeoutMsec", "MinAppVersion", });
    internal_static_LogRecord_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_LogRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogRecord_descriptor,
        new java.lang.String[] { "Message", "Time", "Source", "Level", });
    internal_static_FromRadio_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_FromRadio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FromRadio_descriptor,
        new java.lang.String[] { "Num", "Packet", "MyInfo", "NodeInfo", "LogRecord", "ConfigCompleteId", "Rebooted", "PayloadVariant", });
    internal_static_ToRadio_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ToRadio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ToRadio_descriptor,
        new java.lang.String[] { "Packet", "PeerInfo", "WantConfigId", "Disconnect", "PayloadVariant", });
    internal_static_ToRadio_PeerInfo_descriptor =
      internal_static_ToRadio_descriptor.getNestedTypes().get(0);
    internal_static_ToRadio_PeerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ToRadio_PeerInfo_descriptor,
        new java.lang.String[] { "AppVersion", "MqttGateway", });
    com.geeksville.mesh.Portnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
